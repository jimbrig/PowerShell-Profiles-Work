<?xml version="1.0" encoding="utf-8"?>
<helpItems xmlns="http://msh" schema="maml">
  <!-- Updatable Help Version 5.0.0.0 -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Add-BitsFile</command:name>
      <maml:description>
        <maml:para>Adds one or more files to an existing BITS transfer job.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Add</command:verb>
      <command:noun>BitsFile</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>The Add-BitsFile cmdlet adds files to a Background Intelligent Transfer Service (BITS) transfer job. You can specify the files to add to the BITS transfer job by name at the command prompt or in a comma-separated value (CSV) file.</maml:para>
      <maml:para>Important: An upload job can contain only one file. To upload more than one file, use the Import-Csv cmdlet, and pipe the output to the Add-BitsFile cmdlet. For more information, see example 3 in this Help topic. Or, use a cabinet file (.cab) or a compressed file (.zip).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Add-BitsFile</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
          <maml:name>BitsJob</maml:name>
          <maml:description>
            <maml:para>Specifies the BITS transfer jobs to which you want to add files. You can pipe a value to this parameter from other cmdlets that return BitsJob objects, such as Get-BitsTransfer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">BitsJob[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none">
          <maml:name>Source</maml:name>
          <maml:description>
            <maml:para>Specifies the source location and the names of the files that you want to transfer. The source file names are paired with the corresponding destination file names. For instance, the first file name specified in the Source parameter corresponds to the first file name in the Destination parameter, and the second file name in the Source parameter corresponds to the second file name in the Destination parameter. The Source and Destination parameters must have the same number of elements; otherwise, the command produces an error. You can use standard wildcard characters such as the asterisk (*) and the question mark (?), or you can use a range operator such as "[a-r]".</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="3" aliases="none">
          <maml:name>Destination</maml:name>
          <maml:description>
            <maml:para>Specifies the destination location and the names of the files that you want to transfer. The destination names are paired with the corresponding source file names. For instance, the first file name specified in the Source parameter corresponds to the first file name in the Destination parameter, and the second file name in the Source  parameter corresponds to the second file name in the Destination parameter. The Source and Destination parameters must have the same number of elements; otherwise, the command produces an error.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
        <maml:name>BitsJob</maml:name>
        <maml:description>
          <maml:para>Specifies the BITS transfer jobs to which you want to add files. You can pipe a value to this parameter from other cmdlets that return BitsJob objects, such as Get-BitsTransfer.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">BitsJob[]</command:parameterValue>
        <dev:type>
          <maml:name>BitsJob[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="3" aliases="none">
        <maml:name>Destination</maml:name>
        <maml:description>
          <maml:para>Specifies the destination location and the names of the files that you want to transfer. The destination names are paired with the corresponding source file names. For instance, the first file name specified in the Source parameter corresponds to the first file name in the Destination parameter, and the second file name in the Source  parameter corresponds to the second file name in the Destination parameter. The Source and Destination parameters must have the same number of elements; otherwise, the command produces an error.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none">
        <maml:name>Source</maml:name>
        <maml:description>
          <maml:para>Specifies the source location and the names of the files that you want to transfer. The source file names are paired with the corresponding destination file names. For instance, the first file name specified in the Source parameter corresponds to the first file name in the Destination parameter, and the second file name in the Source parameter corresponds to the second file name in the Destination parameter. The Source and Destination parameters must have the same number of elements; otherwise, the command produces an error. You can use standard wildcard characters such as the asterisk (*) and the question mark (?), or you can use a range operator such as "[a-r]".</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.BackgroundIntelligentTransfer.Management.BitsJob[]</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet accepts one or more BitsJob objects as input that populates the BitsJob parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.BackgroundIntelligentTransfer.Management.BitsJob[]</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet generates the BitsJob objects that are associated with the BITS transfer jobs to which the files were added.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:terminatingErrors />
    <command:nonTerminatingErrors />
    <command:examples>
      <command:example>
        <maml:title>Example 1: Append a file to the transfer queue of an existing BITS transfer job</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Get-BitsTransfer -JobId 10778CFA-C1D7-4A82-8A9D-80B19224879C | Add-BitsFile -Source http://server01/servertestdir/testfile1.txt -Destination "c:\clienttestdir\testfile1.txt"
</dev:code>
        <dev:remarks>
          <maml:para>This command appends a file to the transfer queue of an existing BITS transfer job.</maml:para>
          <maml:para>In this example, the output of the Get-BitsTransfer cmdlet is a BitsJob object that is identified by its unique job ID. The command pipes the job ID to the Add-BitsFile cmdlet. The local and remote names of the file are in the parameters.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 2: Append a set of files to the transfer queue of an existing BITS transfer job</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;$Bits = Get-BitsTransfer -JobId 10778CFA-C1D7-4A82-8A9D-80B19224879C
PS C:\&gt; Add-BitsFile -BitsJob $Bits -Source "http://server01/servertestdir/testfile1.txt", "http://server01/servertestdir/testfile2.txt" -Destination "c:\clienttestdir\testfile1.txt", "c:\clienttestdir\testfile2.txt"
</dev:code>
        <dev:remarks>
          <maml:para>This command appends a set of files to the transfer queue of an existing BITS transfer job.</maml:para>
          <maml:para>The first command retrieves the BITS transfer job that is identified by the job ID and then stores it in the $b variable. The second command uses the BitsJob parameter to pass the BitsJob object that is stored in the $b variable to Add-BitsFile. </maml:para>
          <maml:para>The server file names are paired with the corresponding client file names.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 3: Add a set of files to the transfer queue of a new BITS transfer job</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;$Bits = Start-BitsTransfer -Suspended
PS C:\&gt; Import-CSV filelist.txt | Add-BitsFile -BitsJob $Bits
PS C:\&gt; Resume-BitsTransfer -BitsJob $Bits
</dev:code>
        <dev:remarks>
          <maml:para>This example adds a set of files to the transfer queue of a new BITS transfer job.</maml:para>
          <maml:para>The first command creates a new BitsJob object and then stores it in the $Bits variable.</maml:para>
          <maml:para>The second command uses the Import-CSV cmdlet to import a text file that contains a list of files to be transferred. The text file is converted to an array of objects (one per line) and passed through the pipeline to the Add-BitsFile cmdlet. The BitsJob parameter is used to pass the BitsJob object (the transfer job) that is stored in the $Bits variable to the Add-BitsFile cmdlet. This command also updates the transfer job with the list of files to be transferred.</maml:para>
          <maml:para>The third command passes the BitsJob object that is stored in the $Bits variable to the Resume-BitsTransfer cmdlet. The BITS transfer job is restarted, and the files that are specified in the Filelist.txt file are transferred from the source to the destination.</maml:para>
          <maml:para>The Import-CSV filelist.txt element of the second command imports a text file that contains the list of files to be transferred. Each line of this file specifies a file to be transferred, in the &lt;Source&gt;,&lt;Destination&gt; format. The text file is converted to an array of objects, one per line, and passed through the pipeline. In this example, the array of objects is passed to the Add-BitsFile cmdlet.</maml:para>
          <maml:para>The contents of the Filelist.txt file resemble the following information:</maml:para>
          <maml:para>Source, Destination
http://server01/servertestdir/testfile1.txt, c:\clienttestdir\testfile1.txt
http://server01/servertestdir/testfile2.txt, c:\clienttestdir\testfile2.txt
http://server01/servertestdir/testfile3.txt, c:\clienttestdir\testfile3.txt
http://server01/servertestdir/testfile4.txt, c:\clienttestdir\testfile4.txt</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Complete-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Resume-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Start-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Suspend-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Complete-BitsTransfer</command:name>
      <maml:description>
        <maml:para>Completes a BITS transfer job.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Complete</command:verb>
      <command:noun>BitsTransfer</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>The Complete-BitsTransfer cmdlet ends one or more Background Intelligent Transfer Service (BITS) transfer jobs and then saves the files on the client computer. If an error occurs, the associated BitsJob object is written to the error pipeline.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Complete-BitsTransfer</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="b">
          <maml:name>BitsJob</maml:name>
          <maml:description>
            <maml:para>Specifies the BITS transfer jobs to complete. You can pipe a value to this parameter from other cmdlets that return BitsJob objects, such as Get-BitsTransfer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">BitsJob[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="b">
        <maml:name>BitsJob</maml:name>
        <maml:description>
          <maml:para>Specifies the BITS transfer jobs to complete. You can pipe a value to this parameter from other cmdlets that return BitsJob objects, such as Get-BitsTransfer.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">BitsJob[]</command:parameterValue>
        <dev:type>
          <maml:name>BitsJob[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.BackgroundIntelligentTransfer.Management.BitsJob[]</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet accepts one or more BitsJob objects as input that populates the BitsJob parameter. </maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not generate any output. </maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:terminatingErrors />
    <command:nonTerminatingErrors />
    <command:examples>
      <command:example>
        <maml:title>Example 1: Complete all BITS transfer jobs owned by the current user</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>C:\PS&gt;Get-BitsTransfer | Complete-BitsTransfer
</dev:code>
        <dev:remarks>
          <maml:para>This command completes all the BITS transfer jobs that are owned by the current user.</maml:para>
          <maml:para>In this command, the output of the Get-BitsTransfer cmdlet is piped to the Complete-BitsTransfer cmdlet. The output is a set of BitsJob objects.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 2: Complete all BITS transfer jobs on the computer</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;$Bits = Get-BitsTransfer -AllUsers
PS C:\&gt; Complete-BitsTransfer -BitsJob $Bits
</dev:code>
        <dev:remarks>
          <maml:para>These commands complete all the BITS transfer jobs on the computer.</maml:para>
          <maml:para>The first command retrieves all the BitsJob objects on the computer and then stores them in the $Bits variable.</maml:para>
          <maml:para>The second command uses the BitsJob parameter to pass the BitsJob objects that are stored in the $Bits variable to the Complete-BitsTransfer cmdlet.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 3: Complete a BITS transfer job by display name</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Get-BitsTransfer -Name testjob1 | Complete-BitsTransfer
</dev:code>
        <dev:remarks>
          <maml:para>This command completes the BITS transfer job that is identified by the specified display name.</maml:para>
          <maml:para>The output of the Get-BitsTransfer cmdlet is a BitsJob object. This output is piped to the Complete-BitsTransfer cmdlet.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-BitsFile</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Resume-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Start-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Suspend-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-BitsTransfer</command:name>
      <maml:description>
        <maml:para>Gets the associated BitsJob object for an existing BITS transfer job.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>BitsTransfer</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>The Get-BitsTransfer cmdlet retrieves a set of Background Intelligent Transfer Service (BITS) transfer jobs. By default, the cmdlet returns the jobs that are owned by the current user. However, if you have administrative credentials, you can specify the AllUsers parameter so that the command returns jobs that are owned by all users. The returned jobs can be filtered by name or ID. The jobs are represented by BitsJob objects.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-BitsTransfer</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1" aliases="n">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies an array of BITS jobs based on job name. Only BITS jobs with job names that match a name in this array are returned. You can use standard wildcard characters  such as the asterisk (*) and the question mark (?). Or, you can use a range operator such as"[a-r]".</maml:para>
            <maml:para>For example, you can use any of the following commands:
</maml:para>
            <maml:para>Get-BitsTransfer -Name "BITS*"

Get-BitsTransfer -Name "BITS Transfer"

Get-BitsTransfer -Name "BITS Transfe[a-r]"
</maml:para>
            <maml:para>A combination of the wildcard character and range operators is also possible.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="all">
          <maml:name>AllUsers</maml:name>
          <maml:description>
            <maml:para>Indicates that this cmdlet gets BITS transfer jobs that are owned by all users. If this parameter is not specified, only jobs that are owned by the current user are returned. This parameter requires administrative credentials.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-BitsTransfer</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="id">
          <maml:name>JobId</maml:name>
          <maml:description>
            <maml:para>Specifies an array of BITS jobs by job ID. Only the BITS jobs that include a job ID in this array are returned. If BitsJob objects are piped to this cmdlet, their job IDs are used as the values of this parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">Guid[]</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="all">
        <maml:name>AllUsers</maml:name>
        <maml:description>
          <maml:para>Indicates that this cmdlet gets BITS transfer jobs that are owned by all users. If this parameter is not specified, only jobs that are owned by the current user are returned. This parameter requires administrative credentials.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="id">
        <maml:name>JobId</maml:name>
        <maml:description>
          <maml:para>Specifies an array of BITS jobs by job ID. Only the BITS jobs that include a job ID in this array are returned. If BitsJob objects are piped to this cmdlet, their job IDs are used as the values of this parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">Guid[]</command:parameterValue>
        <dev:type>
          <maml:name>Guid[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="1" aliases="n">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies an array of BITS jobs based on job name. Only BITS jobs with job names that match a name in this array are returned. You can use standard wildcard characters  such as the asterisk (*) and the question mark (?). Or, you can use a range operator such as"[a-r]".</maml:para>
          <maml:para>For example, you can use any of the following commands:
</maml:para>
          <maml:para>Get-BitsTransfer -Name "BITS*"

Get-BitsTransfer -Name "BITS Transfer"

Get-BitsTransfer -Name "BITS Transfe[a-r]"
</maml:para>
          <maml:para>A combination of the wildcard character and range operators is also possible.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.BackgroundIntelligentTransfer.Management.BitsJob[]</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet accepts one or more BitsJob objects as input that populates the JobId parameter (based on the property name).</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.BackgroundIntelligentTransfer.Management.BitsJob[]</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet generates the BitsJob objects that are associated with the retrieved BITS transfer jobs.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:terminatingErrors />
    <command:nonTerminatingErrors />
    <command:examples>
      <command:example>
        <maml:title>Example 1: Get all BitsJob objects owned by the current user</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Get-BitsTransfer
JobId                   DisplayName             TransferType            JobState                OwnerAccount
-----                   -----------             ------------            --------                ------------
07acbe90-7d25-4d05-a... TestJob2                Download                Suspended               DOMAIN01\user01
c0dd3d8c-c3a2-4562-8... TestJob1                Download                Transferred             DOMAIN01\user01
1ef8c549-7a92-4173-b... BitsJobTransfer         Download                Transferred             DOMAIN01\user01
2c8302d5-3f44-4981-8... BitsJobTransfer         Download                Transferred             DOMAIN01\user01
</dev:code>
        <dev:remarks>
          <maml:para>This command gets all the BitsJob objects that are owned by the current user.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 2: Get the BitsJob object identified by job ID</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Get-BitsTransfer -JobId C0DD3D8C-C3A2-4562-80B19224879C
JobId                   DisplayName             TransferType            JobState                OwnerAccount
-----                   -----------             ------------            --------                ------------
c0dd3d8c-c3a2-4562-8... TestJob1                Download                Transferred             DOMAIN01\user01
</dev:code>
        <dev:remarks>
          <maml:para>This command gets the BitsJob object that is identified by the specified job ID.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 3: Get all BitsJob objects with a specific display name</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Get-BitsTransfer -AllUsers -Name "*Microsoft*", "*Windows*"
JobId                   DisplayName             TransferType            JobState                OwnerAccount
-----                   -----------             ------------            --------                ------------
07acbe90-7d25-4d05-a... MicrosoftTest           Download                Suspended               DOMAIN01\user01
c0dd3d8c-c3a2-4562-8... WindowsTest             Download                Transferred             DOMAIN01\user02
</dev:code>
        <dev:remarks>
          <maml:para>This command gets all the BitsJob objects, owned by all users, where the DisplayName property of the BitsJob object contains either Microsoft or Windows. If the user does not have administrative credentials, this command returns an error because it uses the AllUsers parameter.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 4: Get a BitsJob object identified by a specific display name</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>C:\PS&gt;Get-BitsTransfer -Name "TestJob1"
JobId                   DisplayName             TransferType            JobState                OwnerAccount
-----                   -----------             ------------            --------                ------------
c0dd3d8c-c3a2-4562-8... TestJob1                Download                Transferred             DOMAIN01\user01
</dev:code>
        <dev:remarks>
          <maml:para>This command gets the BitsJob object that is identified by the specified display name.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-BitsFile</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Complete-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Resume-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Start-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Suspend-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-BitsTransfer</command:name>
      <maml:description>
        <maml:para>Cancels a BITS transfer job.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Remove</command:verb>
      <command:noun>BitsTransfer</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>The Remove-BitsTransfer cmdlet cancels a Background Intelligent Transfer Service (BITS) transfer job. It deletes the underlying transfer job, removes any temporary files from the client, and deletes the associated BitsJob object.</maml:para>
      <maml:para>When the Remove-BitsTransfer cmdlet cancels a transfer job, it deletes all the transfers. Consider a scenario is which you are transferring three files. One file is completely transferred, one file is pending, and one file is currently being transferred. In this scenario, Remove-BitsTransfer cancels the whole transfer and deletes the underlying files. Any files that were already transferred are not available after you use the Remove-BitsTransfer cmdlet to cancel the transfer job. Optionally, you can use the Complete-BitsTransfer cmdlet to commit any files that are completely downloaded and to cancel the pending and current transfers. The transferred file is not be deleted and is available.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-BitsTransfer</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="b">
          <maml:name>BitsJob</maml:name>
          <maml:description>
            <maml:para>Specifies an array of BITS transfer jobs to cancel. You can pipe a value to this parameter from other cmdlets that return BitsJob objects, such as the Get-BitsTransfer cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">BitsJob[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="b">
        <maml:name>BitsJob</maml:name>
        <maml:description>
          <maml:para>Specifies an array of BITS transfer jobs to cancel. You can pipe a value to this parameter from other cmdlets that return BitsJob objects, such as the Get-BitsTransfer cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">BitsJob[]</command:parameterValue>
        <dev:type>
          <maml:name>BitsJob[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.BackgroundIntelligentTransfer.Management.BitsJob[]</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet accepts one or more BitsJob objects as input that populates the BitsJob parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not generate any output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:terminatingErrors />
    <command:nonTerminatingErrors />
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>After a job is removed or completed, any job objects that were previously cached in variables or in scripts are no longer valid.</maml:para>
      </maml:alert>
      <maml:alert>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>Example 1: Cancel all BITS transfer jobs owned by the current user</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Get-BitsTransfer | Remove-BitsTransfer
</dev:code>
        <dev:remarks>
          <maml:para>This command cancels all the BITS transfer jobs that are owned by the current user.</maml:para>
          <maml:para>The output of the Get-BitsTransfer cmdlet is piped to the Remove-BitsTransfer cmdlet. The output is a set of BitsJob objects.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 2: Cancel all BITS transfer jobs on the computer</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>C:\PS&gt;$Bits = Get-BitsTransfer -AllUsers
PS C:\&gt; Remove-BitsTransfer -BitsJob $Bits
</dev:code>
        <dev:remarks>
          <maml:para>This command cancels all the BITS transfer jobs on the computer.</maml:para>
          <maml:para>The first command gets all the BitsJob objects on the computer and then stores them in the $Bits variable.</maml:para>
          <maml:para>The second command uses the BitsJob parameter to pass the BitsJob objects that are stored in the $Bits variable to the Remove-BitsTransfer cmdlet.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-BitsFile</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Complete-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Resume-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Start-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Suspend-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Resume-BitsTransfer</command:name>
      <maml:description>
        <maml:para>Resumes a BITS transfer job.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Resume</command:verb>
      <command:noun>BitsTransfer</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>The Resume-BitsTransfer cmdlet resumes one or more suspended Background Intelligent Transfer Service (BITS) transfer jobs. If the BITS transfer is already in process, the cmdlet does nothing. You can view the current state of a transfer job through the Get-BitsTransfer cmdlet.</maml:para>
      <maml:para>By default, the Resume-BitsTransfer cmdlet restarts the transfer job synchronously even if the original job was specified as an asynchronous transfer job. You could use this behavior to convert an asynchronous transfer job into a synchronous transfer job. You could do this if either of the following conditions is true:</maml:para>
      <maml:para>- The asynchronous transfer job was created outside cmdlets.

- The asynchronous transfer job was created through the Start-BitsTransfer cmdlet.
</maml:para>
      <maml:para>If you want to restart the transfer job as an asynchronous transfer, use the Asynchronous parameter.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Resume-BitsTransfer</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="b">
          <maml:name>BitsJob</maml:name>
          <maml:description>
            <maml:para>Specifies an array of BITS transfer jobs to resume. You can pipe a value to this parameter from other cmdlets that return BitsJob objects, such as the Get-BitsTransfer cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">BitsJob[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="as">
          <maml:name>Asynchronous</maml:name>
          <maml:description>
            <maml:para>Indicates that the cmdlet processes the BITS transfer job in the background. The command prompt reappears immediately after the BITS transfer job is resumed. The returned BitsJob object can be used to monitor status and progress.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="as">
        <maml:name>Asynchronous</maml:name>
        <maml:description>
          <maml:para>Indicates that the cmdlet processes the BITS transfer job in the background. The command prompt reappears immediately after the BITS transfer job is resumed. The returned BitsJob object can be used to monitor status and progress.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="b">
        <maml:name>BitsJob</maml:name>
        <maml:description>
          <maml:para>Specifies an array of BITS transfer jobs to resume. You can pipe a value to this parameter from other cmdlets that return BitsJob objects, such as the Get-BitsTransfer cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">BitsJob[]</command:parameterValue>
        <dev:type>
          <maml:name>BitsJob[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.BackgroundIntelligentTransfer.Management.BitsJob[]</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet accepts one or more BitsJob objects as input that populates the BitsJob parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.BackgroundIntelligentTransfer.Management.BitsJob[]</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>When called with the Asynchronous parameter, this cmdlet sends the BitsJob object that is associated with the resumed BITS transfer job as output. Otherwise, no output is generated.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:terminatingErrors />
    <command:nonTerminatingErrors />
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>You can cancel a transfer job that is running in synchronous mode (foreground priority) by pressing CTRL+C.</maml:para>
      </maml:alert>
      <maml:alert>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>Example 1: Resume all BITS transfer jobs owned by the current user</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Get-BitsTransfer | Resume-BitsTransfer
</dev:code>
        <dev:remarks>
          <maml:para>This command resumes all the BITS transfer jobs that are owned by the current user.</maml:para>
          <maml:para>The command prompt returns after the jobs are complete or after the jobs enter an error state. The output of the Get-BitsTransfer cmdlet is a set of BitsJob objects. This output is piped to the Resume-BitsTransfer cmdlet. If any of the BITS transfer jobs are already active, they will continue to run.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 2: Resume a new BITS transfer job that was initially suspended</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;$Bits = Start-BitsTransfer -DisplayName "MyJob" -Suspended
PS C:\&gt; Add-BitsTransfer -BitsJob $Bits  -ClientFileName C:\myFile -ServerFileName http://www.mysite.com/file1
PS C:\&gt; Resume-BitsTransfer -BitsJob $Bits -Asynchronous
</dev:code>
        <dev:remarks>
          <maml:para>This command resumes a new BITS transfer job that was initially suspended, and it returns the command prompt immediately.</maml:para>
          <maml:para>The first command creates a new BitsJob object in a suspended state and then stores it in the $Bits variable.</maml:para>
          <maml:para>The second command adds a file to the transfer queue of the new BitsJob object that is stored in the $Bits variable. </maml:para>
          <maml:para>The third command uses the BitsJob parameter to pass the BitsJob object that is stored in the $Bits variable to the Resume-BitsTransfer cmdlet. This command starts the BITS transfer job.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 3: Resume the BITS transfer by the specified display name</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Get-BitsTransfer -Name "TestJob01" | Resume-BitsTransfer
</dev:code>
        <dev:remarks>
          <maml:para>This command resumes the BITS transfer that is identified by the display name named TestJob01.</maml:para>
          <maml:para>The command prompt returns after the job is complete or after the job enters an error state. The output of the Get-BitsTransfer cmdlet is a BitsJob object. This output is piped to the Resume-BitsTransfer cmdlet. If the BITS transfer job is already active, it continues to run.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-BitsFile</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Complete-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Start-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Suspend-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-BitsTransfer</command:name>
      <maml:description>
        <maml:para>Modifies the properties of an existing BITS transfer job.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Set</command:verb>
      <command:noun>BitsTransfer</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>The Set-BitsTransfer cmdlet modifies the properties of an existing Background Intelligent Transfer Service (BITS) transfer job. You can specify the job that you want to modify in the BitsJob parameter. Or, you can specify the job by passing it through the pipeline.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-BitsTransfer</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="b">
          <maml:name>BitsJob</maml:name>
          <maml:description>
            <maml:para>Specifies an array of BITS transfer jobs on which this cmdlet sets properties. You can pipe a value to this parameter from other cmdlets that return BitsJob objects, such as Get-BitsTransfer</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">BitsJob[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="au">
          <maml:name>Authentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to be used at the server. The acceptable values for this parameter are:</maml:para>
            <maml:para>-- Basic: Basic is a scheme in which the user name and password are sent in clear text to the server or proxy.

-- Digest: Digest is a challenge-response scheme that uses a server-specified data string for the challenge.

-- NTLM: NT LAN Manager (NTLM) is a challenge-response scheme that uses the credentials of the user for authentication in a Windows-based network environment.

-- Negotiate (the default): Negotiate is a challenge-response scheme that negotiates with the server or proxy to determine which scheme to use for authentication. For example, this parameter value allows negotiation to determine whether the Kerberos protocol or NTLM is used.

-- Passport: Passport is a centralized authentication service provided by Microsoft that offers a single logon for member sites.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Digest</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Ntlm</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Passport</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="cred">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the credentials to use to authenticate the user at the server. The default is the current user. Type a user name, such as "User01", "Domain01\User01", or "User@Contoso.com". Or, use the Get-Credential cmdlet to create the value for this parameter. When you type a user name, you are prompted for a password.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">PSCredential</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="d">
          <maml:name>Description</maml:name>
          <maml:description>
            <maml:para>Specifies a description for the BITS transfer job. The description is limited to 1,024 characters.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="dn">
          <maml:name>DisplayName</maml:name>
          <maml:description>
            <maml:para>Specifies a display name for the BITS transfer job. The display name provides a user-friendly way to differentiate BITS transfer jobs.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="p">
          <maml:name>Priority</maml:name>
          <maml:description>
            <maml:para>Specifies the priority of the BITS transfer job, which affects bandwidth usage. The acceptable values for this parameter are:</maml:para>
            <maml:para>-- Foreground (default): Transfers the job in the foreground. Foreground transfers compete for network bandwidth with other applications, which can impede the user's overall network experience. However, if the Start-BitsTransfer cmdlet is being used interactively, this is likely the best option. This is the highest priority level.

-- High: Transfers the job in the background with a high priority. Background transfers use the idle network bandwidth of the client computer to transfer files.

-- Normal: Transfers the job in the background with a normal priority. Background transfers use the idle network bandwidth of the client computer to transfer files.

-- Low: Transfers the job in the background with a low priority. Background transfers use the idle network bandwidth of the client to transfer files. This is the lowest background priority level.
</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Foreground</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">High</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Normal</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Low</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="pa">
          <maml:name>ProxyAuthentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to use at the Web proxy. The acceptable values for this parameter are:</maml:para>
            <maml:para>-- Basic: Basic is a scheme in which the user name and password are sent in clear text to the server or proxy.

-- Digest: Digest is a challenge-response scheme that uses a server-specified data string for the challenge.

-- NTLM: NTLM is a challenge-response scheme that uses the credentials of the user for authentication in a Windows-based network environment.

-- Negotiate (the default): Negotiate is a challenge-response scheme that negotiates with the server or proxy to determine which scheme to use for authentication. For instance, this parameter value allows negotiation to determine whether the Kerberos protocol or NTLM is used.

-- Passport: Passport is a centralized authentication service provided by Microsoft that offers a single logon for member sites.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Digest</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Ntlm</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Passport</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="pb">
          <maml:name>ProxyBypass</maml:name>
          <maml:description>
            <maml:para>Specifies a list of host names to use for a direct connection. The hosts in the list are tried in order until a successful connection is achieved. If you specify this parameter the cmdlet bypasses the proxy. If this parameter is used, the ProxyUsage parameter must be set to Override; otherwise, an error occurs.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="pc">
          <maml:name>ProxyCredential</maml:name>
          <maml:description>
            <maml:para>Specifies the credentials to use to authenticate the user at the proxy. You can use the Get-Credential cmdlet to create a value for this parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">PSCredential</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="pl">
          <maml:name>ProxyList</maml:name>
          <maml:description>
            <maml:para>Specifies an array of proxies to use. The proxies in the list are tried in order until a successful connection is achieved. If this parameter is specified and ProxyUsage is set to a value other than Override, an error occurs.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Uri[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="pu">
          <maml:name>ProxyUsage</maml:name>
          <maml:description>
            <maml:para>Specifies the proxy usage settings. The acceptable values for this parameter are:</maml:para>
            <maml:para>-- SystemDefault (the default): Use the system default proxy settings.

-- NoProxy: Do not use a proxy to transfer the files. Use this option when you transfer files within a local area network (LAN).

-- AutoDetect: Automatically detect proxy settings. BITS detects proxy settings for each file in the job.

-- Override: Specify the proxies or servers to use. If the ProxyList parameter is also specified, the proxies in that list are used. If the ProxyBypass parameter is also specified, the servers in that list are used. In both cases, the first member of the list is used. If the first member is unreachable, the subsequent members are tried until a member is contacted successfully.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">SystemDefault</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NoProxy</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutoDetect</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Override</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>RetryInterval</maml:name>
          <maml:description>
            <maml:para>Specifies the minimum length of time, in seconds, that BITS waits before it attempts to transfer the file after BITS encounters a transient error. The minimum allowed value is 60 seconds. If this value exceeds the RetryTimeout value from the BitsJob object, BITS will not retry the transfer. Instead, BITS sets the state of the BITS transfer job to the Error state.</maml:para>
            <maml:para>The default is 600 seconds (10 minutes).</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>RetryTimeout</maml:name>
          <maml:description>
            <maml:para>Specifies the length of time, in seconds, that BITS attempts to transfer the file after the first transient error occurs. Setting the retry period to 0 prevents retries. If the retry period value exceeds the JobInactivityTimeout Group Policy setting (90-day default), BITS cancels the job.</maml:para>
            <maml:para>The default value is 1,209,600 seconds (14 days).</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="so">
          <maml:name>SetOwnerToCurrentUser</maml:name>
          <maml:description>
            <maml:para>Indicates that the cmdlet sets the owner of the BITS transfer job to the current user.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>TransferPolicy</maml:name>
          <maml:description>
            <maml:para>Specifies the network cost states in which the transfer is allowed to be scheduled. The current cost state of the network is a bitmask that indicates the kinds of charges that would be incurred if a transfer was scheduled at this time. This cost state represents a bitmask; if the bit corresponding to the current network cost state is set, the transfer can be scheduled. If the bit corresponding to the current network cost state is not set, the transfer is ignored for scheduling purposes. You can submit any of the named values listed here, or add them together to provide a custom value.</maml:para>
            <maml:para>The acceptable values for this parameter are:

-- Unrestricted (or unknown) : 0x00000001 : the cost state for this network is not known.

-- Capped : 0x00000002 : the cost state for this network is a capped plan, or a plan that has a data usage limit.

-- BelowCap : 0x00000004 : the cost state for this network is below the data plan cap.

-- NearCap : 0x00000008 : the cost state for this network is near the data plan cap.

-- OverCapCharged : 0x00000010 : the cost state for this network is above the data plan cap, and such usage is charged.

-- OverCapThrottled : 0x00000020 : the cost state for this network is above the data plan cap, and such usage is throttled.

-- UsageBased : 0x00000040 : the cost state for this network is charged based on usage.

-- Roaming : 0x00000080 : the cost state for this network incurs roaming charges. 

The cost state also includes one option (IgnoreCongestion) and a set of standard policies (Uncosted, Standard, NoSurcharge, NotRoaming, and Always) which are combinations of the discrete bit values.

-- IgnoreCongestion : 0x80000000 : the job can be scheduled even if the network provider reports that the network is congested.

-- PolicyUnrestricted : 0x80000021 : the set of cost states that do not consume the quota of a capped plan, or incur extra charges.

-- Standard : 0x80000067 : a set of cost states suitable for moderate-priority transfers.

-- NoSurcharge : 0x8000006f : the set of cost states that incur no surcharge for use.

-- NotRoaming : 0x8000007f : the set of cost states that exclude the roaming state.

-- Always : 0x800000ff : the set of all cost states.</maml:para>
            <maml:para>The default value is determined by a combination of job priority and group policy.  If this value is not explicitly set, it can vary when job priority or current group policy are modified.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Always</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">BelowCap</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Capped</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">IgnoreCongestion</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NearCap</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NoSurcharge</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotRoaming</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">OverCapCharged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">OverCapThrottled</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PolicyUnrestricted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Roaming</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Standard</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unrestricted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UsageBased</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>UseStoredCredential</maml:name>
          <maml:description>
            <maml:para>Specifies that credentials stored in the Windows Credential Manager should be used for authentication when required for the specified target server type. If this parameter is not specified and a server requires authentication, then explicit credentials must be included by using the Credential or ProxyCredential parameters. This parameter is a flag parameter whose values can be added together to create the desired behavior.</maml:para>
            <maml:para>The acceptable values for this parameter are:</maml:para>
            <maml:para>-- None: Use only credentials provided by the Credential or ProxyCredential parameters. This is the default behavior if the parameter is not specified.

-- Proxy: Credentials stored in the Windows Credential Manager are used for authentication for any proxy server that requires authentication. If no credentials in the Windows Credential Manager match the proxy server needing authentication, then you must specify credentials by using the ProxyCredential parameter.

-- Server: This value is not supported and generates an error if specified.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Proxy</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Server</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="au">
        <maml:name>Authentication</maml:name>
        <maml:description>
          <maml:para>Specifies the authentication mechanism to be used at the server. The acceptable values for this parameter are:</maml:para>
          <maml:para>-- Basic: Basic is a scheme in which the user name and password are sent in clear text to the server or proxy.

-- Digest: Digest is a challenge-response scheme that uses a server-specified data string for the challenge.

-- NTLM: NT LAN Manager (NTLM) is a challenge-response scheme that uses the credentials of the user for authentication in a Windows-based network environment.

-- Negotiate (the default): Negotiate is a challenge-response scheme that negotiates with the server or proxy to determine which scheme to use for authentication. For example, this parameter value allows negotiation to determine whether the Kerberos protocol or NTLM is used.

-- Passport: Passport is a centralized authentication service provided by Microsoft that offers a single logon for member sites.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="b">
        <maml:name>BitsJob</maml:name>
        <maml:description>
          <maml:para>Specifies an array of BITS transfer jobs on which this cmdlet sets properties. You can pipe a value to this parameter from other cmdlets that return BitsJob objects, such as Get-BitsTransfer</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">BitsJob[]</command:parameterValue>
        <dev:type>
          <maml:name>BitsJob[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="cred">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies the credentials to use to authenticate the user at the server. The default is the current user. Type a user name, such as "User01", "Domain01\User01", or "User@Contoso.com". Or, use the Get-Credential cmdlet to create the value for this parameter. When you type a user name, you are prompted for a password.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="d">
        <maml:name>Description</maml:name>
        <maml:description>
          <maml:para>Specifies a description for the BITS transfer job. The description is limited to 1,024 characters.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="dn">
        <maml:name>DisplayName</maml:name>
        <maml:description>
          <maml:para>Specifies a display name for the BITS transfer job. The display name provides a user-friendly way to differentiate BITS transfer jobs.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="p">
        <maml:name>Priority</maml:name>
        <maml:description>
          <maml:para>Specifies the priority of the BITS transfer job, which affects bandwidth usage. The acceptable values for this parameter are:</maml:para>
          <maml:para>-- Foreground (default): Transfers the job in the foreground. Foreground transfers compete for network bandwidth with other applications, which can impede the user's overall network experience. However, if the Start-BitsTransfer cmdlet is being used interactively, this is likely the best option. This is the highest priority level.

-- High: Transfers the job in the background with a high priority. Background transfers use the idle network bandwidth of the client computer to transfer files.

-- Normal: Transfers the job in the background with a normal priority. Background transfers use the idle network bandwidth of the client computer to transfer files.

-- Low: Transfers the job in the background with a low priority. Background transfers use the idle network bandwidth of the client to transfer files. This is the lowest background priority level.
</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="pa">
        <maml:name>ProxyAuthentication</maml:name>
        <maml:description>
          <maml:para>Specifies the authentication mechanism to use at the Web proxy. The acceptable values for this parameter are:</maml:para>
          <maml:para>-- Basic: Basic is a scheme in which the user name and password are sent in clear text to the server or proxy.

-- Digest: Digest is a challenge-response scheme that uses a server-specified data string for the challenge.

-- NTLM: NTLM is a challenge-response scheme that uses the credentials of the user for authentication in a Windows-based network environment.

-- Negotiate (the default): Negotiate is a challenge-response scheme that negotiates with the server or proxy to determine which scheme to use for authentication. For instance, this parameter value allows negotiation to determine whether the Kerberos protocol or NTLM is used.

-- Passport: Passport is a centralized authentication service provided by Microsoft that offers a single logon for member sites.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="pb">
        <maml:name>ProxyBypass</maml:name>
        <maml:description>
          <maml:para>Specifies a list of host names to use for a direct connection. The hosts in the list are tried in order until a successful connection is achieved. If you specify this parameter the cmdlet bypasses the proxy. If this parameter is used, the ProxyUsage parameter must be set to Override; otherwise, an error occurs.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="pc">
        <maml:name>ProxyCredential</maml:name>
        <maml:description>
          <maml:para>Specifies the credentials to use to authenticate the user at the proxy. You can use the Get-Credential cmdlet to create a value for this parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="pl">
        <maml:name>ProxyList</maml:name>
        <maml:description>
          <maml:para>Specifies an array of proxies to use. The proxies in the list are tried in order until a successful connection is achieved. If this parameter is specified and ProxyUsage is set to a value other than Override, an error occurs.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Uri[]</command:parameterValue>
        <dev:type>
          <maml:name>Uri[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="pu">
        <maml:name>ProxyUsage</maml:name>
        <maml:description>
          <maml:para>Specifies the proxy usage settings. The acceptable values for this parameter are:</maml:para>
          <maml:para>-- SystemDefault (the default): Use the system default proxy settings.

-- NoProxy: Do not use a proxy to transfer the files. Use this option when you transfer files within a local area network (LAN).

-- AutoDetect: Automatically detect proxy settings. BITS detects proxy settings for each file in the job.

-- Override: Specify the proxies or servers to use. If the ProxyList parameter is also specified, the proxies in that list are used. If the ProxyBypass parameter is also specified, the servers in that list are used. In both cases, the first member of the list is used. If the first member is unreachable, the subsequent members are tried until a member is contacted successfully.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>RetryInterval</maml:name>
        <maml:description>
          <maml:para>Specifies the minimum length of time, in seconds, that BITS waits before it attempts to transfer the file after BITS encounters a transient error. The minimum allowed value is 60 seconds. If this value exceeds the RetryTimeout value from the BitsJob object, BITS will not retry the transfer. Instead, BITS sets the state of the BITS transfer job to the Error state.</maml:para>
          <maml:para>The default is 600 seconds (10 minutes).</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>RetryTimeout</maml:name>
        <maml:description>
          <maml:para>Specifies the length of time, in seconds, that BITS attempts to transfer the file after the first transient error occurs. Setting the retry period to 0 prevents retries. If the retry period value exceeds the JobInactivityTimeout Group Policy setting (90-day default), BITS cancels the job.</maml:para>
          <maml:para>The default value is 1,209,600 seconds (14 days).</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="so">
        <maml:name>SetOwnerToCurrentUser</maml:name>
        <maml:description>
          <maml:para>Indicates that the cmdlet sets the owner of the BITS transfer job to the current user.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>TransferPolicy</maml:name>
        <maml:description>
          <maml:para>Specifies the network cost states in which the transfer is allowed to be scheduled. The current cost state of the network is a bitmask that indicates the kinds of charges that would be incurred if a transfer was scheduled at this time. This cost state represents a bitmask; if the bit corresponding to the current network cost state is set, the transfer can be scheduled. If the bit corresponding to the current network cost state is not set, the transfer is ignored for scheduling purposes. You can submit any of the named values listed here, or add them together to provide a custom value.</maml:para>
          <maml:para>The acceptable values for this parameter are:

-- Unrestricted (or unknown) : 0x00000001 : the cost state for this network is not known.

-- Capped : 0x00000002 : the cost state for this network is a capped plan, or a plan that has a data usage limit.

-- BelowCap : 0x00000004 : the cost state for this network is below the data plan cap.

-- NearCap : 0x00000008 : the cost state for this network is near the data plan cap.

-- OverCapCharged : 0x00000010 : the cost state for this network is above the data plan cap, and such usage is charged.

-- OverCapThrottled : 0x00000020 : the cost state for this network is above the data plan cap, and such usage is throttled.

-- UsageBased : 0x00000040 : the cost state for this network is charged based on usage.

-- Roaming : 0x00000080 : the cost state for this network incurs roaming charges. 

The cost state also includes one option (IgnoreCongestion) and a set of standard policies (Uncosted, Standard, NoSurcharge, NotRoaming, and Always) which are combinations of the discrete bit values.

-- IgnoreCongestion : 0x80000000 : the job can be scheduled even if the network provider reports that the network is congested.

-- PolicyUnrestricted : 0x80000021 : the set of cost states that do not consume the quota of a capped plan, or incur extra charges.

-- Standard : 0x80000067 : a set of cost states suitable for moderate-priority transfers.

-- NoSurcharge : 0x8000006f : the set of cost states that incur no surcharge for use.

-- NotRoaming : 0x8000007f : the set of cost states that exclude the roaming state.

-- Always : 0x800000ff : the set of all cost states.</maml:para>
          <maml:para>The default value is determined by a combination of job priority and group policy.  If this value is not explicitly set, it can vary when job priority or current group policy are modified.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">CostStates</command:parameterValue>
        <dev:type>
          <maml:name>CostStates</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>UseStoredCredential</maml:name>
        <maml:description>
          <maml:para>Specifies that credentials stored in the Windows Credential Manager should be used for authentication when required for the specified target server type. If this parameter is not specified and a server requires authentication, then explicit credentials must be included by using the Credential or ProxyCredential parameters. This parameter is a flag parameter whose values can be added together to create the desired behavior.</maml:para>
          <maml:para>The acceptable values for this parameter are:</maml:para>
          <maml:para>-- None: Use only credentials provided by the Credential or ProxyCredential parameters. This is the default behavior if the parameter is not specified.

-- Proxy: Credentials stored in the Windows Credential Manager are used for authentication for any proxy server that requires authentication. If no credentials in the Windows Credential Manager match the proxy server needing authentication, then you must specify credentials by using the ProxyCredential parameter.

-- Server: This value is not supported and generates an error if specified.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">AuthenticationTargetValue</command:parameterValue>
        <dev:type>
          <maml:name>AuthenticationTargetValue</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.BackgroundIntelligentTransfer.Management.BitsJob[]</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet accepts one or more BitsJob objects as input that populates the BitsJob parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.BackgroundIntelligentTransfer.Management.BitsJob[]</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet generates the BitsJob objects that are associated with the BITS transfer jobs that were modified.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:terminatingErrors />
    <command:nonTerminatingErrors />
    <command:examples>
      <command:example>
        <maml:title>Example 1: Modify the priority of a BITS transfer job</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;$Bits = Get-BitsTransfer -JobId 10778CFA-C1D7-4A82-8A9D-80B19224879C
PS C:\&gt; Set-BitsTransfer -BitsJob $Bits -Priority High
</dev:code>
        <dev:remarks>
          <maml:para>This command modifies the priority of an existing BITS transfer job.</maml:para>
          <maml:para>The first command retrieves the BITS transfer job specified by the JobId parameter and then stores it in the $Bits variable.</maml:para>
          <maml:para>The second command uses the BitsJobparameter to pass the BitsJob object stored in the $Bits variable to the Set-BitsTransfer cmdlet. The Priority parameter is used to set the priority of the BITS transfer job to High.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 2: Set the owner of a set of BITS transfer jobs</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Get-BitsTransfer -AllUsers -Name *Microsoft* | Set-BitsTransfer -SetOwnerToCurrentUser
</dev:code>
        <dev:remarks>
          <maml:para>This command makes the current user the owner of a set of existing BITS transfer jobs.</maml:para>
          <maml:para>The output of the Get-BitsTransfer cmdlet is a set of BitsJob objects whose display name contains Microsoft. This output is passed to the Set-BitsTransfer cmdlet through the pipeline. The SetOwnerToCurrentUser parameter specifies that the owner of each BITS transfer job is the current user.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 3: Modify the proxy settings of a BITS transfer job</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;$Bits = Get-BitsTransfer -JobId 10778CFA-C1D7-4A82-8A9D-80B19224879C
PS C:\&gt;$Cred = Get-Credential
PS C:\&gt;Set-BitsTransfer -BitsJob $Bits -ProxyUsage AutoDetect -ProxyAuthentication $Cred
</dev:code>
        <dev:remarks>
          <maml:para>This command modifies the proxy settings of an existing BITS transfer job. </maml:para>
          <maml:para>The first command retrieves the BITS transfer job identified by the JobId parameter and then stores it in the variable named $Bits. </maml:para>
          <maml:para>The second command retrieves credentials from the user and then stores them in the $Cred variable.
</maml:para>
          <maml:para>The third command uses the BitsJob parameter to pass the BitsJob object stored in the $Bits variable to the Set-BitsTransfer cmdlet. It uses the ProxyAuthentication parameter to pass the PSCredential object stored in the $Cred variable. The ProxyUsage parameter allows the BITS transfer job to automatically discover the Web proxy server by using the Web Proxy Autodiscovery Protocol (WPAD) protocol. The supplied set of credentials is used to authenticate the user at the proxy server.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 4: Modify the proxy settings of a BITS transfer job using a proxy list and proxy bypass</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Get-BitsTransfer | Set-BitsTransfer -ProxyUsage Override -ProxyList "http://proxy1", "http://proxy2:81" -ProxyBypass "http://directconnect"
</dev:code>
        <dev:remarks>
          <maml:para>This command modifies the proxy settings of an existing BITS transfer job.</maml:para>
          <maml:para>The output of the Get-BitsTransfer cmdlet is the set of BitsJob objects that are owned by the current user. This output is piped to the Set-BitsTransfer cmdlet. The Override value that is specified in the ProxyUsage parameter indicates that an explicit list of proxy server and bypassed host names are provided.</maml:para>
          <maml:para>The ProxyList parameter specifies two proxy servers. The first server in the list (http://proxy1) is used. If that connection fails, the command tries the connection by using the second server in the list (http://proxy2:81). If both connections fail, the job fails.</maml:para>
          <maml:para>When a list of host names is specified in the ProxyBypass parameter, the connection that is made is a direct connection that does not use a proxy server. In this example, no proxy server is used to add a file to the BITS transfer queue on the directconnect server.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-BitsFile</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Complete-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Resume-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Start-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Suspend-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Start-BitsTransfer</command:name>
      <maml:description>
        <maml:para>Creates a BITS transfer job.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Start</command:verb>
      <command:noun>BitsTransfer</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>The Start-BitsTransfer cmdlet creates a Background Intelligent Transfer Service (BITS) transfer job to transfer one or more files between a client computer and a server. The TransferType parameter specifies the direction of the transfer. By default, after the cmdlet begins the transfer, the command prompt is not available until the transfer is complete or until the transfer enters an error state. If the state of the returned BitsJob object is Error, the error code and description are contained in the object and can be used for analysis.</maml:para>
      <maml:para>The Start-BitsTransfer cmdlet supports the download of multiple files from a server to a client computer, but it does not generally support the upload of multiple files from a client computer to a server. If you need to upload more than one file, you can use the Import-Csv cmdlet to pipe the output to the Add-BitsFile cmdlet to upload multiple files. Or, if you need to upload more than one file, consider a cabinet file (.cab) or a compressed file (.zip).</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Start-BitsTransfer</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none">
          <maml:name>Source</maml:name>
          <maml:description>
            <maml:para>Specifies the source location and the names of the files that you want to transfer. The source file names are paired with the corresponding destination file names. For example, the first file name specified in the Source parameter corresponds to the first file name in the Destination parameter, and the second file name in the Source parameter corresponds to the second file name in the Destination parameter. The Source and Destination parameters must have the same number of elements; otherwise, the command produces an error. You can use standard wildcard characters such as the asterisk (*) and the question mark (?). Or, you can use a range operator such as "[a-r]".</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none">
          <maml:name>Destination</maml:name>
          <maml:description>
            <maml:para>Specifies an array that contains the destination location and the names of the files that you want to transfer. The destination names are paired with the corresponding source file names. For example, the first file name specified in the Source parameter corresponds to the first file name in the Destination parameter, and the second file name in the Source parameter corresponds to the second file name in the Destination parameter. The Source and Destination parameters must have the same number of elements; otherwise, the command produces an error.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>Asynchronous</maml:name>
          <maml:description>
            <maml:para>Indicates that the cmdlet creates and processes BITS transfer job in the background. The command prompt reappears immediately after the BITS transfer job is created. The returned BitsJob object can be used to monitor status and progress.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>Authentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to be used at the server. The acceptable values for this parameter are:</maml:para>
            <maml:para>-- Basic: Basic is a scheme in which the user name and password are sent in clear text to the server or proxy.

-- Digest: Digest is a challenge-response scheme that uses a server-specified data string for the challenge.

-- Ntlm: NT LAN Manager (NTLM) is a challenge-response scheme that uses the credentials of the user for authentication in a Windows-based network environment.

-- Negotiate (the default): Negotiate is a challenge-response scheme that negotiates with the server or proxy to determine which scheme to use for authentication. For example, this parameter value allows negotiation to determine whether the Kerberos protocol or NTLM is used.

-- Passport: Passport is a centralized authentication service provided by Microsoft that offers a single logon for member sites.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Digest</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Ntlm</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Passport</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies the credentials to use to authenticate the user to the server that is specified in the value of the Source parameter. The default is the current user.</maml:para>
            <maml:para>Type a user name, such as "User01", "Domain01\User01", or "User@Contoso.com". Or, use the Get-Credential cmdlet to create the value for this parameter. When you type a user name, you are prompted for a password.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">PSCredential</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>Description</maml:name>
          <maml:description>
            <maml:para>Describes the BITS transfer job. The description is limited to 1,024 characters.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>DisplayName</maml:name>
          <maml:description>
            <maml:para>Specifies a display name for the BITS transfer job. The display name provides a user-friendly way to differentiate BITS transfer jobs.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>Priority</maml:name>
          <maml:description>
            <maml:para>Sets the priority of the BITS transfer job, which affects bandwidth usage. The acceptable values for this parameter are:</maml:para>
            <maml:para>-- Foreground (default): Transfers the job in the foreground. Foreground transfers compete for network bandwidth with other applications, which can impede the user's overall network experience. However, if the Start-BitsTransfer cmdlet is being used interactively, this is likely the best option. This is the highest priority level.

-- High: Transfers the job in the background with a high priority. Background transfers use the idle network bandwidth of the client computer to transfer files.

-- Normal: Transfers the job in the background with a normal priority. Background transfers use the idle network bandwidth of the client computer to transfer files.

-- Low: Transfers the job in the background with a low priority. Background transfers use the idle network bandwidth of the client to transfer files. This is the lowest background priority level.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Foreground</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">High</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Normal</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Low</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>ProxyAuthentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to use at the Web proxy. The acceptable values for this parameter are:</maml:para>
            <maml:para>-- Basic: Basic is a scheme in which the user name and password are sent in clear-text to the server or proxy.

-- Digest: Digest is a challenge-response scheme that uses a server-specified data string for the challenge.

-- Ntlm: NTLM is a challenge-response scheme that uses the credentials of the user for authentication in a Windows-based network environment.

-- Negotiate (the default): Negotiate is a challenge-response scheme that negotiates with the server or proxy to determine which scheme to use for authentication. For instance, this parameter value allows negotiation to determine whether the Kerberos protocol or NTLM is used.

-- Passport: Passport is a centralized authentication service provided by Microsoft that offers a single logon for member sites.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Basic</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Digest</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Ntlm</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Negotiate</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Passport</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>ProxyBypass</maml:name>
          <maml:description>
            <maml:para>Specifies a list of host names to use for a direct connection. The hosts in the list are tried in order until a successful connection is achieved. If you specify this parameter the cmdlet bypasses the proxy. If this parameter is used, the ProxyUsage parameter must be set to Override; otherwise, an error occurs.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">String[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>ProxyCredential</maml:name>
          <maml:description>
            <maml:para>Specifies the credentials to use to authenticate the user at the proxy. You can use the Get-Credential cmdlet to create a value for this parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">PSCredential</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>ProxyList</maml:name>
          <maml:description>
            <maml:para>Specifies a list of proxies to use. The proxies in the list are tried in order until a successful connection is achieved. If this parameter is specified and ProxyUsage is set to a value other than Override, the cmdlet generates an error.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="true">Uri[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>ProxyUsage</maml:name>
          <maml:description>
            <maml:para>Specifies the proxy usage settings. The acceptable values for this parameter are:</maml:para>
            <maml:para>-- SystemDefault (the default): Use the system default proxy settings.

-- NoProxy: Do not use a proxy to transfer files. Use this option when you transfer files within a local area network (LAN).

-- AutoDetect: Automatically detect proxy settings. BITS detects proxy settings for each file in the job.

-- Override: Specify the proxies or servers to use. If the ProxyList parameter is also specified, the proxies in that list are used. If the ProxyBypass parameter is also specified, the servers in that list are used. In both cases, the first member of the list is used. If the first member is unreachable, the subsequent members are tried until a member is contacted successfully.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">SystemDefault</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NoProxy</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">AutoDetect</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Override</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>RetryInterval</maml:name>
          <maml:description>
            <maml:para>Specifies the minimum length of time, in seconds, that BITS waits before an attempt to transfer the file after BITS encounters a transient error. The minimum allowed value is 60 seconds. If this value exceeds the RetryTimeout value from the BitsJob object, BITS does not retry the transfer. Instead, BITS sets the state of the BITS transfer job to the Error state.</maml:para>
            <maml:para>The default is 600 seconds (10 minutes).
</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>RetryTimeout</maml:name>
          <maml:description>
            <maml:para>Specifies the length of time, in seconds, that BITS attempts to transfer the file after the first transient error occurs. Setting the retry period to 0 prevents retries and forces the job into the BG_JOB_STATE_ERROR state when an error occurs. If the retry period value exceeds the JobInactivityTimeout Group Policy setting (90-day default), BITS cancels the job after the JobInactivityTimeout Group Policy setting is exceeded.</maml:para>
            <maml:para>The default is 1,209,600 seconds (14 days).</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>Suspended</maml:name>
          <maml:description>
            <maml:para>Indicates that the cmdlet suspends the BITS transfer job. If the Suspended parameter is not specified, the job automatically begins the transfer job. If the Suspended parameter is specified, the command prompt returns immediately after the BITS transfer job is created. You can use the Resume-BitsTransfer cmdlet to start the transfer job.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>TransferPolicy</maml:name>
          <maml:description>
            <maml:para>Specifies the network cost states in which the transfer is allowed to be scheduled. The current cost state of the network is a bitmask that indicates the kinds of charges that would be incurred if a transfer was scheduled at this time. This cost state represents a bitmask; if the bit corresponding to the current network cost state is set, the transfer can be scheduled. If the bit corresponding to the current network cost state is not set, the transfer is ignored for scheduling purposes. You can submit any of the named values listed here, or add them together to provide a custom value.</maml:para>
            <maml:para>The acceptable values for this parameter are:

-- Unrestricted (or unknown) : 0x00000001 : the cost state for this network is not known.

-- Capped : 0x00000002 : the cost state for this network is a capped plan, or a plan that has a data usage limit.

-- BelowCap : 0x00000004 : the cost state for this network is below the data plan cap.

-- NearCap : 0x00000008 : the cost state for this network is near the data plan cap.

-- OverCapCharged : 0x00000010 : the cost state for this network is above the data plan cap, and such usage is charged.

-- OverCapThrottled : 0x00000020 : the cost state for this network is above the data plan cap, and such usage is throttled.

-- UsageBased : 0x00000040 : the cost state for this network is charged based on usage.

-- Roaming : 0x00000080 : the cost state for this network incurs roaming charges. The cost state also includes one option (IgnoreCongestion) and a set of standard policies (Uncosted, Standard, NoSurcharge, NotRoaming, and Always) which are combinations of the discrete bit values.

-- IgnoreCongestion : 0x80000000 : the job can be scheduled even if the network provider reports that the network is congested.

-- PolicyUnrestricted : 0x80000021 : the set of cost states that do not consume the quota of a capped plan, or incur extra charges.

-- Standard : 0x80000067 : a set of cost states suitable for moderate-priority transfers.

-- NoSurcharge : 0x8000006f : the set of cost states that incur no surcharge for use.

-- NotRoaming : 0x8000007f : the set of cost states that exclude the roaming state.

-- Always : 0x800000ff : the set of all cost states.</maml:para>
            <maml:para>The cost state also includes one option (IgnoreCongestion) and a set of standard policies (Always, NotRoaming, NoSurcharge, Standard, and Uncosted) which are combinations of the discrete bit values.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Always</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">BelowCap</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Capped</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">IgnoreCongestion</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NearCap</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NoSurcharge</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">NotRoaming</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">OverCapCharged</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">OverCapThrottled</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">PolicyUnrestricted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Roaming</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Standard</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Unrestricted</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UsageBased</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>TransferType</maml:name>
          <maml:description>
            <maml:para>Specifies the BITS transfer job type. The acceptable values for this parameter are:</maml:para>
            <maml:para>-- Download (the default): Specifies that the transfer job downloads files to the client computer.

-- Upload: Specifies that the transfer job uploads a file to the server.

-- UploadReply: Specifies that the transfer job uploads a file to the server and receives a reply file from the server.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">Download</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Upload</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">UploadReply</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
          <maml:name>UseStoredCredential</maml:name>
          <maml:description>
            <maml:para>Specifies that credentials stored in the Windows Credential Manager should be used for authentication when required for the specified target server type. If this parameter is not specified and a server requires authentication, then explicit credentials must be included by using the Credential or ProxyCredential parameters. This parameter is a flag parameter whose values can be added together to create the desired behavior.</maml:para>
            <maml:para>The acceptable values for this parameter are:

-- None: Use only credentials provided by the Credential or ProxyCredential parameters. This is the default behavior if the parameter is not specified.

-- Proxy: Credentials stored in the Windows Credential Manager are used for authentication for any proxy server that requires authentication. If no credentials in the Windows Credential Manager match the proxy server needing authentication, then you must specify credentials by using the ProxyCredential parameter.

-- Server: This value is not supported and generates an error if specified.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Proxy</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Server</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>Asynchronous</maml:name>
        <maml:description>
          <maml:para>Indicates that the cmdlet creates and processes BITS transfer job in the background. The command prompt reappears immediately after the BITS transfer job is created. The returned BitsJob object can be used to monitor status and progress.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>Authentication</maml:name>
        <maml:description>
          <maml:para>Specifies the authentication mechanism to be used at the server. The acceptable values for this parameter are:</maml:para>
          <maml:para>-- Basic: Basic is a scheme in which the user name and password are sent in clear text to the server or proxy.

-- Digest: Digest is a challenge-response scheme that uses a server-specified data string for the challenge.

-- Ntlm: NT LAN Manager (NTLM) is a challenge-response scheme that uses the credentials of the user for authentication in a Windows-based network environment.

-- Negotiate (the default): Negotiate is a challenge-response scheme that negotiates with the server or proxy to determine which scheme to use for authentication. For example, this parameter value allows negotiation to determine whether the Kerberos protocol or NTLM is used.

-- Passport: Passport is a centralized authentication service provided by Microsoft that offers a single logon for member sites.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies the credentials to use to authenticate the user to the server that is specified in the value of the Source parameter. The default is the current user.</maml:para>
          <maml:para>Type a user name, such as "User01", "Domain01\User01", or "User@Contoso.com". Or, use the Get-Credential cmdlet to create the value for this parameter. When you type a user name, you are prompted for a password.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>Description</maml:name>
        <maml:description>
          <maml:para>Describes the BITS transfer job. The description is limited to 1,024 characters.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="2" aliases="none">
        <maml:name>Destination</maml:name>
        <maml:description>
          <maml:para>Specifies an array that contains the destination location and the names of the files that you want to transfer. The destination names are paired with the corresponding source file names. For example, the first file name specified in the Source parameter corresponds to the first file name in the Destination parameter, and the second file name in the Source parameter corresponds to the second file name in the Destination parameter. The Source and Destination parameters must have the same number of elements; otherwise, the command produces an error.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>DisplayName</maml:name>
        <maml:description>
          <maml:para>Specifies a display name for the BITS transfer job. The display name provides a user-friendly way to differentiate BITS transfer jobs.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>Priority</maml:name>
        <maml:description>
          <maml:para>Sets the priority of the BITS transfer job, which affects bandwidth usage. The acceptable values for this parameter are:</maml:para>
          <maml:para>-- Foreground (default): Transfers the job in the foreground. Foreground transfers compete for network bandwidth with other applications, which can impede the user's overall network experience. However, if the Start-BitsTransfer cmdlet is being used interactively, this is likely the best option. This is the highest priority level.

-- High: Transfers the job in the background with a high priority. Background transfers use the idle network bandwidth of the client computer to transfer files.

-- Normal: Transfers the job in the background with a normal priority. Background transfers use the idle network bandwidth of the client computer to transfer files.

-- Low: Transfers the job in the background with a low priority. Background transfers use the idle network bandwidth of the client to transfer files. This is the lowest background priority level.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>ProxyAuthentication</maml:name>
        <maml:description>
          <maml:para>Specifies the authentication mechanism to use at the Web proxy. The acceptable values for this parameter are:</maml:para>
          <maml:para>-- Basic: Basic is a scheme in which the user name and password are sent in clear-text to the server or proxy.

-- Digest: Digest is a challenge-response scheme that uses a server-specified data string for the challenge.

-- Ntlm: NTLM is a challenge-response scheme that uses the credentials of the user for authentication in a Windows-based network environment.

-- Negotiate (the default): Negotiate is a challenge-response scheme that negotiates with the server or proxy to determine which scheme to use for authentication. For instance, this parameter value allows negotiation to determine whether the Kerberos protocol or NTLM is used.

-- Passport: Passport is a centralized authentication service provided by Microsoft that offers a single logon for member sites.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>ProxyBypass</maml:name>
        <maml:description>
          <maml:para>Specifies a list of host names to use for a direct connection. The hosts in the list are tried in order until a successful connection is achieved. If you specify this parameter the cmdlet bypasses the proxy. If this parameter is used, the ProxyUsage parameter must be set to Override; otherwise, an error occurs.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>ProxyCredential</maml:name>
        <maml:description>
          <maml:para>Specifies the credentials to use to authenticate the user at the proxy. You can use the Get-Credential cmdlet to create a value for this parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>ProxyList</maml:name>
        <maml:description>
          <maml:para>Specifies a list of proxies to use. The proxies in the list are tried in order until a successful connection is achieved. If this parameter is specified and ProxyUsage is set to a value other than Override, the cmdlet generates an error.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="true">Uri[]</command:parameterValue>
        <dev:type>
          <maml:name>Uri[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>ProxyUsage</maml:name>
        <maml:description>
          <maml:para>Specifies the proxy usage settings. The acceptable values for this parameter are:</maml:para>
          <maml:para>-- SystemDefault (the default): Use the system default proxy settings.

-- NoProxy: Do not use a proxy to transfer files. Use this option when you transfer files within a local area network (LAN).

-- AutoDetect: Automatically detect proxy settings. BITS detects proxy settings for each file in the job.

-- Override: Specify the proxies or servers to use. If the ProxyList parameter is also specified, the proxies in that list are used. If the ProxyBypass parameter is also specified, the servers in that list are used. In both cases, the first member of the list is used. If the first member is unreachable, the subsequent members are tried until a member is contacted successfully.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>RetryInterval</maml:name>
        <maml:description>
          <maml:para>Specifies the minimum length of time, in seconds, that BITS waits before an attempt to transfer the file after BITS encounters a transient error. The minimum allowed value is 60 seconds. If this value exceeds the RetryTimeout value from the BitsJob object, BITS does not retry the transfer. Instead, BITS sets the state of the BITS transfer job to the Error state.</maml:para>
          <maml:para>The default is 600 seconds (10 minutes).
</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>RetryTimeout</maml:name>
        <maml:description>
          <maml:para>Specifies the length of time, in seconds, that BITS attempts to transfer the file after the first transient error occurs. Setting the retry period to 0 prevents retries and forces the job into the BG_JOB_STATE_ERROR state when an error occurs. If the retry period value exceeds the JobInactivityTimeout Group Policy setting (90-day default), BITS cancels the job after the JobInactivityTimeout Group Policy setting is exceeded.</maml:para>
          <maml:para>The default is 1,209,600 seconds (14 days).</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
        <dev:type>
          <maml:name>Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="none">
        <maml:name>Source</maml:name>
        <maml:description>
          <maml:para>Specifies the source location and the names of the files that you want to transfer. The source file names are paired with the corresponding destination file names. For example, the first file name specified in the Source parameter corresponds to the first file name in the Destination parameter, and the second file name in the Source parameter corresponds to the second file name in the Destination parameter. The Source and Destination parameters must have the same number of elements; otherwise, the command produces an error. You can use standard wildcard characters such as the asterisk (*) and the question mark (?). Or, you can use a range operator such as "[a-r]".</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">String[]</command:parameterValue>
        <dev:type>
          <maml:name>String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>Suspended</maml:name>
        <maml:description>
          <maml:para>Indicates that the cmdlet suspends the BITS transfer job. If the Suspended parameter is not specified, the job automatically begins the transfer job. If the Suspended parameter is specified, the command prompt returns immediately after the BITS transfer job is created. You can use the Resume-BitsTransfer cmdlet to start the transfer job.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>TransferPolicy</maml:name>
        <maml:description>
          <maml:para>Specifies the network cost states in which the transfer is allowed to be scheduled. The current cost state of the network is a bitmask that indicates the kinds of charges that would be incurred if a transfer was scheduled at this time. This cost state represents a bitmask; if the bit corresponding to the current network cost state is set, the transfer can be scheduled. If the bit corresponding to the current network cost state is not set, the transfer is ignored for scheduling purposes. You can submit any of the named values listed here, or add them together to provide a custom value.</maml:para>
          <maml:para>The acceptable values for this parameter are:

-- Unrestricted (or unknown) : 0x00000001 : the cost state for this network is not known.

-- Capped : 0x00000002 : the cost state for this network is a capped plan, or a plan that has a data usage limit.

-- BelowCap : 0x00000004 : the cost state for this network is below the data plan cap.

-- NearCap : 0x00000008 : the cost state for this network is near the data plan cap.

-- OverCapCharged : 0x00000010 : the cost state for this network is above the data plan cap, and such usage is charged.

-- OverCapThrottled : 0x00000020 : the cost state for this network is above the data plan cap, and such usage is throttled.

-- UsageBased : 0x00000040 : the cost state for this network is charged based on usage.

-- Roaming : 0x00000080 : the cost state for this network incurs roaming charges. The cost state also includes one option (IgnoreCongestion) and a set of standard policies (Uncosted, Standard, NoSurcharge, NotRoaming, and Always) which are combinations of the discrete bit values.

-- IgnoreCongestion : 0x80000000 : the job can be scheduled even if the network provider reports that the network is congested.

-- PolicyUnrestricted : 0x80000021 : the set of cost states that do not consume the quota of a capped plan, or incur extra charges.

-- Standard : 0x80000067 : a set of cost states suitable for moderate-priority transfers.

-- NoSurcharge : 0x8000006f : the set of cost states that incur no surcharge for use.

-- NotRoaming : 0x8000007f : the set of cost states that exclude the roaming state.

-- Always : 0x800000ff : the set of all cost states.</maml:para>
          <maml:para>The cost state also includes one option (IgnoreCongestion) and a set of standard policies (Always, NotRoaming, NoSurcharge, Standard, and Uncosted) which are combinations of the discrete bit values.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">CostStates</command:parameterValue>
        <dev:type>
          <maml:name>CostStates</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>TransferType</maml:name>
        <maml:description>
          <maml:para>Specifies the BITS transfer job type. The acceptable values for this parameter are:</maml:para>
          <maml:para>-- Download (the default): Specifies that the transfer job downloads files to the client computer.

-- Upload: Specifies that the transfer job uploads a file to the server.

-- UploadReply: Specifies that the transfer job uploads a file to the server and receives a reply file from the server.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="none">
        <maml:name>UseStoredCredential</maml:name>
        <maml:description>
          <maml:para>Specifies that credentials stored in the Windows Credential Manager should be used for authentication when required for the specified target server type. If this parameter is not specified and a server requires authentication, then explicit credentials must be included by using the Credential or ProxyCredential parameters. This parameter is a flag parameter whose values can be added together to create the desired behavior.</maml:para>
          <maml:para>The acceptable values for this parameter are:

-- None: Use only credentials provided by the Credential or ProxyCredential parameters. This is the default behavior if the parameter is not specified.

-- Proxy: Credentials stored in the Windows Credential Manager are used for authentication for any proxy server that requires authentication. If no credentials in the Windows Credential Manager match the proxy server needing authentication, then you must specify credentials by using the ProxyCredential parameter.

-- Server: This value is not supported and generates an error if specified.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">AuthenticationTargetValue</command:parameterValue>
        <dev:type>
          <maml:name>AuthenticationTargetValue</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not accept an input.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.BackgroundIntelligentTransfer.Management.BitsJob</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>When called with the Asynchronous parameter, this cmdlet passes the BitsJob object that is associated with the new BITS transfer job as output. Otherwise, no output is generated.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:terminatingErrors />
    <command:nonTerminatingErrors />
    <maml:alertSet>
      <maml:title />
      <maml:alert>
        <maml:para>You can cancel a transfer job that is running in synchronous mode by pressing CTRL+C.</maml:para>
        <maml:para>If the BITS service is stopped during a synchronous file transfer job, then file transfer job will fail with an error and the file transfer job will not get removed from the BitsTransfer queue. You can view the file transfer job that remains in the BitsTransfer queue through the Get-BitsTransfer cmdlet. The file transfer job that remains in the BitsTransfer queue can be removed using the Remove-BitsTransfer cmdlet. Once the BITS service is restarted, the file transfer job will recover and resume the file transfer job, unless the file transfer job has been removed in the interim.</maml:para>
      </maml:alert>
      <maml:alert>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>Example 1: Create a BITS transfer job that downloads a file</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Start-BitsTransfer -Source "http://server01/servertestdir/testfile1.txt" -Destination "c:\clienttestdir\testfile1.txt"
</dev:code>
        <dev:remarks>
          <maml:para>This command creates a BITS transfer job that downloads a file from a server. The local and remote names of the file are specified in the Source and Destination parameters. Because the default transfer type is Download, the http://Server01/servertestdir/testfile1.txt file is transferred to C:\clienttestdir\testfile1.txt on the client. The command prompt returns when the file transfer is complete or when it enters an error state.</maml:para>
          <maml:para>When you upload files to an HTTP location, the TransferType parameter must be set to Upload.</maml:para>
          <maml:para>Because the Start-BitsTransfer cmdlet assumes that the first parameter is the source and that the second parameter is the destination when no value is specified, this command could be simplified as follows:</maml:para>
          <maml:para>Start-BitsTransfer "http://server01/servertestdir/testfile1.txt" "c:\clienttestdir\testfile1.txt"</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 2: Create BITS transfer jobs that download multiple files</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Import-CSV filelist.txt | Start-BitsTransfer
</dev:code>
        <dev:remarks>
          <maml:para>This command creates BITS transfer jobs that download multiple files from a server.</maml:para>
          <maml:para>The command imports the source and destination file locations and then pipes the locations to the Start-BitsTransfer command. The Start-BitsTransfer command creates a new BITS transfer job for each of the files in filelist.txt and then transfers them concurrently to the client.</maml:para>
          <maml:para>The contents of the filelist.txt file resemble the following information:</maml:para>
          <maml:para>Source, Destination
http://server01/servertestdir/testfile1.txt, c:\clienttestdir\testfile1.txt
http://server01/servertestdir/testfile2.txt, c:\clienttestdir\testfile2.txt
http://server01/servertestdir/testfile3.txt, c:\clienttestdir\testfile3.txt
http://server01/servertestdir/testfile4.txt, c:\clienttestdir\testfile4.txt</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 3: Create a BITS transfer job that uploads a file</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Start-BitsTransfer -Source "c:\clienttestdir\testfile1.txt" -Destination "http://server01/servertestdir/testfile1.txt" -TransferType Upload
</dev:code>
        <dev:remarks>
          <maml:para>This command creates a BITS transfer job that uploads a file to a server. The local and remote names of the file are specified in the Source and Destination parameters. Because the default transfer type is Download, the TransferType parameter must be set to Upload. The C:\clienttestdir\testfile1.txt file on the client is transferred to http://Server01/servertestdir/testfile1.txt. The command prompt returns when the file transfer is complete or enters an error state.</maml:para>
          <maml:para>The Start-BitsTransfer cmdlet downloads multiple files from a server to a client computer, but it does not typically upload multiple files from a client computer to a server. It is possible to work around this limitation by using the Import-Csv cmdlet to pipe the output to the Start-BitsTransfer cmdlet. If you need to upload more than one file, you can also use a .cab or .zip file.</maml:para>
          <maml:para>Because the Start-BitsTransfer cmdlet assumes that the first parameter is the source and that the second parameter is the destination when no value is specified, this command could be simplified as follows:</maml:para>
          <maml:para>Start-BitsTransfer "c:\clienttestdir\testfile1.txt" "http://server01/servertestdir/testfile1.txt" -TransferType Upload</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 4: Create a BITS transfer job that downloads multiple files</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Start-BitsTransfer -Source "http://server01/servertestdir/testfile1.txt", "http://server01/servertestdir/testfile2.txt" -Destination "c:\clienttestdir\testfile1.txt", "c:\clienttestdir\testfile2.txt"
</dev:code>
        <dev:remarks>
          <maml:para>This command creates a BITS transfer job that downloads multiple files from a server.</maml:para>
          <maml:para>The local and remote names of the files are specified in the Source and Destination parameters. Because the default of the TransferType parameter is Download, the http://Server01/servertestdir/testfile1.txt and http://Server01/servertestdir/testfile2.txt files are transferred to C:\clienttestdir\testfile1.txt and C:\clienttestdir\testfile2.txt on the client computer. The command prompt returns when the file transfer is complete or enters an error state.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 5: Create a BITS transfer job that downloads a file using a specific set of credentials</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;$Cred = Get-Credential
PS C:\&gt; Start-BitsTransfer -DisplayName MyJob -Credential $Cred -Source "http://server01/servertestdir/testfile1.txt" -Destination "c:\clienttestdir\testfile1.txt"
</dev:code>
        <dev:remarks>
          <maml:para>This example creates a BITS transfer job that downloads a file from a server by using a specific set of credentials.</maml:para>
          <maml:para>The first command retrieves a set of credentials from the user by calling the Get-Credential cmdlet. The returned PSCredential object is stored in the $Cred variable.</maml:para>
          <maml:para>The second command uses the Credential parameter to pass the PSCredential object that is stored in the $Cred variable to the Start-BitsTransfer cmdlet. A new BITS transfer job is created that downloads the http://server01/servertestdir/testfile1.txt file to the client. The specified credentials are used to authenticate the user at the server. Additionally, the optional DisplayName parameter is used to give the BITS transfer job a unique name.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 6: Create BITS transfer jobs that download multiple files</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Import-CSV filelist.txt | Start-BitsTransfer -Asynchronous -Priority Normal
</dev:code>
        <dev:remarks>
          <maml:para>This command creates BITS transfer jobs that download multiple files from a server. The files are downloaded sequentially, but they are available immediately when the transfer job is complete.</maml:para>
          <maml:para>The command imports the source and destination file locations and then pipes them to the Start-BitsTransfer command. The Start-BitsTransfer command creates a new BITS transfer job for each of the files in filelist.txt and then transfers them sequentially to the client.</maml:para>
          <maml:para>The contents of the filelist.txt file resemble the following information:</maml:para>
          <maml:para>Source, Destination
http://server01/servertestdir/testfile1.txt, c:\clienttestdir\testfile1.txt
http://server01/servertestdir/testfile2.txt, c:\clienttestdir\testfile2.txt
http://server01/servertestdir/testfile3.txt, c:\clienttestdir\testfile3.txt
http://server01/servertestdir/testfile4.txt, c:\clienttestdir\testfile4.txt</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 7: Create a BITS transfer job that downloads multiple files</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Start-BitsTransfer -Source "http://server01/servertestdir/*.*" -Destination "c:\clienttestdir\"
</dev:code>
        <dev:remarks>
          <maml:para>This command creates a BITS transfer job that downloads multiple files from a server.</maml:para>
          <maml:para>The Start-BitsTransfer command creates a new BITS transfer job. All the files are added to a single job and then transferred sequentially to the client.</maml:para>
          <maml:para>The following command shows another variation of a file transfer command that uses a wildcard character:</maml:para>
          <maml:para>Start-BitsTransfer -Source "http://server01/servertestdir/*.txt" -Destination "c:\clienttestdir\"</maml:para>
          <maml:para>The destination path cannot use wildcard characters. The destination path supports only a relative directory, a rooted path, or an implicit directory (the current directory). Additionally, the destination files cannot be renamed by using a wildcard character. For instance, the following command does not work:</maml:para>
          <maml:para>c:\clienttestdir\*.BAK</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 8: Create BITS transfer jobs that upload multiple files</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Import-CSV filelist.txt | Start-BitsTransfer -TransferType Upload
</dev:code>
        <dev:remarks>
          <maml:para>This command creates BITS transfer jobs that upload multiple files to a server.</maml:para>
          <maml:para>The command imports the source and destination file locations and then pipes them to the Start-BitsTransfer command. The Start-BitsTransfer command creates a new BITS transfer job for each of the files in filelist.txt and then transfers them concurrently to the server.</maml:para>
          <maml:para>The contents of the filelist.txt file resemble the following information:</maml:para>
          <maml:para>Source, Destination
c:\clienttestdir\testfile1.txt, http://server01/servertestdir/testfile1.txt
c:\clienttestdir\testfile2.txt, http://server01/servertestdir/testfile2.txt
c:\clienttestdir\testfile3.txt, http://server01/servertestdir/testfile3.txt
c:\clienttestdir\testfile4.txt, http://server01/servertestdir/testfile4.txt</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 9: Download a file from a server on a network to a client on a different network that are connected by a proxy server</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Start-BitsTransfer -Source .\Patch0416.msu -Destination $env:temp\Patch0416.msu -ProxyUsage Override -ProxyList BitsProxy:8080 -ProxyCredential Server01\Admin01
</dev:code>
        <dev:remarks>
          <maml:para>This command uses the Start-BitsTransfer cmdlet to copy a patch file from a server on one network to a client on a different network when the networks are connected only by a proxy server. </maml:para>
          <maml:para>This scenario arises when an Internet-connected server downloads files and then distributes them to computers on disconnected or isolated networks that have no Internet access. </maml:para>
          <maml:para>BITS can detect proxy server settings automatically. However, if the proxy servers are not configured for automatic detection, you can override the automatic detection mechanism and identify the proxy server explicitly, as shown in this example.</maml:para>
          <maml:para>The command uses the Source parameter to specify the location of the patch on the server computer and the Destination parameter to specify the intended location of patch on the client computer. It uses the ProxyUsage parameter with a value of Override to override the automatic proxy server detection mechanism. To identify the proxy server, it uses the ProxyList parameter. The value of the ProxyList parameter is a URI with a &lt;Name:Port&gt; format. Finally, it uses the ProxyCredential parameter to specify the credentials of an administrator who has permission to connect to the proxy server.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-BitsFile</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Complete-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Resume-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Suspend-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Suspend-BitsTransfer</command:name>
      <maml:description>
        <maml:para>Suspends a BITS transfer job.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Suspend</command:verb>
      <command:noun>BitsTransfer</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>The Suspend-BitsTransfer cmdlet suspends, or pauses, one or more Background Intelligent Transfer Service (BITS) transfer jobs. If the transfer is already suspended, the cmdlet does nothing. You can restart the BITS transfer job by using the Resume-BitsTransfer cmdlet.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Suspend-BitsTransfer</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="b">
          <maml:name>BitsJob</maml:name>
          <maml:description>
            <maml:para>Specifies the BITS transfer jobs to suspend. You can pipe a value to this parameter from other cmdlets that return BitsJob objects, such as Get-BitsTransfer.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="true">BitsJob[]</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="b">
        <maml:name>BitsJob</maml:name>
        <maml:description>
          <maml:para>Specifies the BITS transfer jobs to suspend. You can pipe a value to this parameter from other cmdlets that return BitsJob objects, such as Get-BitsTransfer.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="true">BitsJob[]</command:parameterValue>
        <dev:type>
          <maml:name>BitsJob[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Microsoft.BackgroundIntelligentTransfer.Management.BitsJob[]</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet accepts one or more BitsJob objects as input that populates the BitsJob parameter.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>Microsoft.BackgroundIntelligentTransfer.Management.BitsJob[]</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet generates the BitsJob objects that are associated with the BITS transfer jobs that were suspended.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:terminatingErrors />
    <command:nonTerminatingErrors />
    <command:examples>
      <command:example>
        <maml:title>Example 1: Suspend all BITS transfer jobs owned by the current user</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;Get-BitsTransfer | Suspend-BitsTransfer
</dev:code>
        <dev:remarks>
          <maml:para>This command suspends all the BITS transfer jobs that are owned by the current user.</maml:para>
          <maml:para>The output of Get-BitsTransfer is a set of BitsJob objects. This output is piped to the Suspend-BitsTransfer cmdlet.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 2: Suspend all BITS transfer jobs on the computer</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt;$Bits = Get-BitsTransfer -AllUsers
PS C:\&gt; Suspend-BitsTransfer -BitsJob $Bits
</dev:code>
        <dev:remarks>
          <maml:para>This command suspends all the BITS transfer jobs on the computer.</maml:para>
          <maml:para>The first command gets all the BitsJob objects on the computer and then stores them in the $Bits variable.</maml:para>
          <maml:para>The second command uses the BitsJob parameter to pass the BitsJob objects that are stored in the $Bits variable to the Suspend-BitsTransfer cmdlet.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>
        </maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Add-BitsFile</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Complete-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Resume-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Start-BitsTransfer</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>

</helpItems>
