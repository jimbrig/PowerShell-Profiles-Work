<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml" xmlns="http://msh">
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Connect-WSMan</command:name>
      <command:verb>Connect</command:verb>
      <command:noun>WSMan</command:noun>
      <maml:description>
        <maml:para>Connects to the WinRM service on a remote computer.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>&gt; This cmdlet is only available on the Windows platform. The `Connect-WSMan` cmdlet connects to the WinRM service on a remote computer, and it establishes a persistent connection to the remote computer. You can use this cmdlet in the context of the WSMan provider to connect to the WinRM service on a remote computer. However, you can also use this cmdlet to connect to the WinRM service on a remote computer before you change to the WSMan provider. The remote computer appears in the root directory of the WSMan provider.</maml:para>
      <maml:para>Explicit credentials are required when the client and server computers are in different domains or workgroups.</maml:para>
      <maml:para>For information about how to disconnect from the WinRM service on a remote computer, see the `Disconnect-WSMan` cmdlet.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Connect-WSMan</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="cn">
          <maml:name>ComputerName</maml:name>
          <maml:description>
            <maml:para>Specifies the computer against which to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, use localhost, or use a dot (`.`) to specify the local computer. The local computer is the default. When the remote computer is in a different domain from the user, you must use a fully qualified domain name must be used. You can pipe a value for this parameter to the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ApplicationName</maml:name>
          <maml:description>
            <maml:para>Specifies the application name in the connection. The default value of the ApplicationName parameter is WSMAN. The complete identifier for the remote endpoint is in the following format:</maml:para>
            <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
            <maml:para>For example: `http://server01:8080/WSMAN`</maml:para>
            <maml:para>Internet Information Services (IIS), which hosts the session, forwards requests with this endpoint to the specified application. This default setting of WSMAN is appropriate for most uses. This parameter is designed to be used if many computers establish remote connections to one computer that is running Windows PowerShell. In this case, IIS hosts Web Services for Management (WS-Management) for efficiency.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
          <maml:name>Authentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to be used at the server. The acceptable values for this parameter are:</maml:para>
            <maml:para>- `Basic`- Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` - Use the authentication method implemented by the WS-Management protocol. This is the   default. - `Digest` - Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos` - The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate` - Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows for   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP` - Use Credential Security Support Provider (CredSSP) authentication, which lets the user   delegate credentials. This option is designed for commands that run on one remote computer but   collect data from or run additional commands on other remote computers.</maml:para>
            <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user credentials from the local computer to a remote computer. This practice &gt; increases the security risk of the remote operation. If the remote computer is compromised, when &gt; credentials are passed to it, the credentials can be used to control the network session.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Digest</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Negotiate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Basic</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Kerberos</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ClientCertificate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Credssp</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateThumbprint</maml:name>
          <maml:description>
            <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
            <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
            <maml:para>To get a certificate thumbprint, use the `Get-Item` or `Get-ChildItem` command in the Windows PowerShell Cert: drive.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as `User01`, `Domain01\User01`, or `User@Domain.com`. Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, this cmdlet prompts you for a password.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="os">
          <maml:name>OptionSet</maml:name>
          <maml:description>
            <maml:para>Specifies a set of switches to a service to modify or refine the nature of the request. These resemble switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
            <maml:para>The following example demonstrates the syntax that passes the values 1, 2, and 3 for the a, b, and c parameters:</maml:para>
            <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Port</maml:name>
          <maml:description>
            <maml:para>Specifies the port to use when the client connects to the WinRM service. When the transport is HTTP, the default port is 80. When the transport is HTTPS, the default port is 443.</maml:para>
            <maml:para>When you use HTTPS as the transport, the value of the ComputerName parameter must match the server's certificate common name (CN). However, if the SkipCNCheck parameter is specified as part of the SessionOption parameter, the certificate common name of the server does not have to match the host name of the server. The SkipCNCheck parameter should be used only for trusted computers.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="so">
          <maml:name>SessionOption</maml:name>
          <maml:description>
            <maml:para>Specifies extended options for the WS-Management session. Enter a SessionOption object that you create by using the `New-WSManSessionOption` cmdlet. For more information about the options that are available, type `Get-Help New-WSManSessionOption`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UseSSL</maml:name>
          <maml:description>
            <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol is used to establish a connection to the remote computer. By default, SSL is not used.</maml:para>
            <maml:para>WS-Management encrypts all the Windows PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If SSL is not available on the port that is used for the connection, and you specify this parameter, the command fails.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Connect-WSMan</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
          <maml:name>Authentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to be used at the server. The acceptable values for this parameter are:</maml:para>
            <maml:para>- `Basic`- Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` - Use the authentication method implemented by the WS-Management protocol. This is the   default. - `Digest` - Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos` - The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate` - Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows for   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP` - Use Credential Security Support Provider (CredSSP) authentication, which lets the user   delegate credentials. This option is designed for commands that run on one remote computer but   collect data from or run additional commands on other remote computers.</maml:para>
            <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user credentials from the local computer to a remote computer. This practice &gt; increases the security risk of the remote operation. If the remote computer is compromised, when &gt; credentials are passed to it, the credentials can be used to control the network session.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Digest</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Negotiate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Basic</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Kerberos</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ClientCertificate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Credssp</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateThumbprint</maml:name>
          <maml:description>
            <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
            <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
            <maml:para>To get a certificate thumbprint, use the `Get-Item` or `Get-ChildItem` command in the Windows PowerShell Cert: drive.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConnectionURI</maml:name>
          <maml:description>
            <maml:para>Specifies the connection endpoint. The format of this string is as follows:</maml:para>
            <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
            <maml:para>The following string is a correctly formatted value for this parameter:</maml:para>
            <maml:para>`http://Server01:8080/WSMAN`</maml:para>
            <maml:para>The URI must be fully qualified.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as `User01`, `Domain01\User01`, or `User@Domain.com`. Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, this cmdlet prompts you for a password.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="os">
          <maml:name>OptionSet</maml:name>
          <maml:description>
            <maml:para>Specifies a set of switches to a service to modify or refine the nature of the request. These resemble switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
            <maml:para>The following example demonstrates the syntax that passes the values 1, 2, and 3 for the a, b, and c parameters:</maml:para>
            <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Port</maml:name>
          <maml:description>
            <maml:para>Specifies the port to use when the client connects to the WinRM service. When the transport is HTTP, the default port is 80. When the transport is HTTPS, the default port is 443.</maml:para>
            <maml:para>When you use HTTPS as the transport, the value of the ComputerName parameter must match the server's certificate common name (CN). However, if the SkipCNCheck parameter is specified as part of the SessionOption parameter, the certificate common name of the server does not have to match the host name of the server. The SkipCNCheck parameter should be used only for trusted computers.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="so">
          <maml:name>SessionOption</maml:name>
          <maml:description>
            <maml:para>Specifies extended options for the WS-Management session. Enter a SessionOption object that you create by using the `New-WSManSessionOption` cmdlet. For more information about the options that are available, type `Get-Help New-WSManSessionOption`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ApplicationName</maml:name>
        <maml:description>
          <maml:para>Specifies the application name in the connection. The default value of the ApplicationName parameter is WSMAN. The complete identifier for the remote endpoint is in the following format:</maml:para>
          <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
          <maml:para>For example: `http://server01:8080/WSMAN`</maml:para>
          <maml:para>Internet Information Services (IIS), which hosts the session, forwards requests with this endpoint to the specified application. This default setting of WSMAN is appropriate for most uses. This parameter is designed to be used if many computers establish remote connections to one computer that is running Windows PowerShell. In this case, IIS hosts Web Services for Management (WS-Management) for efficiency.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
        <maml:name>Authentication</maml:name>
        <maml:description>
          <maml:para>Specifies the authentication mechanism to be used at the server. The acceptable values for this parameter are:</maml:para>
          <maml:para>- `Basic`- Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` - Use the authentication method implemented by the WS-Management protocol. This is the   default. - `Digest` - Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos` - The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate` - Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows for   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP` - Use Credential Security Support Provider (CredSSP) authentication, which lets the user   delegate credentials. This option is designed for commands that run on one remote computer but   collect data from or run additional commands on other remote computers.</maml:para>
          <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user credentials from the local computer to a remote computer. This practice &gt; increases the security risk of the remote operation. If the remote computer is compromised, when &gt; credentials are passed to it, the credentials can be used to control the network session.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CertificateThumbprint</maml:name>
        <maml:description>
          <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
          <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
          <maml:para>To get a certificate thumbprint, use the `Get-Item` or `Get-ChildItem` command in the Windows PowerShell Cert: drive.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="cn">
        <maml:name>ComputerName</maml:name>
        <maml:description>
          <maml:para>Specifies the computer against which to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, use localhost, or use a dot (`.`) to specify the local computer. The local computer is the default. When the remote computer is in a different domain from the user, you must use a fully qualified domain name must be used. You can pipe a value for this parameter to the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConnectionURI</maml:name>
        <maml:description>
          <maml:para>Specifies the connection endpoint. The format of this string is as follows:</maml:para>
          <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
          <maml:para>The following string is a correctly formatted value for this parameter:</maml:para>
          <maml:para>`http://Server01:8080/WSMAN`</maml:para>
          <maml:para>The URI must be fully qualified.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
        <dev:type>
          <maml:name>System.Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as `User01`, `Domain01\User01`, or `User@Domain.com`. Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, this cmdlet prompts you for a password.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="os">
        <maml:name>OptionSet</maml:name>
        <maml:description>
          <maml:para>Specifies a set of switches to a service to modify or refine the nature of the request. These resemble switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
          <maml:para>The following example demonstrates the syntax that passes the values 1, 2, and 3 for the a, b, and c parameters:</maml:para>
          <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Port</maml:name>
        <maml:description>
          <maml:para>Specifies the port to use when the client connects to the WinRM service. When the transport is HTTP, the default port is 80. When the transport is HTTPS, the default port is 443.</maml:para>
          <maml:para>When you use HTTPS as the transport, the value of the ComputerName parameter must match the server's certificate common name (CN). However, if the SkipCNCheck parameter is specified as part of the SessionOption parameter, the certificate common name of the server does not have to match the host name of the server. The SkipCNCheck parameter should be used only for trusted computers.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="so">
        <maml:name>SessionOption</maml:name>
        <maml:description>
          <maml:para>Specifies extended options for the WS-Management session. Enter a SessionOption object that you create by using the `New-WSManSessionOption` cmdlet. For more information about the options that are available, type `Get-Help New-WSManSessionOption`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UseSSL</maml:name>
        <maml:description>
          <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol is used to establish a connection to the remote computer. By default, SSL is not used.</maml:para>
          <maml:para>WS-Management encrypts all the Windows PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If SSL is not available on the port that is used for the connection, and you specify this parameter, the command fails.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not accept any input.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not generate any output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>You can run management commands or query management data on a remote computer without creating a WS-Management session. You can do this by using the ComputerName parameters of `Invoke-WSManAction` and `Get-WSManInstance`. When you use the ComputerName parameter, Windows PowerShell creates a temporary connection that is used for the single command. After the command runs, the connection is closed.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>----------- Example 1: Connect to a remote computer -----------</maml:title>
        <dev:code>PS C:\&gt; Connect-WSMan -ComputerName "server01"
PS C:\&gt; cd wsman:
PS WSMan:\&gt;
PS WSMan:\&gt; dir

WSManConfig: Microsoft.WSMan.Management\WSMan::WSMan

ComputerName                                  Type
------------                                  ----
localhost                                     Container
server01                                      Container</dev:code>
        <dev:remarks>
          <maml:para>This command creates a connection to the remote server01 computer.</maml:para>
          <maml:para>The `Connect-WSMan` cmdlet is generally used in the context of the WSMan provider to connect to a remote computer, in this case the server01 computer. However, you can use the cmdlet to establish connections to remote computers before you change to the WSMan provider. Those connections appear in the ComputerName list.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 2: Connect to a remote computer by using Administrator credentials</maml:title>
        <dev:code>PS C:\&gt; $cred = Get-Credential Administrator
PS C:\&gt; Connect-WSMan -ComputerName "server01" -Credential $cred
PS C:\&gt; cd wsman:
PS WSMan:\&gt;
PS WSMan:\&gt; dir

WSManConfig: Microsoft.WSMan.Management\WSMan::WSMan

ComputerName                                  Type
------------                                  ----
localhost                                     Container
server01                                      Container</dev:code>
        <dev:remarks>
          <maml:para>This command creates a connection to the remote system server01 using the Administrator account credentials.</maml:para>
          <maml:para>The first command uses the Get-Credential cmdlet to get the Administrator credentials and then stores them in the `$cred` variable. `Get-Credential` prompts you for a password of username and password through a dialog box or at the command line, depending on system registry settings.</maml:para>
          <maml:para>The second command uses the Credential parameter to pass the credentials stored in $cred to `Connect-WSMan`. `Connect-WSMan` then connects to the remote system server01 by using the Administrator credentials.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title> Example 3: Connect to a remote computer over a specified port </maml:title>
        <dev:code>PS C:\&gt; Connect-WSMan -ComputerName "server01" -Port 80
PS C:\&gt; cd wsman:
PS WSMan:\&gt;
PS WSMan:\&gt; dir

WSManConfig: Microsoft.WSMan.Management\WSMan::WSMan
ComputerName                                  Type
------------                                  ----
localhost                                     Container
server01                                      Container</dev:code>
        <dev:remarks>
          <maml:para>This command creates a connection to the remote server01 computer over port 80.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 4: Connect to a remote computer by using connection options</maml:title>
        <dev:code>PS C:\&gt; $a = New-WSManSessionOption -OperationTimeout 30000
PS C:\&gt; Connect-WSMan -ComputerName "server01" -SessionOption $a
PS C:\&gt; cd wsman:
PS WSMan:\&gt; dir

WSManConfig: Microsoft.WSMan.Management\WSMan::WSMan
ComputerName                                  Type
------------                                  ----
localhost                                     Container
server01                                      Container</dev:code>
        <dev:remarks>
          <maml:para>This example creates a connection to the remote server01 computer by using the connection options that are defined in the `New-WSManSessionOption` command.</maml:para>
          <maml:para>The first command uses `New-WSManSessionOption` to store a set of connection setting options in the `$a` variable. In this case, the session options set a connection time out of 30 seconds (30,000 milliseconds).</maml:para>
          <maml:para>The second command uses the SessionOption parameter to pass the credentials that are stored in the `$a` variable to `Connect-WSMan`. Then, `Connect-WSMan` connects to the remote server01 computer by using the specified session options.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/microsoft.wsman.management/connect-wsman?view=powershell-7.2&amp;WT.mc_id=ps-gethelp</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disconnect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Invoke-WSManAction</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManSessionOption</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManQuickConfig</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Disable-WSManCredSSP</command:name>
      <command:verb>Disable</command:verb>
      <command:noun>WSManCredSSP</command:noun>
      <maml:description>
        <maml:para>Disables CredSSP authentication on a computer.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>&gt; This cmdlet is only available on the Windows platform. The `Disable-WSManCredSSP` cmdlet disables Credential Security Support Provider (CredSSP) authentication on a client or on a server computer. When CredSSP authentication is used, the user credentials are passed to a remote computer to be authenticated.</maml:para>
      <maml:para>Use this cmdlet to disable CredSSP on the client by specifying Client in the Role parameter. This cmdlet performs the following actions:</maml:para>
      <maml:para>- Disables CredSSP on the client. This cmdlet sets the WS-Management setting   `&lt;localhost|computername&gt;\Client\Auth\CredSSP` to false. - Removes any `WSMan/ ` setting from the Windows CredSSP policy AllowFreshCredentials * on the   client.</maml:para>
      <maml:para>Use this cmdlet to disable CredSSP on the server by specifying Server in Role . This cmdlet performs the following action:</maml:para>
      <maml:para>- Disables CredSSP on the server. This cmdlet sets the WS-Management setting   `&lt;localhost|computername&gt;\Client\Auth\CredSSP` to false.</maml:para>
      <maml:para>&gt; [!CAUTION] &gt; CredSSP authentication delegates the user credentials from the local computer to a remote &gt; computer. This practice increases the security risk of the remote operation. If the remote &gt; computer is compromised, when credentials are passed to it, the credentials can be used to control &gt; the network session.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Disable-WSManCredSSP</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>Role</maml:name>
          <maml:description>
            <maml:para>Specifies whether to disable CredSSP as a client or as a server. The acceptable values for this parameter are: Client and Server.</maml:para>
            <maml:para>If you specify Client, this cmdlet performs the following actions:</maml:para>
            <maml:para>- Disables CredSSP on the client. This cmdlet sets WS-Management setting   `&lt;localhost|computername&gt;\Client\Auth\CredSSP` to false. - Removes any `WSMan/ ` setting from the Windows CredSSP policy AllowFreshCredentials * on the   client.</maml:para>
            <maml:para>If you specify Server, this cmdlet performs the following action:</maml:para>
            <maml:para>- Disables CredSSP on the server. This cmdlet sets the WS-Management setting   `&lt;localhost|computername&gt;\Client\Auth\CredSSP` to false.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Client</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Server</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
        <maml:name>Role</maml:name>
        <maml:description>
          <maml:para>Specifies whether to disable CredSSP as a client or as a server. The acceptable values for this parameter are: Client and Server.</maml:para>
          <maml:para>If you specify Client, this cmdlet performs the following actions:</maml:para>
          <maml:para>- Disables CredSSP on the client. This cmdlet sets WS-Management setting   `&lt;localhost|computername&gt;\Client\Auth\CredSSP` to false. - Removes any `WSMan/ ` setting from the Windows CredSSP policy AllowFreshCredentials * on the   client.</maml:para>
          <maml:para>If you specify Server, this cmdlet performs the following action:</maml:para>
          <maml:para>- Disables CredSSP on the server. This cmdlet sets the WS-Management setting   `&lt;localhost|computername&gt;\Client\Auth\CredSSP` to false.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not accept any input.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not generate any output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>- To enable CredSSP authentication, use the Enable-WSManCredSSP cmdlet.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>------------ Example 1: Disable CredSSP on a client ------------</maml:title>
        <dev:code>Disable-WSManCredSSP -Role Client</dev:code>
        <dev:remarks>
          <maml:para>This command disables CredSSP on the client, which prevents delegation to servers.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>------------ Example 2: Disable CredSSP on a server ------------</maml:title>
        <dev:code>Disable-WSManCredSSP -Role Server</dev:code>
        <dev:remarks>
          <maml:para>This command disables CredSSP on the server, which prevents delegation from clients.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/microsoft.wsman.management/disable-wsmancredssp?view=powershell-7.2&amp;WT.mc_id=ps-gethelp</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disconnect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Invoke-WSManAction</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManSessionOption</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManQuickConfig</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Disconnect-WSMan</command:name>
      <command:verb>Disconnect</command:verb>
      <command:noun>WSMan</command:noun>
      <maml:description>
        <maml:para>Disconnects the client from the WinRM service on a remote computer.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>&gt; This cmdlet is only available on the Windows platform. The `Disconnect-WSMan` cmdlet disconnects the client from the WinRM service on a remote computer. If you saved the WS-Management session in a variable, the session object remains in the variable, but the state of the WS-Management session is Closed . You can use this cmdlet within the context of the WSMan provider to disconnect the client from the WinRM service on a remote computer. However, you can also use this cmdlet to disconnect from the WinRM service on remote computers before you change to the WSMan provider.</maml:para>
      <maml:para>For more information about how to connect to the WinRM service on a remote computer, see `Connect-WSMan`.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Disconnect-WSMan</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>ComputerName</maml:name>
          <maml:description>
            <maml:para>Specifies the computer against which to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, use localhost, or use a dot (`.`) to specify the local computer. The local computer is the default. When the remote computer is in a different domain from the user, you must use a fully qualified domain name must be used. You can pipe a value for this parameter to the cmdlet.</maml:para>
            <maml:para>You cannot disconnect from the local host. That is, you cannot disconnect the default connection to the local computer. However, if you create a separate connection to the local computer, for example, by using the computer name.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
        <maml:name>ComputerName</maml:name>
        <maml:description>
          <maml:para>Specifies the computer against which to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, use localhost, or use a dot (`.`) to specify the local computer. The local computer is the default. When the remote computer is in a different domain from the user, you must use a fully qualified domain name must be used. You can pipe a value for this parameter to the cmdlet.</maml:para>
          <maml:para>You cannot disconnect from the local host. That is, you cannot disconnect the default connection to the local computer. However, if you create a separate connection to the local computer, for example, by using the computer name.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not accept any input.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not generate any output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>----- Example 1: Delete a connection to a remote computer -----</maml:title>
        <dev:code>PS C:\&gt; Disconnect-WSMan -computer server01
PS C:\&gt; cd WSMan:
PS WSMan:\&gt; dir

WSManConfig: Microsoft.WSMan.Management\WSMan::WSMan
ComputerName                                  Type
------------                                  ----
localhost                                     Container</dev:code>
        <dev:remarks>
          <maml:para>This command deletes the connection to the remote computer named server01.</maml:para>
          <maml:para>This cmdlet is generally used within the context of the WSMan provider to disconnect from a remote computer, in this case the server01 computer. However, you can also use `Disconnect-WSMan` to remove connections to remote computers before you change to the WSMan provider. Those connections do not appear in the ComputerName list.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/microsoft.wsman.management/disconnect-wsman?view=powershell-7.2&amp;WT.mc_id=ps-gethelp</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Invoke-WSManAction</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManSessionOption</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManQuickConfig</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Enable-WSManCredSSP</command:name>
      <command:verb>Enable</command:verb>
      <command:noun>WSManCredSSP</command:noun>
      <maml:description>
        <maml:para>Enables Credential Security Support Provider (CredSSP) authentication on a computer.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>&gt; This cmdlet is only available on the Windows platform. The `Enable-WSManCredSSP` cmdlet enables CredSSP authentication on a client or on a server computer. When CredSSP authentication is used, the user credentials are passed to a remote computer to be authenticated. This type of authentication is designed for commands that create a remote session from another remote session. For example, if you want to run a background job on a remote computer, use this kind of authentication.</maml:para>
      <maml:para>`Enable-WSManCredSSP` can enable CredSSP on a Client or a Server . To enable CredSSP on a client, specify Client in the Role parameter. Clients delegate explicit credentials to a server when server authentication is achieved. To enable CredSSP on a server, specify Server in the Role parameter. A server acts as a delegate for clients. For more details, see Role in the Parameters section.</maml:para>
      <maml:para>&gt; [!CAUTION] &gt; CredSSP authentication delegates the user credentials from the local computer to a remote &gt; computer. This practice increases the security risk of the remote operation. If the remote &gt; computer is compromised, when credentials are passed to it, the credentials can be used to control &gt; the network session.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Enable-WSManCredSSP</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
          <maml:name>Role</maml:name>
          <maml:description>
            <maml:para>Specifies whether to enable CredSSP as a client or as a server. The acceptable values for this parameter are: Client and Server .</maml:para>
            <maml:para>If you specify Client , the following actions are performed. These settings allow the client to delegate explicit credentials to a server when server authentication is achieved.</maml:para>
            <maml:para>- Enables CredSSP on the client.</maml:para>
            <maml:para>- Sets the WS-Management setting `&lt;localhost|computername&gt;\Client\Auth\CredSSP` to true.</maml:para>
            <maml:para>- Sets the Windows CredSSP policy AllowFreshCredentials to WSMan/Delegate on the client.</maml:para>
            <maml:para>If you specify Server , the following actions are performed. This policy setting allows the server to act as a delegate for clients.</maml:para>
            <maml:para>- Enables CredSSP on the server.</maml:para>
            <maml:para>- Sets the WS-Management setting `&lt;localhost|computername&gt;\Service\Auth\CredSSP` to true.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Client</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Server</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="none">
          <maml:name>DelegateComputer</maml:name>
          <maml:description>
            <maml:para>Specifies servers to which client credentials are delegated. The best practice is to use fully qualified domain names.</maml:para>
            <maml:para>Wildcards are accepted, but can enable CredSSP on more computers than necessary.</maml:para>
            <maml:para>If the Role parameter is Client , you must specify this parameter. If Role is Server , don't specify this parameter.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
          <dev:type>
            <maml:name>System.String[]</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Forces the command to run without asking for user confirmation.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="true" pipelineInput="False" position="1" aliases="none">
        <maml:name>DelegateComputer</maml:name>
        <maml:description>
          <maml:para>Specifies servers to which client credentials are delegated. The best practice is to use fully qualified domain names.</maml:para>
          <maml:para>Wildcards are accepted, but can enable CredSSP on more computers than necessary.</maml:para>
          <maml:para>If the Role parameter is Client , you must specify this parameter. If Role is Server , don't specify this parameter.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String[]</command:parameterValue>
        <dev:type>
          <maml:name>System.String[]</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>Forces the command to run without asking for user confirmation.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="none">
        <maml:name>Role</maml:name>
        <maml:description>
          <maml:para>Specifies whether to enable CredSSP as a client or as a server. The acceptable values for this parameter are: Client and Server .</maml:para>
          <maml:para>If you specify Client , the following actions are performed. These settings allow the client to delegate explicit credentials to a server when server authentication is achieved.</maml:para>
          <maml:para>- Enables CredSSP on the client.</maml:para>
          <maml:para>- Sets the WS-Management setting `&lt;localhost|computername&gt;\Client\Auth\CredSSP` to true.</maml:para>
          <maml:para>- Sets the Windows CredSSP policy AllowFreshCredentials to WSMan/Delegate on the client.</maml:para>
          <maml:para>If you specify Server , the following actions are performed. This policy setting allows the server to act as a delegate for clients.</maml:para>
          <maml:para>- Enables CredSSP on the server.</maml:para>
          <maml:para>- Sets the WS-Management setting `&lt;localhost|computername&gt;\Service\Auth\CredSSP` to true.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet doesn't accept any input.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Xml.XmlElement</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>If CredSSP authentication is successfully enabled, this cmdlet generates an XMLElement object.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>To disable CredSSP authentication, use the `Disable-WSManCredSSP` cmdlet.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>------------ Example 1: Delegate client credentials ------------</maml:title>
        <dev:code>Enable-WSManCredSSP -Role "Client" -DelegateComputer "Server02.fabrikam.com"

cfg         : http://schemas.microsoft.com/wbem/wsman/1/config/client/auth
lang        : en-US
Basic       : true
Digest      : true
Kerberos    : true
Negotiate   : true
Certificate : true
CredSSP     : true</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 2: Delegate client credentials to all computers in a domain</maml:title>
        <dev:code>Enable-WSManCredSSP -Role "Client" -DelegateComputer "*.fabrikam.com"

cfg         : http://schemas.microsoft.com/wbem/wsman/1/config/client/auth
lang        : en-US
Basic       : true
Digest      : true
Kerberos    : true
Negotiate   : true
Certificate : true
CredSSP     : true</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>- Example 3: Delegate client credentials to multiple computers -</maml:title>
        <dev:code>$servers = "server02.fabrikam.com", "server03.fabrikam.com", "server04.fabrikam.com"
Enable-WSManCredSSP -Role "Client" -DelegateComputer $servers

cfg         : http://schemas.microsoft.com/wbem/wsman/1/config/client/auth
lang        : en-US
Basic       : true
Digest      : true
Kerberos    : true
Negotiate   : true
Certificate : true
CredSSP     : true</dev:code>
        <dev:remarks>
          <maml:para>The `$servers` variable contains a list of server names. `Enable-WSManCredSSP` uses the Role parameter to specify the Client role. The DelegateComputer gets the computer names from the `$servers` variable.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>------- Example 4: Allow a computer to act as a delegate -------</maml:title>
        <dev:code>Enable-WSManCredSSP -Role "Server"</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 5: Allow a computer to act as a delegate by using Set-Item</maml:title>
        <dev:code>Connect-WSMan -ComputerName "server02"
Set-Item -Path "WSMan:\server02\service\auth\credSSP" -Value $True</dev:code>
        <dev:remarks>
          <maml:para>`Connect-WSMan` creates a connection to the remote computer, server02. `Set-Item` uses the Path parameter to specify the WSMan provider's location. The Value parameter sets the Service setting to true.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/microsoft.wsman.management/enable-wsmancredssp?view=powershell-7.2&amp;WT.mc_id=ps-gethelp</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disconnect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Invoke-WSManAction</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManSessionOption</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManQuickConfig</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-WSManCredSSP</command:name>
      <command:verb>Get</command:verb>
      <command:noun>WSManCredSSP</command:noun>
      <maml:description>
        <maml:para>Gets the Credential Security Support Provider-related configuration for the client.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>&gt; This cmdlet is only available on the Windows platform. The `Get-WSManCredSSP` cmdlet gets the Credential Security Support Provider-related configuration of the client and the server. The output indicates whether Credential Security Support Provider (CredSSP) authentication is enabled or disabled. This cmdlet also displays configuration information for the AllowFreshCredentials policy of CredSSP.</maml:para>
      <maml:para>When you use CredSSP authentication, the user credentials are passed to a remote computer to be authenticated. This type of authentication is designed for commands that create a remote session from another remote session. For example, if you want to run a background job on a remote computer, use this kind of authentication.</maml:para>
      <maml:para>The cmdlet performs the following actions:</maml:para>
      <maml:para>- Gets the WS-Management CredSSP setting on the client   (`&lt;localhost|computername&gt;\Client\Auth\CredSSP`). - Gets the Windows CredSSP policy setting AllowFreshCredentials . - Gets the WS-Management CredSSP setting on the server   (`&lt;localhost|computername&gt;\Service\Auth\CredSSP`).</maml:para>
      <maml:para>&gt; [!CAUTION] &gt; CredSSP authentication delegates the user credentials from the local computer to a remote &gt; computer. This practice increases the security risk of the remote operation. If the remote &gt; computer is compromised, when credentials are passed to it, the credentials can be used to control &gt; the network session.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-WSManCredSSP</maml:name>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters />
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not accept any input.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not generate any output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>To disable CredSSP authentication, use the `Disable-WSManCredSSP` cmdlet. To enable CredSSP authentication, use the `Enable-WSManCredSSP` cmdlet.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>----------- Example 1: Display CredSSP configuration -----------</maml:title>
        <dev:code>Get-WSManCredSSP</dev:code>
        <dev:remarks>
          <maml:para>This command displays CredSSP configuration information for both the client and server.</maml:para>
          <maml:para>The output identifies that this computer is or is not configured for CredSSP.</maml:para>
          <maml:para>If the computer is configured for CredSSP, this is the output:</maml:para>
          <maml:para>`The machine is configured to allow delegating fresh credentials to the following target(s): wsman/server02.accounting.fabrikam.com`</maml:para>
          <maml:para>If the computer is not configured for CredSSP, this is the output:</maml:para>
          <maml:para>`The machine is not configured to allow delegating fresh credentials.`</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/microsoft.wsman.management/get-wsmancredssp?view=powershell-7.2&amp;WT.mc_id=ps-gethelp</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disconnect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Invoke-WSManAction</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManSessionOption</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManQuickConfig</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-WSManInstance</command:name>
      <command:verb>Get</command:verb>
      <command:noun>WSManInstance</command:noun>
      <maml:description>
        <maml:para>Displays management information for a resource instance specified by a Resource URI.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The `Get-WSManInstance` cmdlet retrieves an instance of a management resource that is specified by a resource Uniform Resource Identifier (URI). The information that is retrieved can be a complex XML information set, which is an object, or a simple value. This cmdlet is the equivalent to the standard Web Services for Management (WS-Management) Get command.</maml:para>
      <maml:para>This cmdlet uses the WS-Management connection/transport layer to retrieve information.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-WSManInstance</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="RURI">
          <maml:name>ResourceURI</maml:name>
          <maml:description>
            <maml:para>Specifies the URI of the resource class or instance. The URI identifies a specific type of resource, such as disks or processes, on a computer.</maml:para>
            <maml:para>A URI consists of a prefix and a path of a resource. For example:</maml:para>
            <maml:para>`http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_LogicalDisk`</maml:para>
            <maml:para>`http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_NumericSensor`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ApplicationName</maml:name>
          <maml:description>
            <maml:para>Specifies the application name in the connection. The default value of the ApplicationName parameter is WSMAN. The complete identifier for the remote endpoint is in the following format:</maml:para>
            <maml:para>&lt;transport&gt;://&lt;server&gt;:&lt;port&gt;/&lt;ApplicationName&gt;</maml:para>
            <maml:para>For example: `http://server01:8080/WSMAN`</maml:para>
            <maml:para>Internet Information Services (IIS), which hosts the session, forwards requests with this endpoint to the specified application. This default setting of WSMAN is appropriate for most uses. This parameter is designed to be used if many computers establish remote connections to one computer that is running PowerShell. In this case, IIS hosts WS-Management for efficiency.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Associations</maml:name>
          <maml:description>
            <maml:para>Indicates that this cmdlet gets association instances, not associated instances. You can use this parameter only when the Dialect parameter has a value of Association.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
          <maml:name>Authentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to be used at the server. The acceptable values for this parameter are:</maml:para>
            <maml:para>- `Basic` - Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` - Use the authentication method implemented by the WS-Management protocol. This is the   default. - `Digest` - Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos` - The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate` - Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows for   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP` - Use Credential Security Support Provider (CredSSP) authentication, which lets the user   delegate credentials. This option is designed for commands that run on one remote computer but   collect data from or run additional commands on other remote computers.</maml:para>
            <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user credentials from the local computer to a remote computer. This practice &gt; increases the security risk of the remote operation. If the remote computer is compromised, when &gt; credentials are passed to it, the credentials can be used to control the network session.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Digest</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Negotiate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Basic</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Kerberos</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ClientCertificate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Credssp</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="UBPO, Base">
          <maml:name>BasePropertiesOnly</maml:name>
          <maml:description>
            <maml:para>Indicates that this cmdlet enumerates only the properties that are part of the base class that is specified by the ResourceURI parameter. This parameter has no effect if the Shallow parameter is specified.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateThumbprint</maml:name>
          <maml:description>
            <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
            <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
            <maml:para>To get a certificate thumbprint, use the `Get-Item` or `Get-ChildItem` command in the PowerShell Cert: drive.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="CN">
          <maml:name>ComputerName</maml:name>
          <maml:description>
            <maml:para>Specifies the computer against which to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, use localhost, or use a dot (`.`) to specify the local computer. The local computer is the default. When the remote computer is in a different domain from the user, you must use a fully qualified domain name must be used. You can pipe a value for this parameter to the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="CURI, CU">
          <maml:name>ConnectionURI</maml:name>
          <maml:description>
            <maml:para>Specifies the connection endpoint. The format of this string is as follows:</maml:para>
            <maml:para>&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;</maml:para>
            <maml:para>The following string is a correctly formatted value for this parameter:</maml:para>
            <maml:para>`http://Server01:8080/WSMAN`</maml:para>
            <maml:para>The URI must be fully qualified.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as User01, Domain01\User01, or User@Domain.com. Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, this cmdlet prompts you for a password.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Dialect</maml:name>
          <maml:description>
            <maml:para>Specifies the dialect to use in the filter predicate. This can be any dialect that is supported by the remote service. The following aliases can be used for the dialect URI:</maml:para>
            <maml:para>- `WQL` - `http://schemas.microsoft.com/wbem/wsman/1/WQL`</maml:para>
            <maml:para>- Selector - `http://schemas.microsoft.com/wbem/wsman/1/wsman/SelectorFilter`</maml:para>
            <maml:para>- Association - `http://schemas.dmtf.org/wbem/wsman/1/cimbinding/associationFilter`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Enumerate</maml:name>
          <maml:description>
            <maml:para>Indicates that this cmdlet returns all of the instances of a management resource.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Filter</maml:name>
          <maml:description>
            <maml:para>Specifies the filter expression for the enumeration. If you specify this parameter, you must also specify Dialect .</maml:para>
            <maml:para>The valid values of this parameter depend on the dialect that is specified in Dialect . For example, if Dialect is WQL, the Filter parameter must contain a string, and the string must contain a valid WQL query such as the following query:</maml:para>
            <maml:para>`"Select * from Win32_Service where State != Running"`</maml:para>
            <maml:para>If Dialect is Association, Filter must contain a string, and the string must contain a valid filter, such as the following filter:</maml:para>
            <maml:para>`-filter:Object=EPR[;AssociationClassName=AssocClassName][;ResultClassName=ClassName][;Role=RefPropertyName][;ResultRole=RefPropertyName]}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="OS">
          <maml:name>OptionSet</maml:name>
          <maml:description>
            <maml:para>Specifies a set of switches to a service to modify or refine the nature of the request. These resemble switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
            <maml:para>The following example demonstrates the syntax that passes the values 1, 2, and 3 for the a, b, and c parameters:</maml:para>
            <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Port</maml:name>
          <maml:description>
            <maml:para>Specifies the port to use when the client connects to the WinRM service. When the transport is HTTP, the default port is 80. When the transport is HTTPS, the default port is 443.</maml:para>
            <maml:para>When you use HTTPS as the transport, the value of the ComputerName parameter must match the server's certificate common name (CN). However, if the SkipCNCheck parameter is specified as part of the SessionOption parameter, the certificate common name of the server does not have to match the host name of the server. The SkipCNCheck parameter should be used only for trusted computers.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="RT">
          <maml:name>ReturnType</maml:name>
          <maml:description>
            <maml:para>Specifies the type of data to be returned. The acceptable values for this parameter are:</maml:para>
            <maml:para>- `Object`</maml:para>
            <maml:para>- `EPR`</maml:para>
            <maml:para>- `ObjectAndEPR`</maml:para>
            <maml:para></maml:para>
            <maml:para>The default value is `Object`.</maml:para>
            <maml:para>If you specify `Object` or do not specify this parameter, this cmdlet returns only objects. If you specify endpoint reference (EPR) this cmdlet returns only the endpoint references of the objects. Endpoint references contain information about the resource URI and the selectors for the instance. If you specify `ObjectAndEPR`, this cmdlet returns both the object and its associated endpoint references.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">object</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">epr</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">objectandepr</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="SO">
          <maml:name>SessionOption</maml:name>
          <maml:description>
            <maml:para>Specifies extended options for the WS-Management session. Enter a SessionOption object that you create by using the New-WSManSessionOption cmdlet. For more information about the options that are available, type `Get-Help New-WSManSessionOption`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Shallow</maml:name>
          <maml:description>
            <maml:para>Indicates that this cmdlet returns only instances of the base class that is specified in the resource URI. If you do not specify this parameter, this cmdlet returns instances of the base class that is specified in the URI and in all its derived classes.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="SSL">
          <maml:name>UseSSL</maml:name>
          <maml:description>
            <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol is used to establish a connection to the remote computer. By default, SSL is not used.</maml:para>
            <maml:para>WS-Management encrypts all the Windows PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If SSL is not available on the port that is used for the connection, and you specify this parameter, the command fails.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Get-WSManInstance</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="RURI">
          <maml:name>ResourceURI</maml:name>
          <maml:description>
            <maml:para>Specifies the URI of the resource class or instance. The URI identifies a specific type of resource, such as disks or processes, on a computer.</maml:para>
            <maml:para>A URI consists of a prefix and a path of a resource. For example:</maml:para>
            <maml:para>`http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_LogicalDisk`</maml:para>
            <maml:para>`http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_NumericSensor`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ApplicationName</maml:name>
          <maml:description>
            <maml:para>Specifies the application name in the connection. The default value of the ApplicationName parameter is WSMAN. The complete identifier for the remote endpoint is in the following format:</maml:para>
            <maml:para>&lt;transport&gt;://&lt;server&gt;:&lt;port&gt;/&lt;ApplicationName&gt;</maml:para>
            <maml:para>For example: `http://server01:8080/WSMAN`</maml:para>
            <maml:para>Internet Information Services (IIS), which hosts the session, forwards requests with this endpoint to the specified application. This default setting of WSMAN is appropriate for most uses. This parameter is designed to be used if many computers establish remote connections to one computer that is running PowerShell. In this case, IIS hosts WS-Management for efficiency.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
          <maml:name>Authentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to be used at the server. The acceptable values for this parameter are:</maml:para>
            <maml:para>- `Basic` - Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` - Use the authentication method implemented by the WS-Management protocol. This is the   default. - `Digest` - Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos` - The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate` - Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows for   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP` - Use Credential Security Support Provider (CredSSP) authentication, which lets the user   delegate credentials. This option is designed for commands that run on one remote computer but   collect data from or run additional commands on other remote computers.</maml:para>
            <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user credentials from the local computer to a remote computer. This practice &gt; increases the security risk of the remote operation. If the remote computer is compromised, when &gt; credentials are passed to it, the credentials can be used to control the network session.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Digest</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Negotiate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Basic</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Kerberos</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ClientCertificate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Credssp</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateThumbprint</maml:name>
          <maml:description>
            <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
            <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
            <maml:para>To get a certificate thumbprint, use the `Get-Item` or `Get-ChildItem` command in the PowerShell Cert: drive.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="CN">
          <maml:name>ComputerName</maml:name>
          <maml:description>
            <maml:para>Specifies the computer against which to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, use localhost, or use a dot (`.`) to specify the local computer. The local computer is the default. When the remote computer is in a different domain from the user, you must use a fully qualified domain name must be used. You can pipe a value for this parameter to the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="CURI, CU">
          <maml:name>ConnectionURI</maml:name>
          <maml:description>
            <maml:para>Specifies the connection endpoint. The format of this string is as follows:</maml:para>
            <maml:para>&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;</maml:para>
            <maml:para>The following string is a correctly formatted value for this parameter:</maml:para>
            <maml:para>`http://Server01:8080/WSMAN`</maml:para>
            <maml:para>The URI must be fully qualified.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as User01, Domain01\User01, or User@Domain.com. Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, this cmdlet prompts you for a password.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Dialect</maml:name>
          <maml:description>
            <maml:para>Specifies the dialect to use in the filter predicate. This can be any dialect that is supported by the remote service. The following aliases can be used for the dialect URI:</maml:para>
            <maml:para>- `WQL` - `http://schemas.microsoft.com/wbem/wsman/1/WQL`</maml:para>
            <maml:para>- Selector - `http://schemas.microsoft.com/wbem/wsman/1/wsman/SelectorFilter`</maml:para>
            <maml:para>- Association - `http://schemas.dmtf.org/wbem/wsman/1/cimbinding/associationFilter`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Fragment</maml:name>
          <maml:description>
            <maml:para>Specifies a section inside the instance that is to be updated or retrieved for the specified operation. For example, to get the status of a spooler service, specify the following:</maml:para>
            <maml:para>`-Fragment Status`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="OS">
          <maml:name>OptionSet</maml:name>
          <maml:description>
            <maml:para>Specifies a set of switches to a service to modify or refine the nature of the request. These resemble switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
            <maml:para>The following example demonstrates the syntax that passes the values 1, 2, and 3 for the a, b, and c parameters:</maml:para>
            <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Port</maml:name>
          <maml:description>
            <maml:para>Specifies the port to use when the client connects to the WinRM service. When the transport is HTTP, the default port is 80. When the transport is HTTPS, the default port is 443.</maml:para>
            <maml:para>When you use HTTPS as the transport, the value of the ComputerName parameter must match the server's certificate common name (CN). However, if the SkipCNCheck parameter is specified as part of the SessionOption parameter, the certificate common name of the server does not have to match the host name of the server. The SkipCNCheck parameter should be used only for trusted computers.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SelectorSet</maml:name>
          <maml:description>
            <maml:para>Specifies a set of value pairs that are used to select particular management resource instances. The SelectorSet parameter is used when more than one instance of the resource exists. The value of the SelectorSet parameter must be a hash table.</maml:para>
            <maml:para>The following example shows how to enter a value for this parameter:</maml:para>
            <maml:para>`-SelectorSet @{Name="WinRM";ID="yyy"}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="SO">
          <maml:name>SessionOption</maml:name>
          <maml:description>
            <maml:para>Specifies extended options for the WS-Management session. Enter a SessionOption object that you create by using the New-WSManSessionOption cmdlet. For more information about the options that are available, type `Get-Help New-WSManSessionOption`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="SSL">
          <maml:name>UseSSL</maml:name>
          <maml:description>
            <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol is used to establish a connection to the remote computer. By default, SSL is not used.</maml:para>
            <maml:para>WS-Management encrypts all the Windows PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If SSL is not available on the port that is used for the connection, and you specify this parameter, the command fails.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ApplicationName</maml:name>
        <maml:description>
          <maml:para>Specifies the application name in the connection. The default value of the ApplicationName parameter is WSMAN. The complete identifier for the remote endpoint is in the following format:</maml:para>
          <maml:para>&lt;transport&gt;://&lt;server&gt;:&lt;port&gt;/&lt;ApplicationName&gt;</maml:para>
          <maml:para>For example: `http://server01:8080/WSMAN`</maml:para>
          <maml:para>Internet Information Services (IIS), which hosts the session, forwards requests with this endpoint to the specified application. This default setting of WSMAN is appropriate for most uses. This parameter is designed to be used if many computers establish remote connections to one computer that is running PowerShell. In this case, IIS hosts WS-Management for efficiency.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Associations</maml:name>
        <maml:description>
          <maml:para>Indicates that this cmdlet gets association instances, not associated instances. You can use this parameter only when the Dialect parameter has a value of Association.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
        <maml:name>Authentication</maml:name>
        <maml:description>
          <maml:para>Specifies the authentication mechanism to be used at the server. The acceptable values for this parameter are:</maml:para>
          <maml:para>- `Basic` - Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` - Use the authentication method implemented by the WS-Management protocol. This is the   default. - `Digest` - Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos` - The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate` - Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows for   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP` - Use Credential Security Support Provider (CredSSP) authentication, which lets the user   delegate credentials. This option is designed for commands that run on one remote computer but   collect data from or run additional commands on other remote computers.</maml:para>
          <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user credentials from the local computer to a remote computer. This practice &gt; increases the security risk of the remote operation. If the remote computer is compromised, when &gt; credentials are passed to it, the credentials can be used to control the network session.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="UBPO, Base">
        <maml:name>BasePropertiesOnly</maml:name>
        <maml:description>
          <maml:para>Indicates that this cmdlet enumerates only the properties that are part of the base class that is specified by the ResourceURI parameter. This parameter has no effect if the Shallow parameter is specified.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CertificateThumbprint</maml:name>
        <maml:description>
          <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
          <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
          <maml:para>To get a certificate thumbprint, use the `Get-Item` or `Get-ChildItem` command in the PowerShell Cert: drive.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="CN">
        <maml:name>ComputerName</maml:name>
        <maml:description>
          <maml:para>Specifies the computer against which to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, use localhost, or use a dot (`.`) to specify the local computer. The local computer is the default. When the remote computer is in a different domain from the user, you must use a fully qualified domain name must be used. You can pipe a value for this parameter to the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="CURI, CU">
        <maml:name>ConnectionURI</maml:name>
        <maml:description>
          <maml:para>Specifies the connection endpoint. The format of this string is as follows:</maml:para>
          <maml:para>&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;</maml:para>
          <maml:para>The following string is a correctly formatted value for this parameter:</maml:para>
          <maml:para>`http://Server01:8080/WSMAN`</maml:para>
          <maml:para>The URI must be fully qualified.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
        <dev:type>
          <maml:name>System.Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as User01, Domain01\User01, or User@Domain.com. Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, this cmdlet prompts you for a password.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Dialect</maml:name>
        <maml:description>
          <maml:para>Specifies the dialect to use in the filter predicate. This can be any dialect that is supported by the remote service. The following aliases can be used for the dialect URI:</maml:para>
          <maml:para>- `WQL` - `http://schemas.microsoft.com/wbem/wsman/1/WQL`</maml:para>
          <maml:para>- Selector - `http://schemas.microsoft.com/wbem/wsman/1/wsman/SelectorFilter`</maml:para>
          <maml:para>- Association - `http://schemas.dmtf.org/wbem/wsman/1/cimbinding/associationFilter`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
        <dev:type>
          <maml:name>System.Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Enumerate</maml:name>
        <maml:description>
          <maml:para>Indicates that this cmdlet returns all of the instances of a management resource.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Filter</maml:name>
        <maml:description>
          <maml:para>Specifies the filter expression for the enumeration. If you specify this parameter, you must also specify Dialect .</maml:para>
          <maml:para>The valid values of this parameter depend on the dialect that is specified in Dialect . For example, if Dialect is WQL, the Filter parameter must contain a string, and the string must contain a valid WQL query such as the following query:</maml:para>
          <maml:para>`"Select * from Win32_Service where State != Running"`</maml:para>
          <maml:para>If Dialect is Association, Filter must contain a string, and the string must contain a valid filter, such as the following filter:</maml:para>
          <maml:para>`-filter:Object=EPR[;AssociationClassName=AssocClassName][;ResultClassName=ClassName][;Role=RefPropertyName][;ResultRole=RefPropertyName]}`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Fragment</maml:name>
        <maml:description>
          <maml:para>Specifies a section inside the instance that is to be updated or retrieved for the specified operation. For example, to get the status of a spooler service, specify the following:</maml:para>
          <maml:para>`-Fragment Status`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="OS">
        <maml:name>OptionSet</maml:name>
        <maml:description>
          <maml:para>Specifies a set of switches to a service to modify or refine the nature of the request. These resemble switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
          <maml:para>The following example demonstrates the syntax that passes the values 1, 2, and 3 for the a, b, and c parameters:</maml:para>
          <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Port</maml:name>
        <maml:description>
          <maml:para>Specifies the port to use when the client connects to the WinRM service. When the transport is HTTP, the default port is 80. When the transport is HTTPS, the default port is 443.</maml:para>
          <maml:para>When you use HTTPS as the transport, the value of the ComputerName parameter must match the server's certificate common name (CN). However, if the SkipCNCheck parameter is specified as part of the SessionOption parameter, the certificate common name of the server does not have to match the host name of the server. The SkipCNCheck parameter should be used only for trusted computers.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="RURI">
        <maml:name>ResourceURI</maml:name>
        <maml:description>
          <maml:para>Specifies the URI of the resource class or instance. The URI identifies a specific type of resource, such as disks or processes, on a computer.</maml:para>
          <maml:para>A URI consists of a prefix and a path of a resource. For example:</maml:para>
          <maml:para>`http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_LogicalDisk`</maml:para>
          <maml:para>`http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_NumericSensor`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
        <dev:type>
          <maml:name>System.Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="RT">
        <maml:name>ReturnType</maml:name>
        <maml:description>
          <maml:para>Specifies the type of data to be returned. The acceptable values for this parameter are:</maml:para>
          <maml:para>- `Object`</maml:para>
          <maml:para>- `EPR`</maml:para>
          <maml:para>- `ObjectAndEPR`</maml:para>
          <maml:para></maml:para>
          <maml:para>The default value is `Object`.</maml:para>
          <maml:para>If you specify `Object` or do not specify this parameter, this cmdlet returns only objects. If you specify endpoint reference (EPR) this cmdlet returns only the endpoint references of the objects. Endpoint references contain information about the resource URI and the selectors for the instance. If you specify `ObjectAndEPR`, this cmdlet returns both the object and its associated endpoint references.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SelectorSet</maml:name>
        <maml:description>
          <maml:para>Specifies a set of value pairs that are used to select particular management resource instances. The SelectorSet parameter is used when more than one instance of the resource exists. The value of the SelectorSet parameter must be a hash table.</maml:para>
          <maml:para>The following example shows how to enter a value for this parameter:</maml:para>
          <maml:para>`-SelectorSet @{Name="WinRM";ID="yyy"}`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="SO">
        <maml:name>SessionOption</maml:name>
        <maml:description>
          <maml:para>Specifies extended options for the WS-Management session. Enter a SessionOption object that you create by using the New-WSManSessionOption cmdlet. For more information about the options that are available, type `Get-Help New-WSManSessionOption`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Shallow</maml:name>
        <maml:description>
          <maml:para>Indicates that this cmdlet returns only instances of the base class that is specified in the resource URI. If you do not specify this parameter, this cmdlet returns instances of the base class that is specified in the URI and in all its derived classes.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="SSL">
        <maml:name>UseSSL</maml:name>
        <maml:description>
          <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol is used to establish a connection to the remote computer. By default, SSL is not used.</maml:para>
          <maml:para>WS-Management encrypts all the Windows PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If SSL is not available on the port that is used for the connection, and you specify this parameter, the command fails.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This command does not accept any input.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>System.Xml.XmlElement</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet generates an XMLElement object.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>----------- Example 1: Get all information from WMI -----------</maml:title>
        <dev:code>Get-WSManInstance -ResourceURI wmicimv2/win32_service -SelectorSet @{name="winrm"} -ComputerName "Server01"</dev:code>
        <dev:remarks>
          <maml:para>This command returns all of the information that Windows Management Instrumentation (WMI) exposes about the WinRM service on the remote server01 computer.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>------- Example 2: Get the status of the Spooler service -------</maml:title>
        <dev:code>Get-WSManInstance -ResourceURI wmicimv2/win32_service -SelectorSet @{name="spooler"} -Fragment Status -ComputerName "Server01"</dev:code>
        <dev:remarks>
          <maml:para>This command returns only the status of the Spooler service on the remote server01 computer.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----- Example 3: Get endpoint references for all services -----</maml:title>
        <dev:code>Get-WSManInstance -Enumerate -ResourceURI wmicimv2/win32_service -ReturnType EPR</dev:code>
        <dev:remarks>
          <maml:para>This command returns endpoint references that correspond to all the services on the local computer.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>----- Example 4: Get services that meet specified criteria -----</maml:title>
        <dev:code>Get-WSManInstance -Enumerate -ResourceURI wmicimv2/* -Filter "select * from win32_service where StartMode = 'Auto' and State = 'Stopped'" -ComputerName "Server01"</dev:code>
        <dev:remarks>
          <maml:para>This command lists all of the services that meet the following criteria on the remote Server01 computer:</maml:para>
          <maml:para>- The startup type of the service is Automatic.</maml:para>
          <maml:para>- The service is stopped.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 5: Get listener configuration that matches criteria on the local computer</maml:title>
        <dev:code>Get-WSManInstance -ResourceURI winrm/config/listener -SelectorSet @{Address="*";Transport="http"}</dev:code>
        <dev:remarks>
          <maml:para>This command lists the WS-Management listener configuration on the local computer for the listener that matches the criteria in the selector set.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 6: Get listener configuration that matches criteria on a remote computer</maml:title>
        <dev:code>Get-WSManInstance -ResourceURI winrm/config/listener -SelectorSet @{Address="*";Transport="http"} -ComputerName "Server01"</dev:code>
        <dev:remarks>
          <maml:para>This command lists the WS-Management listener configuration on the remote server01 computer for the listener that matches the criteria in the selector set.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 7: Get associated instances related to a specified instance</maml:title>
        <dev:code>Get-WSManInstance -Enumerate -Dialect Association -Filter "{Object=win32_service?name=winrm}" -ResourceURI wmicimv2/*</dev:code>
        <dev:remarks>
          <maml:para>This command gets the associated instances that are related to the specified instance (winrm).</maml:para>
          <maml:para>You must enclose the filter in quotation marks, as shown in the example.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 8: Get association instances related to a specified instance</maml:title>
        <dev:code>Get-WSManInstance -Enumerate -Dialect Association -Associations -Filter "{Object=win32_service?name=winrm}" -ResourceURI wmicimv2/*</dev:code>
        <dev:remarks>
          <maml:para>This command gets association instances that are related to the specified instance (winrm). Because the Dialect value is association and the Associations parameter is used, this command returns association instances, not associated instances.</maml:para>
          <maml:para>You must enclose the filter in quotation marks, as shown in the example.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/microsoft.wsman.management/get-wsmaninstance?view=powershell-7.2&amp;WT.mc_id=ps-gethelp</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disconnect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Invoke-WSManAction</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManSessionOption</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManQuickConfig</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Invoke-WSManAction</command:name>
      <command:verb>Invoke</command:verb>
      <command:noun>WSManAction</command:noun>
      <maml:description>
        <maml:para>Invokes an action on the object that is specified by the Resource URI and by the selectors.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>&gt; This cmdlet is only available on the Windows platform. The `Invoke-WSManAction` runs an action on the object that is specified by RESOURCE_URI, where parameters are specified by key value pairs.</maml:para>
      <maml:para>This cmdlet uses the WSMan connection/transport layer to run the action.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Invoke-WSManAction</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="ruri">
          <maml:name>ResourceURI</maml:name>
          <maml:description>
            <maml:para>Contains the Uniform Resource Identifier (URI) of the resource class or instance. The URI is used to identify a specific type of resource, such as disks or processes, on a computer.</maml:para>
            <maml:para>A URI consists of a prefix and a path to a resource. For example:</maml:para>
            <maml:para>`http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_LogicalDisk`</maml:para>
            <maml:para>`http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_NumericSensor`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Action</maml:name>
          <maml:description>
            <maml:para>Specifies the method to run on the management object specified by the ResourceURI and selectors.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="none">
          <maml:name>SelectorSet</maml:name>
          <maml:description>
            <maml:para>Specifies a set of value pairs that are used to select particular management resource instances. SelectorSet is used when more than one instance of the resource exists. The value of SelectorSet must be a hash table.</maml:para>
            <maml:para>The following example shows how to enter a value for this parameter:</maml:para>
            <maml:para>`-SelectorSet @{Name="WinRM";ID="yyy"}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ApplicationName</maml:name>
          <maml:description>
            <maml:para>Specifies the application name in the connection. The default value of the ApplicationName parameter is WSMAN. The complete identifier for the remote endpoint is in the following format:</maml:para>
            <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
            <maml:para>For example:</maml:para>
            <maml:para>`http://server01:8080/WSMAN`</maml:para>
            <maml:para>Internet Information Services (IIS), which hosts the session, forwards requests with this endpoint to the specified application. This default setting of "WSMAN" is appropriate for most uses. This parameter is designed to be used when numerous computers establish remote connections to one computer running Windows PowerShell. In this case, IIS hosts Web Services for Management (WS-Management) for efficiency.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
          <maml:name>Authentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to be used at the server. Possible values are:</maml:para>
            <maml:para>- `Basic` - Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` - Use the authentication method implemented by the WS-Management protocol. This is the   default. - `Digest` - Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos` - The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate` - Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP` - Use Credential Security Support Provider (CredSSP) authentication, which allows the   user to delegate credentials. This option is designed for commands that run on one remote computer   but collect data from or run additional commands on other remote computers.</maml:para>
            <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user's credentials from the local computer to a remote computer. This &gt; practice increases the security risk of the remote operation. If the remote computer is &gt; compromised, when credentials are passed to it, the credentials can be used to control the network &gt; session.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Digest</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Negotiate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Basic</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Kerberos</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ClientCertificate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Credssp</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateThumbprint</maml:name>
          <maml:description>
            <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
            <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
            <maml:para>To get a certificate thumbprint, use the `Get-Item` or `Get-ChildItem` command in the Windows PowerShell Cert: drive.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cn">
          <maml:name>ComputerName</maml:name>
          <maml:description>
            <maml:para>Specifies the computer against which you want to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, use localhost, or use a dot (`.`) to specify the local computer. The local computer is the default. When the remote computer is in a different domain from the user, you must use a fully qualified domain name must be used. You can pipe a value for this parameter to the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as "User01", "Domain01\User01", or User@Domain.com. Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, you will be prompted for a password.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Path">
          <maml:name>FilePath</maml:name>
          <maml:description>
            <maml:para>Specifies the path of a file that is used to update a management resource. You specify the management resource by using the ResourceURI parameter and the SelectorSet parameter. For example, the following command uses the FilePath parameter:</maml:para>
            <maml:para>`Invoke-WSManAction -Action stopservice -ResourceUri wmicimv2/Win32_Service -SelectorSet @{Name="spooler"} -FilePath c:\input.xml -Authentication default`</maml:para>
            <maml:para>This command calls the StopService method on the Spooler service by using input from a file. The file, `Input.xml`, contains the following content:</maml:para>
            <maml:para>`&lt;p:StopService_INPUT xmlns:p="http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_Service" /&gt;`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="os">
          <maml:name>OptionSet</maml:name>
          <maml:description>
            <maml:para>Passes a set of switches to a service to modify or refine the nature of the request. These are similar to switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
            <maml:para>The following example demonstrates the syntax that passes the values 1, 2, and 3 for the a, b, and c parameters:</maml:para>
            <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Port</maml:name>
          <maml:description>
            <maml:para>Specifies the port to use when the client connects to the WinRM service. When the transport is HTTP, the default port is 80. When the transport is HTTPS, the default port is 443. When you use HTTPS as the transport, the value of the ComputerName parameter must match the server's certificate common name (CN). However, if the SkipCNCheck parameter is specified as part of the SessionOption parameter, then the certificate common name of the server does not have to match the host name of the server. The SkipCNCheck parameter should be used only for trusted machines.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="so">
          <maml:name>SessionOption</maml:name>
          <maml:description>
            <maml:para>Defines a set of extended options for the WS-Management session. Enter a SessionOption object that you create by using the `New-WSManSessionOption` cmdlet. For more information about the options that are available, see `New-WSManSessionOption`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UseSSL</maml:name>
          <maml:description>
            <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol is used to establish a connection to the remote computer. By default, SSL is not used.</maml:para>
            <maml:para>WS-Management encrypts all the PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If SSL is not available on the port that is used for the connection and you specify this parameter, the command fails.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ValueSet</maml:name>
          <maml:description>
            <maml:para>Specifies a hash table that helps modify a management resource. You specify the management resource using the ResourceURI and SelectorSet parameters. The value of the ValueSet parameter must be a hash table.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Invoke-WSManAction</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="ruri">
          <maml:name>ResourceURI</maml:name>
          <maml:description>
            <maml:para>Contains the Uniform Resource Identifier (URI) of the resource class or instance. The URI is used to identify a specific type of resource, such as disks or processes, on a computer.</maml:para>
            <maml:para>A URI consists of a prefix and a path to a resource. For example:</maml:para>
            <maml:para>`http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_LogicalDisk`</maml:para>
            <maml:para>`http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_NumericSensor`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
          <maml:name>Action</maml:name>
          <maml:description>
            <maml:para>Specifies the method to run on the management object specified by the ResourceURI and selectors.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="none">
          <maml:name>SelectorSet</maml:name>
          <maml:description>
            <maml:para>Specifies a set of value pairs that are used to select particular management resource instances. SelectorSet is used when more than one instance of the resource exists. The value of SelectorSet must be a hash table.</maml:para>
            <maml:para>The following example shows how to enter a value for this parameter:</maml:para>
            <maml:para>`-SelectorSet @{Name="WinRM";ID="yyy"}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
          <maml:name>Authentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to be used at the server. Possible values are:</maml:para>
            <maml:para>- `Basic` - Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` - Use the authentication method implemented by the WS-Management protocol. This is the   default. - `Digest` - Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos` - The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate` - Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP` - Use Credential Security Support Provider (CredSSP) authentication, which allows the   user to delegate credentials. This option is designed for commands that run on one remote computer   but collect data from or run additional commands on other remote computers.</maml:para>
            <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user's credentials from the local computer to a remote computer. This &gt; practice increases the security risk of the remote operation. If the remote computer is &gt; compromised, when credentials are passed to it, the credentials can be used to control the network &gt; session.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Digest</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Negotiate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Basic</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Kerberos</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ClientCertificate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Credssp</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateThumbprint</maml:name>
          <maml:description>
            <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
            <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
            <maml:para>To get a certificate thumbprint, use the `Get-Item` or `Get-ChildItem` command in the Windows PowerShell Cert: drive.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="CURI, CU">
          <maml:name>ConnectionURI</maml:name>
          <maml:description>
            <maml:para>Specifies the connection endpoint. The format of this string is:</maml:para>
            <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
            <maml:para>The following string is a properly formatted value for this parameter:</maml:para>
            <maml:para>`http://Server01:8080/WSMAN`</maml:para>
            <maml:para>The URI must be fully qualified.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as "User01", "Domain01\User01", or User@Domain.com. Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, you will be prompted for a password.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Path">
          <maml:name>FilePath</maml:name>
          <maml:description>
            <maml:para>Specifies the path of a file that is used to update a management resource. You specify the management resource by using the ResourceURI parameter and the SelectorSet parameter. For example, the following command uses the FilePath parameter:</maml:para>
            <maml:para>`Invoke-WSManAction -Action stopservice -ResourceUri wmicimv2/Win32_Service -SelectorSet @{Name="spooler"} -FilePath c:\input.xml -Authentication default`</maml:para>
            <maml:para>This command calls the StopService method on the Spooler service by using input from a file. The file, `Input.xml`, contains the following content:</maml:para>
            <maml:para>`&lt;p:StopService_INPUT xmlns:p="http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_Service" /&gt;`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="os">
          <maml:name>OptionSet</maml:name>
          <maml:description>
            <maml:para>Passes a set of switches to a service to modify or refine the nature of the request. These are similar to switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
            <maml:para>The following example demonstrates the syntax that passes the values 1, 2, and 3 for the a, b, and c parameters:</maml:para>
            <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="so">
          <maml:name>SessionOption</maml:name>
          <maml:description>
            <maml:para>Defines a set of extended options for the WS-Management session. Enter a SessionOption object that you create by using the `New-WSManSessionOption` cmdlet. For more information about the options that are available, see `New-WSManSessionOption`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ValueSet</maml:name>
          <maml:description>
            <maml:para>Specifies a hash table that helps modify a management resource. You specify the management resource using the ResourceURI and SelectorSet parameters. The value of the ValueSet parameter must be a hash table.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none">
        <maml:name>Action</maml:name>
        <maml:description>
          <maml:para>Specifies the method to run on the management object specified by the ResourceURI and selectors.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ApplicationName</maml:name>
        <maml:description>
          <maml:para>Specifies the application name in the connection. The default value of the ApplicationName parameter is WSMAN. The complete identifier for the remote endpoint is in the following format:</maml:para>
          <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
          <maml:para>For example:</maml:para>
          <maml:para>`http://server01:8080/WSMAN`</maml:para>
          <maml:para>Internet Information Services (IIS), which hosts the session, forwards requests with this endpoint to the specified application. This default setting of "WSMAN" is appropriate for most uses. This parameter is designed to be used when numerous computers establish remote connections to one computer running Windows PowerShell. In this case, IIS hosts Web Services for Management (WS-Management) for efficiency.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
        <maml:name>Authentication</maml:name>
        <maml:description>
          <maml:para>Specifies the authentication mechanism to be used at the server. Possible values are:</maml:para>
          <maml:para>- `Basic` - Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` - Use the authentication method implemented by the WS-Management protocol. This is the   default. - `Digest` - Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos` - The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate` - Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP` - Use Credential Security Support Provider (CredSSP) authentication, which allows the   user to delegate credentials. This option is designed for commands that run on one remote computer   but collect data from or run additional commands on other remote computers.</maml:para>
          <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user's credentials from the local computer to a remote computer. This &gt; practice increases the security risk of the remote operation. If the remote computer is &gt; compromised, when credentials are passed to it, the credentials can be used to control the network &gt; session.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CertificateThumbprint</maml:name>
        <maml:description>
          <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
          <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
          <maml:para>To get a certificate thumbprint, use the `Get-Item` or `Get-ChildItem` command in the Windows PowerShell Cert: drive.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cn">
        <maml:name>ComputerName</maml:name>
        <maml:description>
          <maml:para>Specifies the computer against which you want to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, use localhost, or use a dot (`.`) to specify the local computer. The local computer is the default. When the remote computer is in a different domain from the user, you must use a fully qualified domain name must be used. You can pipe a value for this parameter to the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="CURI, CU">
        <maml:name>ConnectionURI</maml:name>
        <maml:description>
          <maml:para>Specifies the connection endpoint. The format of this string is:</maml:para>
          <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
          <maml:para>The following string is a properly formatted value for this parameter:</maml:para>
          <maml:para>`http://Server01:8080/WSMAN`</maml:para>
          <maml:para>The URI must be fully qualified.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
        <dev:type>
          <maml:name>System.Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as "User01", "Domain01\User01", or User@Domain.com. Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, you will be prompted for a password.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Path">
        <maml:name>FilePath</maml:name>
        <maml:description>
          <maml:para>Specifies the path of a file that is used to update a management resource. You specify the management resource by using the ResourceURI parameter and the SelectorSet parameter. For example, the following command uses the FilePath parameter:</maml:para>
          <maml:para>`Invoke-WSManAction -Action stopservice -ResourceUri wmicimv2/Win32_Service -SelectorSet @{Name="spooler"} -FilePath c:\input.xml -Authentication default`</maml:para>
          <maml:para>This command calls the StopService method on the Spooler service by using input from a file. The file, `Input.xml`, contains the following content:</maml:para>
          <maml:para>`&lt;p:StopService_INPUT xmlns:p="http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_Service" /&gt;`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="os">
        <maml:name>OptionSet</maml:name>
        <maml:description>
          <maml:para>Passes a set of switches to a service to modify or refine the nature of the request. These are similar to switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
          <maml:para>The following example demonstrates the syntax that passes the values 1, 2, and 3 for the a, b, and c parameters:</maml:para>
          <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Port</maml:name>
        <maml:description>
          <maml:para>Specifies the port to use when the client connects to the WinRM service. When the transport is HTTP, the default port is 80. When the transport is HTTPS, the default port is 443. When you use HTTPS as the transport, the value of the ComputerName parameter must match the server's certificate common name (CN). However, if the SkipCNCheck parameter is specified as part of the SessionOption parameter, then the certificate common name of the server does not have to match the host name of the server. The SkipCNCheck parameter should be used only for trusted machines.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="ruri">
        <maml:name>ResourceURI</maml:name>
        <maml:description>
          <maml:para>Contains the Uniform Resource Identifier (URI) of the resource class or instance. The URI is used to identify a specific type of resource, such as disks or processes, on a computer.</maml:para>
          <maml:para>A URI consists of a prefix and a path to a resource. For example:</maml:para>
          <maml:para>`http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_LogicalDisk`</maml:para>
          <maml:para>`http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_NumericSensor`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
        <dev:type>
          <maml:name>System.Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="2" aliases="none">
        <maml:name>SelectorSet</maml:name>
        <maml:description>
          <maml:para>Specifies a set of value pairs that are used to select particular management resource instances. SelectorSet is used when more than one instance of the resource exists. The value of SelectorSet must be a hash table.</maml:para>
          <maml:para>The following example shows how to enter a value for this parameter:</maml:para>
          <maml:para>`-SelectorSet @{Name="WinRM";ID="yyy"}`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="so">
        <maml:name>SessionOption</maml:name>
        <maml:description>
          <maml:para>Defines a set of extended options for the WS-Management session. Enter a SessionOption object that you create by using the `New-WSManSessionOption` cmdlet. For more information about the options that are available, see `New-WSManSessionOption`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UseSSL</maml:name>
        <maml:description>
          <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol is used to establish a connection to the remote computer. By default, SSL is not used.</maml:para>
          <maml:para>WS-Management encrypts all the PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If SSL is not available on the port that is used for the connection and you specify this parameter, the command fails.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ValueSet</maml:name>
        <maml:description>
          <maml:para>Specifies a hash table that helps modify a management resource. You specify the management resource using the ResourceURI and SelectorSet parameters. The value of the ValueSet parameter must be a hash table.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not accept any input.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not generate any output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>------------------ Example 1: Invoke a method ------------------</maml:title>
        <dev:code>Invoke-WSManAction -Action startservice -ResourceURI wmicimv2/win32_service  -SelectorSet @{name="spooler"} -Authentication default

xsi         : http://www.w3.org/2001/XMLSchema-instance
p           : http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_Service
cim         : http://schemas.dmtf.org/wbem/wscim/1/common
lang        : en-US
ReturnValue : 0</dev:code>
        <dev:remarks>
          <maml:para>This command calls the StartService method of the Win32_Service WMI class instance that corresponds to the Spooler service.</maml:para>
          <maml:para>The return value indicates whether the action was successful. In this case, a return value of 0 indicates success. A return value of 5 indicates that the service is already started.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>------------------ Example 2: Invoke a method ------------------</maml:title>
        <dev:code>Invoke-WSManAction -Action stopservice -ResourceURI wmicimv2/Win32_Service -SelectorSet @{Name="spooler"} -FilePath:input.xml -Authentication default

xsi         : http://www.w3.org/2001/XMLSchema-instance
p           : http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_Service
cim         : http://schemas.dmtf.org/wbem/wscim/1/common
lang        : en-US
ReturnValue : 0</dev:code>
        <dev:remarks>
          <maml:para>This command calls the StopService method on the Spooler service by using input from a file. The file, `Input.xml`, contains the following content:</maml:para>
          <maml:para>`&lt;p:StopService_INPUT xmlns:p="http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_Service" /&gt;`</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>-- Example 3: Invoke a method with specified parameter values --</maml:title>
        <dev:code>Invoke-WSManAction -Action create -ResourceURI wmicimv2/win32_process -ValueSet @{commandline="notepad.exe";currentdirectory="C:\"}

xsi         : http://www.w3.org/2001/XMLSchema-instance
p           : http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_Process
cim         : http://schemas.dmtf.org/wbem/wscim/1/common
lang        : en-US
ProcessId   : 6356
ReturnValue : 0</dev:code>
        <dev:remarks>
          <maml:para>This command calls the Create method of the Win32_Process class. It passes the method two parameter values, `Notepad.exe` and `C:`. As a result, a new process is created to run Notepad, and the current directory of the new process is set to `C:`.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>------- Example 4: Invoke a method on a remote computer -------</maml:title>
        <dev:code>Invoke-WSManAction -Action startservice -ResourceURI wmicimv2/win32_service  -SelectorSet @{name="spooler"} -ComputerName server01 -Authentication default

xsi         : http://www.w3.org/2001/XMLSchema-instance
p           : http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_Service
cim         : http://schemas.dmtf.org/wbem/wscim/1/common
lang        : en-US
ReturnValue : 0</dev:code>
        <dev:remarks>
          <maml:para>This command calls the StartService method of the Win32_Service WMI class instance that corresponds to the Spooler service. Because the ComputerName parameter is specified, the command runs against the remote server01 computer.</maml:para>
          <maml:para>The return value indicates whether the action was successful. In this case, a return value of 0 indicates success. A return value of 5 indicates that the service is already started.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/microsoft.wsman.management/invoke-wsmanaction?view=powershell-7.2&amp;WT.mc_id=ps-gethelp</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disconnect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManSessionOption</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManQuickConfig</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-WSManInstance</command:name>
      <command:verb>New</command:verb>
      <command:noun>WSManInstance</command:noun>
      <maml:description>
        <maml:para>Creates a new instance of a management resource.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>&gt; This cmdlet is only available on the Windows platform. The `New-WSManInstance` cmdlet creates a new instance of a management resource. It uses a resource URI and a value set or input file to create the new instance of the management resource.</maml:para>
      <maml:para>This cmdlet uses the WinRM connection/transport layer to create the management resource instance.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-WSManInstance</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="ruri">
          <maml:name>ResourceURI</maml:name>
          <maml:description>
            <maml:para>Contains the Uniform Resource Identifier (URI) of the resource class or instance. The URI is used to identify a specific type of resource, such as disks or processes, on a computer.</maml:para>
            <maml:para>A URI consists of a prefix and a path to a resource. For example:</maml:para>
            <maml:para>`http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_LogicalDisk`</maml:para>
            <maml:para>`http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_NumericSensor`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
          <maml:name>SelectorSet</maml:name>
          <maml:description>
            <maml:para>Specifies a set of value pairs that are used to select particular management resource instances. The SelectorSet parameter is used when more than one instance of the resource exists. The value of the SelectorSet parameter must be a hash table.</maml:para>
            <maml:para>The following example shows how to enter a value for this parameter:</maml:para>
            <maml:para>`-SelectorSet @{Name="WinRM";ID="yyy"}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ApplicationName</maml:name>
          <maml:description>
            <maml:para>Specifies the application name in the connection. The default value of the ApplicationName parameter is WSMAN . The complete identifier for the remote endpoint is in the following format:</maml:para>
            <maml:para>`&lt;transport&gt;://&lt;server&gt;:&lt;port&gt;/&lt;ApplicationName&gt;`</maml:para>
            <maml:para>For example:</maml:para>
            <maml:para>`http://server01:8080/WSMAN`</maml:para>
            <maml:para>Internet Information Services (IIS), which hosts the session, forwards requests with this endpoint to the specified application. This default setting of WSMAN is appropriate for most uses. This parameter is designed to be used when numerous computers establish remote connections to one computer that is running Windows PowerShell. In this case, IIS hosts Web Services for Management (WS-Management) for efficiency.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Wsman</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
          <maml:name>Authentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to be used at the server. Possible values are:</maml:para>
            <maml:para>- Basic: Basic is a scheme in which the username and password are sent in clear text to the server   or proxy. - Default: Use the authentication method implemented by the WS-Management protocol. This is the   default. - Digest: Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - Kerberos: The client computer and the server mutually authenticate using Kerberos certificates.</maml:para>
            <maml:para>- Negotiate: Negotiate is a challenge-response scheme that negotiates with the server or proxy to</maml:para>
            <maml:para>  determine the scheme to use for authentication. For example, this parameter value allows   negotiation to determine whether the Kerberos protocol or NTLM is used. - CredSSP: Use Credential Security Support Provider (CredSSP) authentication, which allows the user   to delegate credentials. This option is designed for commands that run on one remote computer but   collect data from or run additional commands on other remote computers.</maml:para>
            <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user's credentials from the local computer to a remote computer. This &gt; practice increases the security risk of the remote operation. If the remote computer is &gt; compromised, when credentials are passed to it, the credentials can be used to control the network &gt; session.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Digest</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Negotiate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Basic</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Kerberos</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ClientCertificate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Credssp</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateThumbprint</maml:name>
          <maml:description>
            <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
            <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
            <maml:para>To get a certificate thumbprint, use the `Get-Item` or `Get-ChildItem` command in the PowerShell Cert: drive.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cn">
          <maml:name>ComputerName</maml:name>
          <maml:description>
            <maml:para>Specifies the computer against which you want to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, use localhost, or use a dot (`.`) to specify the local computer. The local computer is the default. When the remote computer is in a different domain from the user, you must use a fully qualified domain name must be used. You can pipe a value for this parameter to the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Localhost</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as "User01", "Domain01\User01", or "User@Domain.com". Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, you will be prompted for a password.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Path">
          <maml:name>FilePath</maml:name>
          <maml:description>
            <maml:para>Specifies the path of a file that is used to create a management resource. You specify the management resource using the ResourceURI parameter and the SelectorSet parameter . For example, the following command uses the File parameter:</maml:para>
            <maml:para>`Invoke-WSManAction -Action stopservice -ResourceUri wmi/cimv2/Win32_Service -SelectorSet @{Name="spooler"} -File c:\input.xml -Authentication Default`</maml:para>
            <maml:para>This command calls the StopService method on the Spooler service using input from a file. The file, `Input.xml`, contains the following content:</maml:para>
            <maml:para>`&lt;p:StopService_INPUT xmlns:p="http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_Service" /&gt;`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="os">
          <maml:name>OptionSet</maml:name>
          <maml:description>
            <maml:para>Passes a set of switches to a service to modify or refine the nature of the request. These are similar to switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
            <maml:para>The following example demonstrates the syntax that passes the values 1, 2, and 3 for the a, b, and c parameters:</maml:para>
            <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Port</maml:name>
          <maml:description>
            <maml:para>Specifies the port to use when the client connects to the WinRM service. When the transport is HTTP, the default port is 80. When the transport is HTTPS, the default port is 443.</maml:para>
            <maml:para>When you use HTTPS as the transport, the value of the ComputerName parameter must match the server's certificate common name (CN). However, if the SkipCNCheck parameter is specified as part of the SessionOption parameter, the certificate common name of the server does not have to match the host name of the server. The SkipCNCheck parameter should be used only for trusted computers.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="so">
          <maml:name>SessionOption</maml:name>
          <maml:description>
            <maml:para>Defines a set of extended options for the WS-Management session. Enter a SessionOption object that you create using the `New-WSManSessionOption` cmdlet. For more information about the options that are available, see `New-WSManSessionOption`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UseSSL</maml:name>
          <maml:description>
            <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol should be used to establish a connection to the remote computer. By default, SSL is not used.</maml:para>
            <maml:para>WS-Management encrypts all the Windows PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If SSL is not available on the port that is used for the connection and you specify this parameter, the command fails.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ValueSet</maml:name>
          <maml:description>
            <maml:para>Specifies a hash table that helps modify a management resource. You specify the management resource using the ResourceURI parameter and the SelectorSet parameter. The value of the ValueSet parameter must be a hash table.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>New-WSManInstance</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="ruri">
          <maml:name>ResourceURI</maml:name>
          <maml:description>
            <maml:para>Contains the Uniform Resource Identifier (URI) of the resource class or instance. The URI is used to identify a specific type of resource, such as disks or processes, on a computer.</maml:para>
            <maml:para>A URI consists of a prefix and a path to a resource. For example:</maml:para>
            <maml:para>`http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_LogicalDisk`</maml:para>
            <maml:para>`http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_NumericSensor`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
          <maml:name>SelectorSet</maml:name>
          <maml:description>
            <maml:para>Specifies a set of value pairs that are used to select particular management resource instances. The SelectorSet parameter is used when more than one instance of the resource exists. The value of the SelectorSet parameter must be a hash table.</maml:para>
            <maml:para>The following example shows how to enter a value for this parameter:</maml:para>
            <maml:para>`-SelectorSet @{Name="WinRM";ID="yyy"}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
          <maml:name>Authentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to be used at the server. Possible values are:</maml:para>
            <maml:para>- Basic: Basic is a scheme in which the username and password are sent in clear text to the server   or proxy. - Default: Use the authentication method implemented by the WS-Management protocol. This is the   default. - Digest: Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - Kerberos: The client computer and the server mutually authenticate using Kerberos certificates.</maml:para>
            <maml:para>- Negotiate: Negotiate is a challenge-response scheme that negotiates with the server or proxy to</maml:para>
            <maml:para>  determine the scheme to use for authentication. For example, this parameter value allows   negotiation to determine whether the Kerberos protocol or NTLM is used. - CredSSP: Use Credential Security Support Provider (CredSSP) authentication, which allows the user   to delegate credentials. This option is designed for commands that run on one remote computer but   collect data from or run additional commands on other remote computers.</maml:para>
            <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user's credentials from the local computer to a remote computer. This &gt; practice increases the security risk of the remote operation. If the remote computer is &gt; compromised, when credentials are passed to it, the credentials can be used to control the network &gt; session.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Digest</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Negotiate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Basic</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Kerberos</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ClientCertificate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Credssp</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateThumbprint</maml:name>
          <maml:description>
            <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
            <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
            <maml:para>To get a certificate thumbprint, use the `Get-Item` or `Get-ChildItem` command in the PowerShell Cert: drive.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="CURI, CU">
          <maml:name>ConnectionURI</maml:name>
          <maml:description>
            <maml:para>Specifies the connection endpoint. The format of this string is:</maml:para>
            <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
            <maml:para>The following string is a properly formatted value for this parameter:</maml:para>
            <maml:para>`http://Server01:8080/WSMAN`</maml:para>
            <maml:para>The URI must be fully qualified.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as "User01", "Domain01\User01", or "User@Domain.com". Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, you will be prompted for a password.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Path">
          <maml:name>FilePath</maml:name>
          <maml:description>
            <maml:para>Specifies the path of a file that is used to create a management resource. You specify the management resource using the ResourceURI parameter and the SelectorSet parameter . For example, the following command uses the File parameter:</maml:para>
            <maml:para>`Invoke-WSManAction -Action stopservice -ResourceUri wmi/cimv2/Win32_Service -SelectorSet @{Name="spooler"} -File c:\input.xml -Authentication Default`</maml:para>
            <maml:para>This command calls the StopService method on the Spooler service using input from a file. The file, `Input.xml`, contains the following content:</maml:para>
            <maml:para>`&lt;p:StopService_INPUT xmlns:p="http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_Service" /&gt;`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="os">
          <maml:name>OptionSet</maml:name>
          <maml:description>
            <maml:para>Passes a set of switches to a service to modify or refine the nature of the request. These are similar to switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
            <maml:para>The following example demonstrates the syntax that passes the values 1, 2, and 3 for the a, b, and c parameters:</maml:para>
            <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="so">
          <maml:name>SessionOption</maml:name>
          <maml:description>
            <maml:para>Defines a set of extended options for the WS-Management session. Enter a SessionOption object that you create using the `New-WSManSessionOption` cmdlet. For more information about the options that are available, see `New-WSManSessionOption`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ValueSet</maml:name>
          <maml:description>
            <maml:para>Specifies a hash table that helps modify a management resource. You specify the management resource using the ResourceURI parameter and the SelectorSet parameter. The value of the ValueSet parameter must be a hash table.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ApplicationName</maml:name>
        <maml:description>
          <maml:para>Specifies the application name in the connection. The default value of the ApplicationName parameter is WSMAN . The complete identifier for the remote endpoint is in the following format:</maml:para>
          <maml:para>`&lt;transport&gt;://&lt;server&gt;:&lt;port&gt;/&lt;ApplicationName&gt;`</maml:para>
          <maml:para>For example:</maml:para>
          <maml:para>`http://server01:8080/WSMAN`</maml:para>
          <maml:para>Internet Information Services (IIS), which hosts the session, forwards requests with this endpoint to the specified application. This default setting of WSMAN is appropriate for most uses. This parameter is designed to be used when numerous computers establish remote connections to one computer that is running Windows PowerShell. In this case, IIS hosts Web Services for Management (WS-Management) for efficiency.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Wsman</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
        <maml:name>Authentication</maml:name>
        <maml:description>
          <maml:para>Specifies the authentication mechanism to be used at the server. Possible values are:</maml:para>
          <maml:para>- Basic: Basic is a scheme in which the username and password are sent in clear text to the server   or proxy. - Default: Use the authentication method implemented by the WS-Management protocol. This is the   default. - Digest: Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - Kerberos: The client computer and the server mutually authenticate using Kerberos certificates.</maml:para>
          <maml:para>- Negotiate: Negotiate is a challenge-response scheme that negotiates with the server or proxy to</maml:para>
          <maml:para>  determine the scheme to use for authentication. For example, this parameter value allows   negotiation to determine whether the Kerberos protocol or NTLM is used. - CredSSP: Use Credential Security Support Provider (CredSSP) authentication, which allows the user   to delegate credentials. This option is designed for commands that run on one remote computer but   collect data from or run additional commands on other remote computers.</maml:para>
          <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user's credentials from the local computer to a remote computer. This &gt; practice increases the security risk of the remote operation. If the remote computer is &gt; compromised, when credentials are passed to it, the credentials can be used to control the network &gt; session.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CertificateThumbprint</maml:name>
        <maml:description>
          <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
          <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
          <maml:para>To get a certificate thumbprint, use the `Get-Item` or `Get-ChildItem` command in the PowerShell Cert: drive.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cn">
        <maml:name>ComputerName</maml:name>
        <maml:description>
          <maml:para>Specifies the computer against which you want to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, use localhost, or use a dot (`.`) to specify the local computer. The local computer is the default. When the remote computer is in a different domain from the user, you must use a fully qualified domain name must be used. You can pipe a value for this parameter to the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Localhost</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="CURI, CU">
        <maml:name>ConnectionURI</maml:name>
        <maml:description>
          <maml:para>Specifies the connection endpoint. The format of this string is:</maml:para>
          <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
          <maml:para>The following string is a properly formatted value for this parameter:</maml:para>
          <maml:para>`http://Server01:8080/WSMAN`</maml:para>
          <maml:para>The URI must be fully qualified.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
        <dev:type>
          <maml:name>System.Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as "User01", "Domain01\User01", or "User@Domain.com". Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, you will be prompted for a password.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="Path">
        <maml:name>FilePath</maml:name>
        <maml:description>
          <maml:para>Specifies the path of a file that is used to create a management resource. You specify the management resource using the ResourceURI parameter and the SelectorSet parameter . For example, the following command uses the File parameter:</maml:para>
          <maml:para>`Invoke-WSManAction -Action stopservice -ResourceUri wmi/cimv2/Win32_Service -SelectorSet @{Name="spooler"} -File c:\input.xml -Authentication Default`</maml:para>
          <maml:para>This command calls the StopService method on the Spooler service using input from a file. The file, `Input.xml`, contains the following content:</maml:para>
          <maml:para>`&lt;p:StopService_INPUT xmlns:p="http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_Service" /&gt;`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="os">
        <maml:name>OptionSet</maml:name>
        <maml:description>
          <maml:para>Passes a set of switches to a service to modify or refine the nature of the request. These are similar to switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
          <maml:para>The following example demonstrates the syntax that passes the values 1, 2, and 3 for the a, b, and c parameters:</maml:para>
          <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Port</maml:name>
        <maml:description>
          <maml:para>Specifies the port to use when the client connects to the WinRM service. When the transport is HTTP, the default port is 80. When the transport is HTTPS, the default port is 443.</maml:para>
          <maml:para>When you use HTTPS as the transport, the value of the ComputerName parameter must match the server's certificate common name (CN). However, if the SkipCNCheck parameter is specified as part of the SessionOption parameter, the certificate common name of the server does not have to match the host name of the server. The SkipCNCheck parameter should be used only for trusted computers.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="ruri">
        <maml:name>ResourceURI</maml:name>
        <maml:description>
          <maml:para>Contains the Uniform Resource Identifier (URI) of the resource class or instance. The URI is used to identify a specific type of resource, such as disks or processes, on a computer.</maml:para>
          <maml:para>A URI consists of a prefix and a path to a resource. For example:</maml:para>
          <maml:para>`http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_LogicalDisk`</maml:para>
          <maml:para>`http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_NumericSensor`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
        <dev:type>
          <maml:name>System.Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="none">
        <maml:name>SelectorSet</maml:name>
        <maml:description>
          <maml:para>Specifies a set of value pairs that are used to select particular management resource instances. The SelectorSet parameter is used when more than one instance of the resource exists. The value of the SelectorSet parameter must be a hash table.</maml:para>
          <maml:para>The following example shows how to enter a value for this parameter:</maml:para>
          <maml:para>`-SelectorSet @{Name="WinRM";ID="yyy"}`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="so">
        <maml:name>SessionOption</maml:name>
        <maml:description>
          <maml:para>Defines a set of extended options for the WS-Management session. Enter a SessionOption object that you create using the `New-WSManSessionOption` cmdlet. For more information about the options that are available, see `New-WSManSessionOption`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UseSSL</maml:name>
        <maml:description>
          <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol should be used to establish a connection to the remote computer. By default, SSL is not used.</maml:para>
          <maml:para>WS-Management encrypts all the Windows PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If SSL is not available on the port that is used for the connection and you specify this parameter, the command fails.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ValueSet</maml:name>
        <maml:description>
          <maml:para>Specifies a hash table that helps modify a management resource. You specify the management resource using the ResourceURI parameter and the SelectorSet parameter. The value of the ValueSet parameter must be a hash table.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not accept any input.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not generate any output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>The `Set-WmiInstance` cmdlet, a Windows Management Instrumentation (WMI) cmdlet, is similar. `Set-WmiInstance` uses the DCOM connection/transport layer to create or update WMI instances.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>-------------- Example 1: Create a HTTPS listener --------------</maml:title>
        <dev:code>New-WSManInstance winrm/config/Listener -SelectorSet @{Transport='HTTPS'; Address='*'} -ValueSet @{Hostname="HOST";CertificateThumbprint="XXXXXXXXXX"}</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/microsoft.wsman.management/new-wsmaninstance?view=powershell-7.2&amp;WT.mc_id=ps-gethelp</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disconnect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Invoke-WSManAction</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManSessionOption</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManQuickConfig</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>New-WSManSessionOption</command:name>
      <command:verb>New</command:verb>
      <command:noun>WSManSessionOption</command:noun>
      <maml:description>
        <maml:para>Creates session option hash table to use as input parameters for WS-Management cmdlets.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>&gt; This cmdlet is only available on the Windows platform. The `New-WSManSessionOption` cmdlet creates a WSMan Session option hash table which can be passed to WSMan cmdlets:</maml:para>
      <maml:para>- `Get-WSManInstance`</maml:para>
      <maml:para>- `Set-WSManInstance`</maml:para>
      <maml:para>- `Invoke-WSManAction`</maml:para>
      <maml:para>- `Connect-WSMan`</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>New-WSManSessionOption</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>NoEncryption</maml:name>
          <maml:description>
            <maml:para>Indicates that the connection does not use encryption for remote operations over HTTP.</maml:para>
            <maml:para>By default, unencrypted traffic is not enabled. It must be enabled in the local configuration.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="OperationTimeoutMSec">
          <maml:name>OperationTimeout</maml:name>
          <maml:description>
            <maml:para>Specifies the time-out, in milliseconds, for the WS-Management operation.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ProxyAccessType</maml:name>
          <maml:description>
            <maml:para>Specifies the mechanism by which the proxy server is located. The acceptable values for this parameter are:</maml:para>
            <maml:para>- `ProxyIEConfig` - Use the Internet Explorer proxy configuration for the current user.</maml:para>
            <maml:para>- `ProxyWinHttpConfig` - The WSMan client uses the proxy settings configured for WinHTTP, using the</maml:para>
            <maml:para>  ProxyCfg.exe utility. - `ProxyAutoDetect` - Force auto-detection of a proxy server.</maml:para>
            <maml:para>- `ProxyNoProxyServer` - Do not use a proxy server. Resolve all host names locally.</maml:para>
            <maml:para></maml:para>
            <maml:para>The default value is ProxyIEConfig.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">ProxyIEConfig</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ProxyWinHttpConfig</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ProxyAutoDetect</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ProxyNoProxyServer</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.ProxyAccessType</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.ProxyAccessType</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ProxyAuthentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication method to use at the proxy. The acceptable values for this parameter are:</maml:para>
            <maml:para>- `Basic` - Basic is a scheme in which the user name and password are sent in clear-text to the   server or proxy. - `Digest` - Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Negotiate` - Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine which scheme to use for authentication. Examples are the Kerberos protocol and NTLM.</maml:para>
            <maml:para>The default value is Negotiate.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">Negotiate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Basic</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Digest</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.ProxyAuthentication</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.ProxyAuthentication</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ProxyCredential</maml:name>
          <maml:description>
            <maml:para>Specifies a user account that has permission to gain access through an intermediate Web proxy.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SkipCACheck</maml:name>
          <maml:description>
            <maml:para>Specifies that, when it connects over HTTPS, the client does not validate that the server certificate is signed by a trusted certification authority (CA). Use this option only when the remote computer is trusted by another method, for example, if the remote computer is part of a network that is physically secure and isolated or the remote computer is listed as a trusted host in the WS-Management configuration.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SkipCNCheck</maml:name>
          <maml:description>
            <maml:para>Specifies that the certificate common name (CN) of the server does not have to match the host name of the server. This is used only in remote operations using HTTPS. This option should only be used for trusted computers.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SkipRevocationCheck</maml:name>
          <maml:description>
            <maml:para>Indicates that the connection does not validate the revocation status on the server certificate.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SPNPort</maml:name>
          <maml:description>
            <maml:para>Specifies a port number to append to the connection Service Principal Name (SPN) of the remote server. An SPN is used when the authentication mechanism is Kerberos or Negotiate.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UseUTF16</maml:name>
          <maml:description>
            <maml:para>Indicates that the connection encodes the request in UTF16 format instead of UTF8 format. The default is UTF8 encoding.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>NoEncryption</maml:name>
        <maml:description>
          <maml:para>Indicates that the connection does not use encryption for remote operations over HTTP.</maml:para>
          <maml:para>By default, unencrypted traffic is not enabled. It must be enabled in the local configuration.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="OperationTimeoutMSec">
        <maml:name>OperationTimeout</maml:name>
        <maml:description>
          <maml:para>Specifies the time-out, in milliseconds, for the WS-Management operation.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ProxyAccessType</maml:name>
        <maml:description>
          <maml:para>Specifies the mechanism by which the proxy server is located. The acceptable values for this parameter are:</maml:para>
          <maml:para>- `ProxyIEConfig` - Use the Internet Explorer proxy configuration for the current user.</maml:para>
          <maml:para>- `ProxyWinHttpConfig` - The WSMan client uses the proxy settings configured for WinHTTP, using the</maml:para>
          <maml:para>  ProxyCfg.exe utility. - `ProxyAutoDetect` - Force auto-detection of a proxy server.</maml:para>
          <maml:para>- `ProxyNoProxyServer` - Do not use a proxy server. Resolve all host names locally.</maml:para>
          <maml:para></maml:para>
          <maml:para>The default value is ProxyIEConfig.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.ProxyAccessType</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.WSMan.Management.ProxyAccessType</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ProxyAuthentication</maml:name>
        <maml:description>
          <maml:para>Specifies the authentication method to use at the proxy. The acceptable values for this parameter are:</maml:para>
          <maml:para>- `Basic` - Basic is a scheme in which the user name and password are sent in clear-text to the   server or proxy. - `Digest` - Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Negotiate` - Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine which scheme to use for authentication. Examples are the Kerberos protocol and NTLM.</maml:para>
          <maml:para>The default value is Negotiate.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.ProxyAuthentication</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.WSMan.Management.ProxyAuthentication</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ProxyCredential</maml:name>
        <maml:description>
          <maml:para>Specifies a user account that has permission to gain access through an intermediate Web proxy.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SkipCACheck</maml:name>
        <maml:description>
          <maml:para>Specifies that, when it connects over HTTPS, the client does not validate that the server certificate is signed by a trusted certification authority (CA). Use this option only when the remote computer is trusted by another method, for example, if the remote computer is part of a network that is physically secure and isolated or the remote computer is listed as a trusted host in the WS-Management configuration.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SkipCNCheck</maml:name>
        <maml:description>
          <maml:para>Specifies that the certificate common name (CN) of the server does not have to match the host name of the server. This is used only in remote operations using HTTPS. This option should only be used for trusted computers.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SkipRevocationCheck</maml:name>
        <maml:description>
          <maml:para>Indicates that the connection does not validate the revocation status on the server certificate.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SPNPort</maml:name>
        <maml:description>
          <maml:para>Specifies a port number to append to the connection Service Principal Name (SPN) of the remote server. An SPN is used when the authentication mechanism is Kerberos or Negotiate.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UseUTF16</maml:name>
        <maml:description>
          <maml:para>Indicates that the connection encodes the request in UTF16 format instead of UTF8 format. The default is UTF8 encoding.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes />
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>SessionOption</maml:name>
        </dev:type>
        <maml:description>
          <maml:para></maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>- Example 1: Create a connection that uses connection options -</maml:title>
        <dev:code>PS C:\&gt; $a = New-WSManSessionOption -OperationTimeout 30000
PS C:\&gt; Connect-WSMan -ComputerName "server01" -SessionOption $a
PS C:\&gt; cd wsman:
PS WSMan:\&gt; dir

WSManConfig: Microsoft.WSMan.Management\WSMan::WSMan
ComputerName                                  Type
------------                                  ----
localhost                                     Container
server01                                      Container</dev:code>
        <dev:remarks>
          <maml:para>This example creates a connection to the remote server01 computer by using the connection options that are defined by `New-WSManSessionOption`.</maml:para>
          <maml:para>The first command uses `New-WSManSessionOption` to store a set of connection setting options in the `$a` variable. In this case, the session options set a connection time out of 30 seconds (30,000 milliseconds).</maml:para>
          <maml:para>The second command uses the SessionOption parameter to pass the credentials that are stored in the `$a` variable to `Connect-WSMan`. Then, `Connect-WSMan` connects to the remote server01 computer by using the specified session options.</maml:para>
          <maml:para>`Connect-WSMan` is generally used in the context of the WSMan provider to connect to a remote computer, in this case the server01 computer. However, you can use the cmdlet to establish connections to remote computers before you change to the WSMan provider. Those connections appear in the ComputerName list.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/microsoft.wsman.management/new-wsmansessionoption?view=powershell-7.2&amp;WT.mc_id=ps-gethelp</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disconnect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Invoke-WSManAction</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManQuickConfig</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Remove-WSManInstance</command:name>
      <command:verb>Remove</command:verb>
      <command:noun>WSManInstance</command:noun>
      <maml:description>
        <maml:para>Deletes a management resource instance.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>&gt; This cmdlet is only available on the Windows platform. The `Remove-WSManInstance` cmdlet deletes an instance of a management resource that is specified in the ResourceURI and SelectorSet parameters.</maml:para>
      <maml:para>This cmdlet uses the WinRM connection/transport layer to delete the management resource instance.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Remove-WSManInstance</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="ruri">
          <maml:name>ResourceURI</maml:name>
          <maml:description>
            <maml:para>Specifies the URI of the resource class or instance. The URI is used to identify a specific type of resource, such as disks or processes, on a computer.</maml:para>
            <maml:para>A URI consists of a prefix and a path of a resource. For example:</maml:para>
            <maml:para>`http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_LogicalDisk`</maml:para>
            <maml:para>`http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_NumericSensor`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
          <maml:name>SelectorSet</maml:name>
          <maml:description>
            <maml:para>Specifies a set of value pairs that are used to select particular management resource instances. The SelectorSet parameter is used when more than one instance of the resource exists. The value of SelectorSet must be a hash table.</maml:para>
            <maml:para>The following example shows how to enter a value for this parameter:</maml:para>
            <maml:para>`-SelectorSet @{Name="WinRM";ID="yyy"}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ApplicationName</maml:name>
          <maml:description>
            <maml:para>Specifies the application name in the connection. The default value of the ApplicationName parameter is WSMAN. The complete identifier for the remote endpoint is in the following format:</maml:para>
            <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
            <maml:para>For example: `http://server01:8080/WSMAN`</maml:para>
            <maml:para>Internet Information Services (IIS), which hosts the session, forwards requests with this endpoint to the specified application. This default setting of WSMAN is appropriate for most uses. This parameter is designed to be used if many computers establish remote connections to one computer that is running Windows PowerShell. In this case, IIS hosts Web Services for Management (WS-Management) for efficiency.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
          <maml:name>Authentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to be used at the server. The acceptable values for this parameter are:</maml:para>
            <maml:para>- `Basic` - Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` - Use the authentication method implemented by the WS-Management protocol. This is the   default. - `Digest` - Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos` - The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate` - Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows for   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP` - Use Credential Security Support Provider (CredSSP) authentication, which lets the user   delegate credentials. This option is designed for commands that run on one remote computer but   collect data from or run additional commands on other remote computers.</maml:para>
            <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user credentials from the local computer to a remote computer. This practice &gt; increases the security risk of the remote operation. If the remote computer is compromised, when &gt; credentials are passed to it, the credentials can be used to control the network session.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Digest</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Negotiate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Basic</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Kerberos</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ClientCertificate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Credssp</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateThumbprint</maml:name>
          <maml:description>
            <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
            <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
            <maml:para>To get a certificate thumbprint, use the Get-Item or Get-ChildItem command in the Windows PowerShell Cert: drive.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cn">
          <maml:name>ComputerName</maml:name>
          <maml:description>
            <maml:para>Specifies the computer against which to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, use localhost, or use a dot (`.`) to specify the local computer. The local computer is the default. When the remote computer is in a different domain from the user, you must use a fully qualified domain name must be used. You can pipe a value for this parameter to the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as `User01`, `Domain01\User01`, or `User@Domain.com`. Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, this cmdlet prompts you for a password.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="os">
          <maml:name>OptionSet</maml:name>
          <maml:description>
            <maml:para>Specifies a set of switches to a service to modify or refine the nature of the request. These resemble switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
            <maml:para>The following example demonstrates the syntax that passes the values 1, 2, and 3 for the a, b, and c parameters:</maml:para>
            <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Port</maml:name>
          <maml:description>
            <maml:para>Specifies the port to use when the client connects to the WinRM service. When the transport is HTTP, the default port is 80. When the transport is HTTPS, the default port is 443.</maml:para>
            <maml:para>When you use HTTPS as the transport, the value of the ComputerName parameter must match the server's certificate common name (CN). However, if the SkipCNCheck parameter is specified as part of the SessionOption parameter, the certificate common name of the server does not have to match the host name of the server. The SkipCNCheck parameter should be used only for trusted computers.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="so">
          <maml:name>SessionOption</maml:name>
          <maml:description>
            <maml:para>Specifies extended options for the WS-Management session. Enter a SessionOption object that you create by using the New-WSManSessionOption cmdlet. For more information about the options that are available, type `Get-Help New-WSManSessionOption`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ssl">
          <maml:name>UseSSL</maml:name>
          <maml:description>
            <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol is used to establish a connection to the remote computer. By default, SSL is not used.</maml:para>
            <maml:para>WS-Management encrypts all the Windows PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If SSL is not available on the port that is used for the connection, and you specify this parameter, the command fails.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Remove-WSManInstance</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="ruri">
          <maml:name>ResourceURI</maml:name>
          <maml:description>
            <maml:para>Specifies the URI of the resource class or instance. The URI is used to identify a specific type of resource, such as disks or processes, on a computer.</maml:para>
            <maml:para>A URI consists of a prefix and a path of a resource. For example:</maml:para>
            <maml:para>`http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_LogicalDisk`</maml:para>
            <maml:para>`http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_NumericSensor`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
          <maml:name>SelectorSet</maml:name>
          <maml:description>
            <maml:para>Specifies a set of value pairs that are used to select particular management resource instances. The SelectorSet parameter is used when more than one instance of the resource exists. The value of SelectorSet must be a hash table.</maml:para>
            <maml:para>The following example shows how to enter a value for this parameter:</maml:para>
            <maml:para>`-SelectorSet @{Name="WinRM";ID="yyy"}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
          <maml:name>Authentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to be used at the server. The acceptable values for this parameter are:</maml:para>
            <maml:para>- `Basic` - Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` - Use the authentication method implemented by the WS-Management protocol. This is the   default. - `Digest` - Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos` - The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate` - Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows for   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP` - Use Credential Security Support Provider (CredSSP) authentication, which lets the user   delegate credentials. This option is designed for commands that run on one remote computer but   collect data from or run additional commands on other remote computers.</maml:para>
            <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user credentials from the local computer to a remote computer. This practice &gt; increases the security risk of the remote operation. If the remote computer is compromised, when &gt; credentials are passed to it, the credentials can be used to control the network session.</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Digest</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Negotiate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Basic</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Kerberos</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ClientCertificate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Credssp</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateThumbprint</maml:name>
          <maml:description>
            <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
            <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
            <maml:para>To get a certificate thumbprint, use the Get-Item or Get-ChildItem command in the Windows PowerShell Cert: drive.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConnectionURI</maml:name>
          <maml:description>
            <maml:para>Specifies the connection endpoint. The format of this string is as follows:</maml:para>
            <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
            <maml:para>The following string is a correctly formatted value for this parameter:</maml:para>
            <maml:para>`http://Server01:8080/WSMAN`</maml:para>
            <maml:para>The URI must be fully qualified.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as `User01`, `Domain01\User01`, or `User@Domain.com`. Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, this cmdlet prompts you for a password.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="os">
          <maml:name>OptionSet</maml:name>
          <maml:description>
            <maml:para>Specifies a set of switches to a service to modify or refine the nature of the request. These resemble switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
            <maml:para>The following example demonstrates the syntax that passes the values 1, 2, and 3 for the a, b, and c parameters:</maml:para>
            <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="so">
          <maml:name>SessionOption</maml:name>
          <maml:description>
            <maml:para>Specifies extended options for the WS-Management session. Enter a SessionOption object that you create by using the New-WSManSessionOption cmdlet. For more information about the options that are available, type `Get-Help New-WSManSessionOption`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ApplicationName</maml:name>
        <maml:description>
          <maml:para>Specifies the application name in the connection. The default value of the ApplicationName parameter is WSMAN. The complete identifier for the remote endpoint is in the following format:</maml:para>
          <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
          <maml:para>For example: `http://server01:8080/WSMAN`</maml:para>
          <maml:para>Internet Information Services (IIS), which hosts the session, forwards requests with this endpoint to the specified application. This default setting of WSMAN is appropriate for most uses. This parameter is designed to be used if many computers establish remote connections to one computer that is running Windows PowerShell. In this case, IIS hosts Web Services for Management (WS-Management) for efficiency.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
        <maml:name>Authentication</maml:name>
        <maml:description>
          <maml:para>Specifies the authentication mechanism to be used at the server. The acceptable values for this parameter are:</maml:para>
          <maml:para>- `Basic` - Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` - Use the authentication method implemented by the WS-Management protocol. This is the   default. - `Digest` - Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos` - The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate` - Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows for   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP` - Use Credential Security Support Provider (CredSSP) authentication, which lets the user   delegate credentials. This option is designed for commands that run on one remote computer but   collect data from or run additional commands on other remote computers.</maml:para>
          <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user credentials from the local computer to a remote computer. This practice &gt; increases the security risk of the remote operation. If the remote computer is compromised, when &gt; credentials are passed to it, the credentials can be used to control the network session.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CertificateThumbprint</maml:name>
        <maml:description>
          <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
          <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
          <maml:para>To get a certificate thumbprint, use the Get-Item or Get-ChildItem command in the Windows PowerShell Cert: drive.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cn">
        <maml:name>ComputerName</maml:name>
        <maml:description>
          <maml:para>Specifies the computer against which to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, use localhost, or use a dot (`.`) to specify the local computer. The local computer is the default. When the remote computer is in a different domain from the user, you must use a fully qualified domain name must be used. You can pipe a value for this parameter to the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConnectionURI</maml:name>
        <maml:description>
          <maml:para>Specifies the connection endpoint. The format of this string is as follows:</maml:para>
          <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
          <maml:para>The following string is a correctly formatted value for this parameter:</maml:para>
          <maml:para>`http://Server01:8080/WSMAN`</maml:para>
          <maml:para>The URI must be fully qualified.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
        <dev:type>
          <maml:name>System.Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as `User01`, `Domain01\User01`, or `User@Domain.com`. Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, this cmdlet prompts you for a password.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="os">
        <maml:name>OptionSet</maml:name>
        <maml:description>
          <maml:para>Specifies a set of switches to a service to modify or refine the nature of the request. These resemble switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
          <maml:para>The following example demonstrates the syntax that passes the values 1, 2, and 3 for the a, b, and c parameters:</maml:para>
          <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Port</maml:name>
        <maml:description>
          <maml:para>Specifies the port to use when the client connects to the WinRM service. When the transport is HTTP, the default port is 80. When the transport is HTTPS, the default port is 443.</maml:para>
          <maml:para>When you use HTTPS as the transport, the value of the ComputerName parameter must match the server's certificate common name (CN). However, if the SkipCNCheck parameter is specified as part of the SessionOption parameter, the certificate common name of the server does not have to match the host name of the server. The SkipCNCheck parameter should be used only for trusted computers.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="ruri">
        <maml:name>ResourceURI</maml:name>
        <maml:description>
          <maml:para>Specifies the URI of the resource class or instance. The URI is used to identify a specific type of resource, such as disks or processes, on a computer.</maml:para>
          <maml:para>A URI consists of a prefix and a path of a resource. For example:</maml:para>
          <maml:para>`http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_LogicalDisk`</maml:para>
          <maml:para>`http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_NumericSensor`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
        <dev:type>
          <maml:name>System.Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
        <maml:name>SelectorSet</maml:name>
        <maml:description>
          <maml:para>Specifies a set of value pairs that are used to select particular management resource instances. The SelectorSet parameter is used when more than one instance of the resource exists. The value of SelectorSet must be a hash table.</maml:para>
          <maml:para>The following example shows how to enter a value for this parameter:</maml:para>
          <maml:para>`-SelectorSet @{Name="WinRM";ID="yyy"}`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="so">
        <maml:name>SessionOption</maml:name>
        <maml:description>
          <maml:para>Specifies extended options for the WS-Management session. Enter a SessionOption object that you create by using the New-WSManSessionOption cmdlet. For more information about the options that are available, type `Get-Help New-WSManSessionOption`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ssl">
        <maml:name>UseSSL</maml:name>
        <maml:description>
          <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol is used to establish a connection to the remote computer. By default, SSL is not used.</maml:para>
          <maml:para>WS-Management encrypts all the Windows PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If SSL is not available on the port that is used for the connection, and you specify this parameter, the command fails.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not accept any input.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not generate any output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>The cmdlets in the CimCmdlets module are similar. They use the DCOM connection/transport layer to create or update WMI instances.</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>----------------- Example 1: Delete a listener -----------------</maml:title>
        <dev:code>Remove-WSManInstance -ResourceUri winrm/config/Listener -SelectorSet Address=test.fabrikam.com;Transport=http</dev:code>
        <dev:remarks>
          <maml:para>This command deletes the WS-Management HTTP listener on a computer.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/microsoft.wsman.management/remove-wsmaninstance?view=powershell-7.2&amp;WT.mc_id=ps-gethelp</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disconnect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Invoke-WSManAction</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManSessionOption</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManQuickConfig</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-WSManInstance</command:name>
      <command:verb>Set</command:verb>
      <command:noun>WSManInstance</command:noun>
      <maml:description>
        <maml:para>Modifies the management information that is related to a resource.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>The `Set-WSManInstance` cmdlet modifies the management information that is related to a resource.</maml:para>
      <maml:para>This cmdlet uses the WinRM connection/transport layer to modify the information.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-WSManInstance</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="ruri">
          <maml:name>ResourceURI</maml:name>
          <maml:description>
            <maml:para>Contains the Uniform Resource Identifier (URI) of the resource class or instance. The URI is used to identify a specific type of resource, such as disks or processes, on a computer.</maml:para>
            <maml:para>A URI consists of a prefix and a path to a resource. For example:</maml:para>
            <maml:para>`http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_LogicalDisk`</maml:para>
            <maml:para>`http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_NumericSensor`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
          <maml:name>SelectorSet</maml:name>
          <maml:description>
            <maml:para>Specifies a set of value pairs that are used to select particular management resource instances. The SelectorSet parameter is used when more than one instance of the resource exists. The value of the SelectorSet parameter must be a hash table. The following example shows how to enter a value for this parameter:</maml:para>
            <maml:para>`-SelectorSet @{Name="WinRM";ID="yyy"}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ApplicationName</maml:name>
          <maml:description>
            <maml:para>Specifies the application name in the connection. The default value of the ApplicationName parameter is "WSMAN". The complete identifier for the remote endpoint is in the following format:</maml:para>
            <maml:para>`&lt;transport&gt;://&lt;server&gt;:&lt;port&gt;/&lt;ApplicationName&gt;`</maml:para>
            <maml:para>For example:</maml:para>
            <maml:para>`http://server01:8080/WSMAN`</maml:para>
            <maml:para>Internet Information Services (IIS), which hosts the session, forwards requests with this endpoint to the specified application. This default setting of `WSMAN` is appropriate for most uses. This parameter is designed to be used when numerous computers establish remote connections to one computer that is running Windows PowerShell. In this case, IIS hosts Web Services for Management (WS-Management) for efficiency.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Wsman</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
          <maml:name>Authentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to be used at the server. Possible values are:</maml:para>
            <maml:para>- `Basic`: Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` : Use the authentication method implemented by the WS-Management protocol. This is the   default. - `Digest`: Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos`: The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate`: Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP`: Use Credential Security Support Provider (CredSSP) authentication, which allows the   user to delegate credentials. This option is designed for commands that run on one remote computer   but collect data from or run additional commands on other remote computers.</maml:para>
            <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user's credentials from the local computer to a remote computer. This &gt; practice increases the security risk of the remote operation. If the remote computer is &gt; compromised, when credentials are passed to it, the credentials can be used to control the network &gt; session.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateThumbprint</maml:name>
          <maml:description>
            <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
            <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
            <maml:para>To get a certificate thumbprint, use the `Get-Item` or `Get-ChildItem` command in the PowerShell `Cert:` drive.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cn">
          <maml:name>ComputerName</maml:name>
          <maml:description>
            <maml:para>Specifies the computer against which you want to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, `localhost`, or a dot (`.`) to specify the local computer. The local computer is the default.</maml:para>
            <maml:para>When the remote computer is in a different domain from the user, you must use a fully qualified domain name. You can pipe a value for this parameter to the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>Localhost</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as `User01`, `Domain01\User01`, or `User@Domain.com`. Alternatively, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, you will be prompted for a password.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Dialect</maml:name>
          <maml:description>
            <maml:para>Specifies the dialect to use in the filter predicate. This can be any dialect that is supported by the remote service. The following aliases can be used for the dialect URI:</maml:para>
            <maml:para>- `WQL`: `http://schemas.microsoft.com/wbem/wsman/1/WQL`</maml:para>
            <maml:para>- `Selector`: `http://schemas.microsoft.com/wbem/wsman/1/wsman/SelectorFilter`</maml:para>
            <maml:para>- `Association`: `http://schemas.dmtf.org/wbem/wsman/1/cimbinding/associationFilter`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>http://schemas.microsoft.com/wbem/wsman/1/WQL</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="Path">
          <maml:name>FilePath</maml:name>
          <maml:description>
            <maml:para>Specifies the path of a file that is used to update a management resource. You specify the management resource by using the ResourceURI parameter and the SelectorSet parameter. For example, the following command uses the FilePath parameter:</maml:para>
            <maml:para>`Invoke-WSManAction -Action StopService -ResourceUri wmicimv2/Win32_Service -SelectorSet @{Name="spooler"} -FilePath:c:\input.xml -authentication default`</maml:para>
            <maml:para>This command calls the StopService method on the Spooler service by using input from a file. The file, `Input.xml`, contains the following content:</maml:para>
            <maml:para>`&lt;p:StopService_INPUT xmlns:p="http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_Service" /&gt;`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Fragment</maml:name>
          <maml:description>
            <maml:para>Specifies a section inside the instance that is to be updated or retrieved for the specified operation. For example, to get the status of a spooler service, specify `-Fragment Status`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="os">
          <maml:name>OptionSet</maml:name>
          <maml:description>
            <maml:para>Passes a set of switches to a service to modify or refine the nature of the request. These are similar to switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
            <maml:para>The following example demonstrates the syntax that passes the values `1`, `2`, and `3` for the `a`, `b`, and `c` parameters:</maml:para>
            <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Port</maml:name>
          <maml:description>
            <maml:para>Specifies the port to use when the client connects to the WinRM service. When the transport is HTTP, the default port is 80. When the transport is HTTPS, the default port is 443.</maml:para>
            <maml:para>When you use HTTPS as the transport, the value of the ComputerName parameter must match the server's certificate common name (CN). However, if the SkipCNCheck parameter is specified as part of the SessionOption parameter, then the certificate common name of the server does not have to match the host name of the server. The SkipCNCheck parameter should be used only for trusted machines.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="so">
          <maml:name>SessionOption</maml:name>
          <maml:description>
            <maml:para>Defines a set of extended options for the WS-Management session. Enter a SessionOption object that you create with the `New-WSManSessionOption` cmdlet. For more information about the options that are available, see New-WSManSessionOption (New-WSManSessionOption.md).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ssl">
          <maml:name>UseSSL</maml:name>
          <maml:description>
            <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol should be used to establish a connection to the remote computer. By default, SSL is not used.</maml:para>
            <maml:para>WS-Management encrypts all the Windows PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If SSL is not available on the port that is used for the connection and you specify this parameter, the command fails.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none">
          <maml:name>ValueSet</maml:name>
          <maml:description>
            <maml:para>Specifies a hash table that helps modify a management resource. You specify the management resource by using the ResourceURI parameter and the SelectorSet parameter. The value of the ValueSet parameter must be a hash table.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Set-WSManInstance</maml:name>
        <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="ruri">
          <maml:name>ResourceURI</maml:name>
          <maml:description>
            <maml:para>Contains the Uniform Resource Identifier (URI) of the resource class or instance. The URI is used to identify a specific type of resource, such as disks or processes, on a computer.</maml:para>
            <maml:para>A URI consists of a prefix and a path to a resource. For example:</maml:para>
            <maml:para>`http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_LogicalDisk`</maml:para>
            <maml:para>`http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_NumericSensor`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
          <maml:name>SelectorSet</maml:name>
          <maml:description>
            <maml:para>Specifies a set of value pairs that are used to select particular management resource instances. The SelectorSet parameter is used when more than one instance of the resource exists. The value of the SelectorSet parameter must be a hash table. The following example shows how to enter a value for this parameter:</maml:para>
            <maml:para>`-SelectorSet @{Name="WinRM";ID="yyy"}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
          <maml:name>Authentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to be used at the server. Possible values are:</maml:para>
            <maml:para>- `Basic`: Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` : Use the authentication method implemented by the WS-Management protocol. This is the   default. - `Digest`: Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos`: The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate`: Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP`: Use Credential Security Support Provider (CredSSP) authentication, which allows the   user to delegate credentials. This option is designed for commands that run on one remote computer   but collect data from or run additional commands on other remote computers.</maml:para>
            <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user's credentials from the local computer to a remote computer. This &gt; practice increases the security risk of the remote operation. If the remote computer is &gt; compromised, when credentials are passed to it, the credentials can be used to control the network &gt; session.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateThumbprint</maml:name>
          <maml:description>
            <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
            <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
            <maml:para>To get a certificate thumbprint, use the `Get-Item` or `Get-ChildItem` command in the PowerShell `Cert:` drive.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ConnectionURI</maml:name>
          <maml:description>
            <maml:para>Specifies the connection endpoint. The format of this string is:</maml:para>
            <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
            <maml:para>The following string is a properly formatted value for this parameter:</maml:para>
            <maml:para>`http://Server01:8080/WSMAN`</maml:para>
            <maml:para>The URI must be fully qualified .</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as `User01`, `Domain01\User01`, or `User@Domain.com`. Alternatively, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, you will be prompted for a password.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Dialect</maml:name>
          <maml:description>
            <maml:para>Specifies the dialect to use in the filter predicate. This can be any dialect that is supported by the remote service. The following aliases can be used for the dialect URI:</maml:para>
            <maml:para>- `WQL`: `http://schemas.microsoft.com/wbem/wsman/1/WQL`</maml:para>
            <maml:para>- `Selector`: `http://schemas.microsoft.com/wbem/wsman/1/wsman/SelectorFilter`</maml:para>
            <maml:para>- `Association`: `http://schemas.dmtf.org/wbem/wsman/1/cimbinding/associationFilter`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
          <dev:type>
            <maml:name>System.Uri</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>http://schemas.microsoft.com/wbem/wsman/1/WQL</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="Path">
          <maml:name>FilePath</maml:name>
          <maml:description>
            <maml:para>Specifies the path of a file that is used to update a management resource. You specify the management resource by using the ResourceURI parameter and the SelectorSet parameter. For example, the following command uses the FilePath parameter:</maml:para>
            <maml:para>`Invoke-WSManAction -Action StopService -ResourceUri wmicimv2/Win32_Service -SelectorSet @{Name="spooler"} -FilePath:c:\input.xml -authentication default`</maml:para>
            <maml:para>This command calls the StopService method on the Spooler service by using input from a file. The file, `Input.xml`, contains the following content:</maml:para>
            <maml:para>`&lt;p:StopService_INPUT xmlns:p="http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_Service" /&gt;`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Fragment</maml:name>
          <maml:description>
            <maml:para>Specifies a section inside the instance that is to be updated or retrieved for the specified operation. For example, to get the status of a spooler service, specify `-Fragment Status`.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="os">
          <maml:name>OptionSet</maml:name>
          <maml:description>
            <maml:para>Passes a set of switches to a service to modify or refine the nature of the request. These are similar to switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
            <maml:para>The following example demonstrates the syntax that passes the values `1`, `2`, and `3` for the `a`, `b`, and `c` parameters:</maml:para>
            <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="so">
          <maml:name>SessionOption</maml:name>
          <maml:description>
            <maml:para>Defines a set of extended options for the WS-Management session. Enter a SessionOption object that you create with the `New-WSManSessionOption` cmdlet. For more information about the options that are available, see New-WSManSessionOption (New-WSManSessionOption.md).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none">
          <maml:name>ValueSet</maml:name>
          <maml:description>
            <maml:para>Specifies a hash table that helps modify a management resource. You specify the management resource by using the ResourceURI parameter and the SelectorSet parameter. The value of the ValueSet parameter must be a hash table.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
          <dev:type>
            <maml:name>System.Collections.Hashtable</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ApplicationName</maml:name>
        <maml:description>
          <maml:para>Specifies the application name in the connection. The default value of the ApplicationName parameter is "WSMAN". The complete identifier for the remote endpoint is in the following format:</maml:para>
          <maml:para>`&lt;transport&gt;://&lt;server&gt;:&lt;port&gt;/&lt;ApplicationName&gt;`</maml:para>
          <maml:para>For example:</maml:para>
          <maml:para>`http://server01:8080/WSMAN`</maml:para>
          <maml:para>Internet Information Services (IIS), which hosts the session, forwards requests with this endpoint to the specified application. This default setting of `WSMAN` is appropriate for most uses. This parameter is designed to be used when numerous computers establish remote connections to one computer that is running Windows PowerShell. In this case, IIS hosts Web Services for Management (WS-Management) for efficiency.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Wsman</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
        <maml:name>Authentication</maml:name>
        <maml:description>
          <maml:para>Specifies the authentication mechanism to be used at the server. Possible values are:</maml:para>
          <maml:para>- `Basic`: Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` : Use the authentication method implemented by the WS-Management protocol. This is the   default. - `Digest`: Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos`: The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate`: Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP`: Use Credential Security Support Provider (CredSSP) authentication, which allows the   user to delegate credentials. This option is designed for commands that run on one remote computer   but collect data from or run additional commands on other remote computers.</maml:para>
          <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user's credentials from the local computer to a remote computer. This &gt; practice increases the security risk of the remote operation. If the remote computer is &gt; compromised, when credentials are passed to it, the credentials can be used to control the network &gt; session.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CertificateThumbprint</maml:name>
        <maml:description>
          <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
          <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
          <maml:para>To get a certificate thumbprint, use the `Get-Item` or `Get-ChildItem` command in the PowerShell `Cert:` drive.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cn">
        <maml:name>ComputerName</maml:name>
        <maml:description>
          <maml:para>Specifies the computer against which you want to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, `localhost`, or a dot (`.`) to specify the local computer. The local computer is the default.</maml:para>
          <maml:para>When the remote computer is in a different domain from the user, you must use a fully qualified domain name. You can pipe a value for this parameter to the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>Localhost</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ConnectionURI</maml:name>
        <maml:description>
          <maml:para>Specifies the connection endpoint. The format of this string is:</maml:para>
          <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
          <maml:para>The following string is a properly formatted value for this parameter:</maml:para>
          <maml:para>`http://Server01:8080/WSMAN`</maml:para>
          <maml:para>The URI must be fully qualified .</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
        <dev:type>
          <maml:name>System.Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as `User01`, `Domain01\User01`, or `User@Domain.com`. Alternatively, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, you will be prompted for a password.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Dialect</maml:name>
        <maml:description>
          <maml:para>Specifies the dialect to use in the filter predicate. This can be any dialect that is supported by the remote service. The following aliases can be used for the dialect URI:</maml:para>
          <maml:para>- `WQL`: `http://schemas.microsoft.com/wbem/wsman/1/WQL`</maml:para>
          <maml:para>- `Selector`: `http://schemas.microsoft.com/wbem/wsman/1/wsman/SelectorFilter`</maml:para>
          <maml:para>- `Association`: `http://schemas.dmtf.org/wbem/wsman/1/cimbinding/associationFilter`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
        <dev:type>
          <maml:name>System.Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>http://schemas.microsoft.com/wbem/wsman/1/WQL</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="Path">
        <maml:name>FilePath</maml:name>
        <maml:description>
          <maml:para>Specifies the path of a file that is used to update a management resource. You specify the management resource by using the ResourceURI parameter and the SelectorSet parameter. For example, the following command uses the FilePath parameter:</maml:para>
          <maml:para>`Invoke-WSManAction -Action StopService -ResourceUri wmicimv2/Win32_Service -SelectorSet @{Name="spooler"} -FilePath:c:\input.xml -authentication default`</maml:para>
          <maml:para>This command calls the StopService method on the Spooler service by using input from a file. The file, `Input.xml`, contains the following content:</maml:para>
          <maml:para>`&lt;p:StopService_INPUT xmlns:p="http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_Service" /&gt;`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Fragment</maml:name>
        <maml:description>
          <maml:para>Specifies a section inside the instance that is to be updated or retrieved for the specified operation. For example, to get the status of a spooler service, specify `-Fragment Status`.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="os">
        <maml:name>OptionSet</maml:name>
        <maml:description>
          <maml:para>Passes a set of switches to a service to modify or refine the nature of the request. These are similar to switches used in command-line shells because they are service specific. Any number of options can be specified.</maml:para>
          <maml:para>The following example demonstrates the syntax that passes the values `1`, `2`, and `3` for the `a`, `b`, and `c` parameters:</maml:para>
          <maml:para>`-OptionSet @{a=1;b=2;c=3}`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Port</maml:name>
        <maml:description>
          <maml:para>Specifies the port to use when the client connects to the WinRM service. When the transport is HTTP, the default port is 80. When the transport is HTTPS, the default port is 443.</maml:para>
          <maml:para>When you use HTTPS as the transport, the value of the ComputerName parameter must match the server's certificate common name (CN). However, if the SkipCNCheck parameter is specified as part of the SessionOption parameter, then the certificate common name of the server does not have to match the host name of the server. The SkipCNCheck parameter should be used only for trusted machines.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="ruri">
        <maml:name>ResourceURI</maml:name>
        <maml:description>
          <maml:para>Contains the Uniform Resource Identifier (URI) of the resource class or instance. The URI is used to identify a specific type of resource, such as disks or processes, on a computer.</maml:para>
          <maml:para>A URI consists of a prefix and a path to a resource. For example:</maml:para>
          <maml:para>`http://schemas.microsoft.com/wbem/wsman/1/wmi/root/cimv2/Win32_LogicalDisk`</maml:para>
          <maml:para>`http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_NumericSensor`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Uri</command:parameterValue>
        <dev:type>
          <maml:name>System.Uri</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1" aliases="none">
        <maml:name>SelectorSet</maml:name>
        <maml:description>
          <maml:para>Specifies a set of value pairs that are used to select particular management resource instances. The SelectorSet parameter is used when more than one instance of the resource exists. The value of the SelectorSet parameter must be a hash table. The following example shows how to enter a value for this parameter:</maml:para>
          <maml:para>`-SelectorSet @{Name="WinRM";ID="yyy"}`</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="so">
        <maml:name>SessionOption</maml:name>
        <maml:description>
          <maml:para>Defines a set of extended options for the WS-Management session. Enter a SessionOption object that you create with the `New-WSManSessionOption` cmdlet. For more information about the options that are available, see New-WSManSessionOption (New-WSManSessionOption.md).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.SessionOption</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.WSMan.Management.SessionOption</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="ssl">
        <maml:name>UseSSL</maml:name>
        <maml:description>
          <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol should be used to establish a connection to the remote computer. By default, SSL is not used.</maml:para>
          <maml:para>WS-Management encrypts all the Windows PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If SSL is not available on the port that is used for the connection and you specify this parameter, the command fails.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none">
        <maml:name>ValueSet</maml:name>
        <maml:description>
          <maml:para>Specifies a hash table that helps modify a management resource. You specify the management resource by using the ResourceURI parameter and the SelectorSet parameter. The value of the ValueSet parameter must be a hash table.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Collections.Hashtable</command:parameterValue>
        <dev:type>
          <maml:name>System.Collections.Hashtable</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not accept any input.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not generate any output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>----- Example 1: Disable a listener on the local computer -----</maml:title>
        <dev:code>Set-WSManInstance -ResourceURI winrm/config/listener -SelectorSet @{address="*";transport="https"} -ValueSet @{Enabled="false"}

cfg                   : http://schemas.microsoft.com/wbem/wsman/1/config/listener
xsi                   : http://www.w3.org/2001/XMLSchema-instance
lang                  : en-US
Address               : *
Transport             : HTTPS
Port                  : 443
Hostname              :
Enabled               : false
URLPrefix             : wsman
CertificateThumbprint :
ListeningOn           : {127.0.0.1, 172.30.168.171, ::1, 2001:4898:0:fff:0:5efe:172.30.168.171...}</dev:code>
        <dev:remarks>
          <maml:para>This command disables the HTTPS listener on the local computer.</maml:para>
          <maml:para>&gt; [!IMPORTANT] &gt; The ValueSet parameter is case-sensitive when matching the properties specified.</maml:para>
          <maml:para>For example, in this command,</maml:para>
          <maml:para>This fails: `-ValueSet @{enabled="False"}`</maml:para>
          <maml:para>This succeeds: `-ValueSet @{Enabled="False"}`</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 2: Set the maximum envelope size on the local computer</maml:title>
        <dev:code>Set-WSManInstance -ResourceURI winrm/config -ValueSet @{MaxEnvelopeSizekb = "200"}

cfg                 : http://schemas.microsoft.com/wbem/wsman/1/config
lang                : en-US
MaxEnvelopeSizekb   : 200
MaxTimeoutms        : 60000
MaxBatchItems       : 32000
MaxProviderRequests : 4294967295
Client              : Client
Service             : Service
Winrs               : Winrs</dev:code>
        <dev:remarks>
          <maml:para>This command sets the MaxEnvelopeSizekb value to 200 on the local computer.</maml:para>
          <maml:para>&gt; [!IMPORTANT] &gt; The ValueSet parameter is case-sensitive when matching the properties specified.</maml:para>
          <maml:para>For example, using the above command.</maml:para>
          <maml:para>This fails: `-ValueSet @{MaxEnvelopeSizeKB ="200"}`</maml:para>
          <maml:para>This succeeds: `-ValueSet @{MaxEnvelopeSizekb ="200"}`</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>------ Example 3: Disable a listener on a remote computer ------</maml:title>
        <dev:code>Set-WSManInstance -ResourceURI winrm/config/listener -ComputerName SERVER02 -SelectorSet @{address="*";transport="https"} -ValueSet @{Enabled="false"}

cfg                   : http://schemas.microsoft.com/wbem/wsman/1/config/listener
xsi                   : http://www.w3.org/2001/XMLSchema-instance
lang                  : en-US
Address               : *
Transport             : HTTPS
Port                  : 443
Hostname              :
Enabled               : false
URLPrefix             : wsman
CertificateThumbprint :
ListeningOn           : {127.0.0.1, 172.30.168.172, ::1, 2001:4898:0:fff:0:5efe:172.30.168.172...}</dev:code>
        <dev:remarks>
          <maml:para>This command disables the HTTPS listener on the remote computer SERVER02.</maml:para>
          <maml:para>&gt; [!IMPORTANT] &gt; The ValueSet parameter is case-sensitive when matching the properties specified.</maml:para>
          <maml:para>For example, using the above command.</maml:para>
          <maml:para>This fails: `-ValueSet @{enabled="False"}`</maml:para>
          <maml:para>This succeeds: `-ValueSet @{Enabled="False"}`</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/microsoft.wsman.management/set-wsmaninstance?view=powershell-7.2&amp;WT.mc_id=ps-gethelp</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disconnect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Invoke-WSManAction</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManSessionOption</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManQuickConfig</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Set-WSManQuickConfig</command:name>
      <command:verb>Set</command:verb>
      <command:noun>WSManQuickConfig</command:noun>
      <maml:description>
        <maml:para>Configures the local computer for remote management.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>&gt; This cmdlet is only available on the Windows platform. The `Set-WSManQuickConfig` cmdlet configures the computer to receive PowerShell remote commands that are sent by using the Web Services for Management (WS-Management) technology.</maml:para>
      <maml:para>`Set-WSManQuickConfig` performs the following actions:</maml:para>
      <maml:para>- Checks whether the WinRM service is running. If the WinRM service isn't running, the service is   started. - Sets the WinRM service startup type to automatic.</maml:para>
      <maml:para>- Creates a listener to accept requests on any IP address. The default transport is HTTP . - Enables a firewall exception for WinRM traffic.</maml:para>
      <maml:para>To run `Set-WSManQuickConfig`, start PowerShell with the Run as Administrator option.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Set-WSManQuickConfig</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Force</maml:name>
          <maml:description>
            <maml:para>Forces the command to run without asking for user confirmation.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>SkipNetworkProfileCheck</maml:name>
          <maml:description>
            <maml:para>Configures Windows client versions for remoting when the computer is on a public network. This parameter enables a firewall rule for public networks that allows remote access only from computers in the same local subnet.</maml:para>
            <maml:para>This parameter has no effect on server versions of Windows, that by default, have a local subnet firewall rule for public networks. If the local subnet firewall rule is disabled on the server version of Windows, `Enable-PSRemoting` re-enables it, regardless of this parameter's value.</maml:para>
            <maml:para>To remove the local subnet restriction and enable remote access from all locations on public networks, use the `Set-NetFirewallRule` cmdlet in the NetSecurity module.</maml:para>
            <maml:para>This parameter was introduced in PowerShell 3.0.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UseSSL</maml:name>
          <maml:description>
            <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol is used to establish a connection to the remote computer. By default, SSL isn't used.</maml:para>
            <maml:para>WS-Management encrypts all the PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If you use this parameter and SSL isn't available on the port that's used for the connection, the command fails. HTTPS requires manual configuration of WinRM and firewall rules. For more information, see How To: Configure WINRM for HTTPS (https://support.microsoft.com/help/2019527/how-to-configure-winrm-for-https).</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Force</maml:name>
        <maml:description>
          <maml:para>Forces the command to run without asking for user confirmation.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>SkipNetworkProfileCheck</maml:name>
        <maml:description>
          <maml:para>Configures Windows client versions for remoting when the computer is on a public network. This parameter enables a firewall rule for public networks that allows remote access only from computers in the same local subnet.</maml:para>
          <maml:para>This parameter has no effect on server versions of Windows, that by default, have a local subnet firewall rule for public networks. If the local subnet firewall rule is disabled on the server version of Windows, `Enable-PSRemoting` re-enables it, regardless of this parameter's value.</maml:para>
          <maml:para>To remove the local subnet restriction and enable remote access from all locations on public networks, use the `Set-NetFirewallRule` cmdlet in the NetSecurity module.</maml:para>
          <maml:para>This parameter was introduced in PowerShell 3.0.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UseSSL</maml:name>
        <maml:description>
          <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol is used to establish a connection to the remote computer. By default, SSL isn't used.</maml:para>
          <maml:para>WS-Management encrypts all the PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If you use this parameter and SSL isn't available on the port that's used for the connection, the command fails. HTTPS requires manual configuration of WinRM and firewall rules. For more information, see How To: Configure WINRM for HTTPS (https://support.microsoft.com/help/2019527/how-to-configure-winrm-for-https).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet doesn't accept any input.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet doesn't generate any output.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para></maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>Example 1: Enable remote management of the local computer over HTTP</maml:title>
        <dev:code>Set-WSManQuickConfig</dev:code>
        <dev:remarks>
          <maml:para></maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 2: Enable remote management of the local computer over HTTPS</maml:title>
        <dev:code>Set-WSManQuickConfig -UseSSL</dev:code>
        <dev:remarks>
          <maml:para>&gt; [!NOTE] &gt; HTTPS requires manual configuration. For more information, see the UseSSL parameter's &gt; description.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/microsoft.wsman.management/set-wsmanquickconfig?view=powershell-7.2&amp;WT.mc_id=ps-gethelp</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disconnect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-PSRemoting</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>How To: Configure WINRM for HTTPS</maml:linkText>
        <maml:uri>https://support.microsoft.com/help/2019527/how-to-configure-winrm-for-https</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Invoke-WSManAction</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-PSSession</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManSessionOption</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Test-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Test-WSMan</command:name>
      <command:verb>Test</command:verb>
      <command:noun>WSMan</command:noun>
      <maml:description>
        <maml:para>Tests whether the WinRM service is running on a local or remote computer.</maml:para>
      </maml:description>
    </command:details>
    <maml:description>
      <maml:para>&gt; This cmdlet is only available on the Windows platform. The `Test-WSMan` cmdlet submits an identification request that determines whether the WinRM service is running on a local or remote computer. If the tested computer is running the service, the cmdlet displays the WS-Management identity schema, the protocol version, the product vendor, and the product version of the tested service.</maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Test-WSMan</maml:name>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="cn">
          <maml:name>ComputerName</maml:name>
          <maml:description>
            <maml:para>Specifies the computer against which to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, use localhost, or use a dot (`.`) to specify the local computer. The local computer is the default. When the remote computer is in a different domain from the user, you must use a fully qualified domain name must be used. You can pipe a value for this parameter to the cmdlet.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>ApplicationName</maml:name>
          <maml:description>
            <maml:para>Specifies the application name in the connection. The default value of the ApplicationName parameter is WSMAN. The complete identifier for the remote endpoint is in the following format:</maml:para>
            <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
            <maml:para>For example: `http://server01:8080/WSMAN`</maml:para>
            <maml:para>Internet Information Services (IIS), which hosts the session, forwards requests with this endpoint to the specified application. This default setting of WSMAN is appropriate for most uses. This parameter is designed to be used if many computers establish remote connections to one computer that is running Windows PowerShell. In this case, IIS hosts Web Services for Management (WS-Management) for efficiency.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
          <maml:name>Authentication</maml:name>
          <maml:description>
            <maml:para>Specifies the authentication mechanism to be used at the server. The acceptable values for this parameter are:</maml:para>
            <maml:para>- `Basic` - Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` - Use the authentication method implemented by the WS-Management protocol. This is the   default. - 1 - Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos` - The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate` - Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows for   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP` - Use Credential Security Support Provider (CredSSP) authentication, which lets the user   delegate credentials. This option is designed for commands that run on one remote computer but   collect data from or run additional commands on other remote computers.</maml:para>
            <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user credentials from the local computer to a remote computer. This practice &gt; increases the security risk of the remote operation. If the remote computer is compromised, when &gt; credentials are passed to it, the credentials can be used to control the network session.</maml:para>
            <maml:para>&gt; [!IMPORTANT] &gt; If you do not specify the Authentication parameter,, the `Test-WSMan` request is sent to the &gt; remote computer anonymously, without using authentication. If the request is made anonymously, it &gt; returns no information that is specific to the operating-system version. Instead, this cmdlet &gt; displays null values for the operating system version and service pack level (OS: 0.0.0 SP: 0.0).</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" command:variableLength="false">None</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Default</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Digest</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Negotiate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Basic</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Kerberos</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">ClientCertificate</command:parameterValue>
            <command:parameterValue required="false" command:variableLength="false">Credssp</command:parameterValue>
          </command:parameterValueGroup>
          <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
          <dev:type>
            <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>CertificateThumbprint</maml:name>
          <maml:description>
            <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
            <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
            <maml:para>To get a certificate thumbprint, use the Get-Item or `Get-ChildItem` command in the Windows PowerShell Cert: drive.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
          <dev:type>
            <maml:name>System.String</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
          <maml:name>Credential</maml:name>
          <maml:description>
            <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as User01, Domain01\User01, or User@Domain.com. Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, this cmdlet prompts you for a password.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
          <dev:type>
            <maml:name>System.Management.Automation.PSCredential</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>Port</maml:name>
          <maml:description>
            <maml:para>Specifies the port to use when the client connects to the WinRM service. When the transport is HTTP, the default port is 80. When the transport is HTTPS, the default port is 443.</maml:para>
            <maml:para>When you use HTTPS as the transport, the value of the ComputerName parameter must match the server's certificate common name (CN).</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
          <dev:type>
            <maml:name>System.Int32</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>None</dev:defaultValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
          <maml:name>UseSSL</maml:name>
          <maml:description>
            <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol is used to establish a connection to the remote computer. By default, SSL is not used.</maml:para>
            <maml:para>WS-Management encrypts all the Windows PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If SSL is not available on the port that is used for the connection, and you specify this parameter, the command fails.</maml:para>
          </maml:description>
          <dev:type>
            <maml:name>System.Management.Automation.SwitchParameter</maml:name>
            <maml:uri />
          </dev:type>
          <dev:defaultValue>False</dev:defaultValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>ApplicationName</maml:name>
        <maml:description>
          <maml:para>Specifies the application name in the connection. The default value of the ApplicationName parameter is WSMAN. The complete identifier for the remote endpoint is in the following format:</maml:para>
          <maml:para>`&lt;Transport&gt;://&lt;Server&gt;:&lt;Port&gt;/&lt;ApplicationName&gt;`</maml:para>
          <maml:para>For example: `http://server01:8080/WSMAN`</maml:para>
          <maml:para>Internet Information Services (IIS), which hosts the session, forwards requests with this endpoint to the specified application. This default setting of WSMAN is appropriate for most uses. This parameter is designed to be used if many computers establish remote connections to one computer that is running Windows PowerShell. In this case, IIS hosts Web Services for Management (WS-Management) for efficiency.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="auth, am">
        <maml:name>Authentication</maml:name>
        <maml:description>
          <maml:para>Specifies the authentication mechanism to be used at the server. The acceptable values for this parameter are:</maml:para>
          <maml:para>- `Basic` - Basic is a scheme in which the user name and password are sent in clear text to the   server or proxy. - `Default` - Use the authentication method implemented by the WS-Management protocol. This is the   default. - 1 - Digest is a challenge-response scheme that uses a server-specified data string for the   challenge. - `Kerberos` - The client computer and the server mutually authenticate by using Kerberos   certificates. - `Negotiate` - Negotiate is a challenge-response scheme that negotiates with the server or proxy to   determine the scheme to use for authentication. For example, this parameter value allows for   negotiation to determine whether the Kerberos protocol or NTLM is used. - `CredSSP` - Use Credential Security Support Provider (CredSSP) authentication, which lets the user   delegate credentials. This option is designed for commands that run on one remote computer but   collect data from or run additional commands on other remote computers.</maml:para>
          <maml:para>&gt; [!CAUTION] &gt; CredSSP delegates the user credentials from the local computer to a remote computer. This practice &gt; increases the security risk of the remote operation. If the remote computer is compromised, when &gt; credentials are passed to it, the credentials can be used to control the network session.</maml:para>
          <maml:para>&gt; [!IMPORTANT] &gt; If you do not specify the Authentication parameter,, the `Test-WSMan` request is sent to the &gt; remote computer anonymously, without using authentication. If the request is made anonymously, it &gt; returns no information that is specific to the operating-system version. Instead, this cmdlet &gt; displays null values for the operating system version and service pack level (OS: 0.0.0 SP: 0.0).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">Microsoft.WSMan.Management.AuthenticationMechanism</command:parameterValue>
        <dev:type>
          <maml:name>Microsoft.WSMan.Management.AuthenticationMechanism</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>CertificateThumbprint</maml:name>
        <maml:description>
          <maml:para>Specifies the digital public key certificate (X509) of a user account that has permission to perform this action. Enter the certificate thumbprint of the certificate.</maml:para>
          <maml:para>Certificates are used in client certificate-based authentication. They can be mapped only to local user accounts; they do not work with domain accounts.</maml:para>
          <maml:para>To get a certificate thumbprint, use the Get-Item or `Get-ChildItem` command in the Windows PowerShell Cert: drive.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="cn">
        <maml:name>ComputerName</maml:name>
        <maml:description>
          <maml:para>Specifies the computer against which to run the management operation. The value can be a fully qualified domain name, a NetBIOS name, or an IP address. Use the local computer name, use localhost, or use a dot (`.`) to specify the local computer. The local computer is the default. When the remote computer is in a different domain from the user, you must use a fully qualified domain name must be used. You can pipe a value for this parameter to the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="cred, c">
        <maml:name>Credential</maml:name>
        <maml:description>
          <maml:para>Specifies a user account that has permission to perform this action. The default is the current user. Type a user name, such as User01, Domain01\User01, or User@Domain.com. Or, enter a PSCredential object, such as one returned by the `Get-Credential` cmdlet. When you type a user name, this cmdlet prompts you for a password.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.PSCredential</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.PSCredential</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>Port</maml:name>
        <maml:description>
          <maml:para>Specifies the port to use when the client connects to the WinRM service. When the transport is HTTP, the default port is 80. When the transport is HTTPS, the default port is 443.</maml:para>
          <maml:para>When you use HTTPS as the transport, the value of the ComputerName parameter must match the server's certificate common name (CN).</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Int32</command:parameterValue>
        <dev:type>
          <maml:name>System.Int32</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>None</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none">
        <maml:name>UseSSL</maml:name>
        <maml:description>
          <maml:para>Specifies that the Secure Sockets Layer (SSL) protocol is used to establish a connection to the remote computer. By default, SSL is not used.</maml:para>
          <maml:para>WS-Management encrypts all the Windows PowerShell content that is transmitted over the network. The UseSSL parameter lets you specify the additional protection of HTTPS instead of HTTP. If SSL is not available on the port that is used for the connection, and you specify this parameter, the command fails.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">System.Management.Automation.SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>False</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not accept any input.</maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>None</maml:name>
        </dev:type>
        <maml:description>
          <maml:para>This cmdlet does not generate any output object.</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <maml:alertSet>
      <maml:alert>
        <maml:para>By default, the `Test-WSMan` cmdlet queries the WinRM service without using authentication, and it returns no information that is specific to the operating-system version. Instead, it displays null values for the operating system version and service pack level (OS: 0.0.0 SP: 0.0).</maml:para>
      </maml:alert>
    </maml:alertSet>
    <command:examples>
      <command:example>
        <maml:title>----- Example 1: Determine the status of the WinRM service -----</maml:title>
        <dev:code>Test-WSMan</dev:code>
        <dev:remarks>
          <maml:para>This command determines whether the WinRM service is running on the local computer or on a remote computer.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 2: Determine the status of the WinRM service on a remote computer</maml:title>
        <dev:code>Test-WSMan -ComputerName "server01"</dev:code>
        <dev:remarks>
          <maml:para>This command determines whether the WinRM service is running on the server01 computer.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 3: Determine the status of the WinRM service and the operating system version</maml:title>
        <dev:code>Test-WSMan -Authentication default</dev:code>
        <dev:remarks>
          <maml:para>This command tests to see whether the WS-Management (WinRM) service is running on the local computer by using the authentication parameter.</maml:para>
          <maml:para>Using the authentication parameter enables `Test-WSMan` to return the operating system version.</maml:para>
        </dev:remarks>
      </command:example>
      <command:example>
        <maml:title>Example 4: Determine the status of the WinRM service and the OS version on a remote computer</maml:title>
        <dev:code>Test-WSMan -ComputerName "server01" -Authentication default</dev:code>
        <dev:remarks>
          <maml:para>This command tests to see whether the WS-Management (WinRM) service is running on the computer named server01 using the authentication parameter.</maml:para>
          <maml:para>Using the authentication parameter enables `Test-WSMan` to return the operating system version.</maml:para>
        </dev:remarks>
      </command:example>
    </command:examples>
    <command:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>https://docs.microsoft.com/powershell/module/microsoft.wsman.management/test-wsman?view=powershell-7.2&amp;WT.mc_id=ps-gethelp</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Connect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Disconnect-WSMan</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Enable-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManCredSSP</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Get-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Invoke-WSManAction</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>New-WSManSessionOption</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Remove-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManInstance</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Set-WSManQuickConfig</maml:linkText>
        <maml:uri></maml:uri>
      </maml:navigationLink>
    </command:relatedLinks>
  </command:command>
</helpItems>