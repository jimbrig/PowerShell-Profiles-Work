<?xml version="1.0" encoding="utf-8"?>
<helpItems xmlns="http://msh" schema="maml">
  <!-- Updatable Help Version 5.0.0.0 -->
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Export-StartLayout</command:name>
      <maml:description>
        <maml:para>Exports the layout of the Start screen. </maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Export</command:verb>
      <command:noun>StartLayout</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>The Export-StartLayout cmdlet exports the layout of the tiles on Start of the current user. You can export layout and use Import-StartLayout as well as other management policies for the Start layout. Specify the .xml file extension in the name of the file. </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Export-StartLayout</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>Path</maml:name>
          <maml:description>
            <maml:para>Specifies an absolute path to a layout file. </maml:para>
            <maml:para>
            </maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="infa">
          <maml:name>InformationAction</maml:name>
          <maml:description>
            <maml:para>Specifies how this cmdlet responds to an information event. The acceptable values for this parameter are:

-- SilentlyContinue
-- Stop
-- Continue
-- Inquire
-- Ignore
-- Suspend
</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">SilentlyContinue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Stop</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Continue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inquire</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Ignore</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Suspend</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="iv">
          <maml:name>InformationVariable</maml:name>
          <maml:description>
            <maml:para>Specifies a variable in which to store an information event message.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Export-StartLayout</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>LiteralPath</maml:name>
          <maml:description>
            <maml:para>Specifies a literal path to a layout file. Include the file .xml file extension. This parameter does not accept the wildcard character (*). If the path includes an escape character (\), enclose the string in single quotes (').</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="infa">
          <maml:name>InformationAction</maml:name>
          <maml:description>
            <maml:para>Specifies how this cmdlet responds to an information event. The acceptable values for this parameter are:

-- SilentlyContinue
-- Stop
-- Continue
-- Inquire
-- Ignore
-- Suspend
</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">SilentlyContinue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Stop</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Continue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inquire</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Ignore</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Suspend</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="iv">
          <maml:name>InformationVariable</maml:name>
          <maml:description>
            <maml:para>Specifies a variable in which to store an information event message.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="infa">
        <maml:name>InformationAction</maml:name>
        <maml:description>
          <maml:para>Specifies how this cmdlet responds to an information event. The acceptable values for this parameter are:

-- SilentlyContinue
-- Stop
-- Continue
-- Inquire
-- Ignore
-- Suspend
</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">System.Management.Automation.ActionPreference</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.ActionPreference</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="iv">
        <maml:name>InformationVariable</maml:name>
        <maml:description>
          <maml:para>Specifies a variable in which to store an information event message.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>LiteralPath</maml:name>
        <maml:description>
          <maml:para>Specifies a literal path to a layout file. Include the file .xml file extension. This parameter does not accept the wildcard character (*). If the path includes an escape character (\), enclose the string in single quotes (').</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>Path</maml:name>
        <maml:description>
          <maml:para>Specifies an absolute path to a layout file. </maml:para>
          <maml:para>
          </maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>Enum</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>You can specify the following file format: 

-- XML. Export as an .xml file. </maml:para>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:terminatingErrors />
    <command:nonTerminatingErrors />
    <command:examples>
      <command:example>
        <maml:title>Example 1: Export the layout</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt; Export-StartLayout -Path "C:\Layouts\Marketing.xml"
</dev:code>
        <dev:remarks>
          <maml:para>This command exports the layout of the tiles on Start to a file named Marketing.xml in the C:\Layouts folder.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>http://go.microsoft.com/fwlink/?LinkID=294168</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Import-StartLayout</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Get-StartApps</command:name>
      <maml:description>
        <maml:para>Gets the names and AppIDs of installed apps. </maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Get</command:verb>
      <command:noun>StartApps</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>The Get-StartApps cmdlet gets the names and AppIDs of installed apps of the current user. An AppID is an AppUserModelID. You can specify a particular app by using its name, or you can specify a name that includes the wildcard character (*). If you do not specify a name, the cmdlet displays all installed apps. </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Get-StartApps</maml:name>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
          <maml:name>Name</maml:name>
          <maml:description>
            <maml:para>Specifies the name of an app. You can use the wildcard character. If you do not specify this parameter, the cmdlet gets all the apps.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="none">
        <maml:name>Name</maml:name>
        <maml:description>
          <maml:para>Specifies the name of an app. You can use the wildcard character. If you do not specify this parameter, the cmdlet gets all the apps.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
        <dev:type>
          <maml:name>Object</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>PSObject</maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
          <maml:para>A PSObject that contains the name and AppID for each app found in the Start screen for the user, as in this output example: </maml:para>
          <maml:para>Output Example: 

Name AppID
---- -----

A. Datum Pro Center Datum.ProCenter
Proseware Studio Proseware.Studio.5
A. Datum 2010 prog..tion_0000000000000000_ebec13db489e8ef9
Fabrikam Initializer Fabrikam.Initializer.1
A. Datum Connector Contoso.Datum.Connector
Proseware Design Pro Proseware.Design.3</maml:para>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:terminatingErrors />
    <command:nonTerminatingErrors />
    <command:examples>
      <command:example>
        <maml:title>Example 1: Get all apps</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt; Get-StartApps
Name AppID
---- -----

A. Datum Pro Center Datum.ProCenter
Proseware Studio Proseware.Studio.5
A. Datum 2010 prog..tion_0000000000000000_ebec13db489e8ef9
Fabrikam Initializer Fabrikam.Initializer.1
A. Datum Connector Contoso.Datum.Connector
Proseware Design Pro Proseware.Design.3
</dev:code>
        <dev:remarks>
          <maml:para>This command gets all the names and IDs of installed apps for the current user.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>http://go.microsoft.com/fwlink/?LinkID=294166</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Export-StartLayout</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Import-StartLayout</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Start Layout Cmdlets</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
  <command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
    <command:details>
      <command:name>Import-StartLayout</command:name>
      <maml:description>
        <maml:para>Imports the layout of the Start into a mounted Windows image.</maml:para>
      </maml:description>
      <maml:copyright>
        <maml:para />
      </maml:copyright>
      <command:verb>Import</command:verb>
      <command:noun>StartLayout</command:noun>
      <dev:version />
    </command:details>
    <maml:description>
      <maml:para>The Import-StartLayout cmdlet imports the specified layout of Start into a mounted Windows image. When you import a layout, it replaces the existing layout of Start. Before you use this cmdlet, mount the Windows image file to import the layout into. </maml:para>
      <maml:para>You must have administrator rights to import a layout.</maml:para>
      <maml:para>The Export-StartLayout cmdlet exports layouts as .xml files, and the Import-StartLayout cmdlet imports only .xml files. </maml:para>
    </maml:description>
    <command:syntax>
      <command:syntaxItem>
        <maml:name>Import-StartLayout</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>LayoutPath</maml:name>
          <maml:description>
            <maml:para>Specifies a path to a layout file.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>MountPath</maml:name>
          <maml:description>
            <maml:para>Specifies the path where you mounted the .wim file and specifies the local appdata folder for the default user.</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="infa">
          <maml:name>InformationAction</maml:name>
          <maml:description>
            <maml:para>Specifies how this cmdlet responds to an information event. The acceptable values for this parameter are:

-- SilentlyContinue
-- Stop
-- Continue
-- Inquire
-- Ignore
-- Suspend
</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">SilentlyContinue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Stop</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Continue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inquire</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Ignore</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Suspend</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="iv">
          <maml:name>InformationVariable</maml:name>
          <maml:description>
            <maml:para>Specifies a variable in which to store an information event message.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
      <command:syntaxItem>
        <maml:name>Import-StartLayout</maml:name>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
          <maml:name>LayoutLiteralPath</maml:name>
          <maml:description>
            <maml:para>Specifies a literal path to a layout file. This parameter does not accept the wildcard character (*). If the path includes an escape character (\), enclose the string in single quotes (').</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
          <maml:name>MountLiteralPath</maml:name>
          <maml:description>
            <maml:para>Specifies the literal path where you mounted the .wim file. This parameter does not accept the wildcard character (*). If the path includes an escape character (\), enclose the string in single quotes (').</maml:para>
          </maml:description>
          <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="infa">
          <maml:name>InformationAction</maml:name>
          <maml:description>
            <maml:para>Specifies how this cmdlet responds to an information event. The acceptable values for this parameter are:

-- SilentlyContinue
-- Stop
-- Continue
-- Inquire
-- Ignore
-- Suspend
</maml:para>
          </maml:description>
          <command:parameterValueGroup>
            <command:parameterValue required="false" variableLength="false">SilentlyContinue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Stop</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Continue</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Inquire</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Ignore</command:parameterValue>
            <command:parameterValue required="false" variableLength="false">Suspend</command:parameterValue>
          </command:parameterValueGroup>
        </command:parameter>
        <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="iv">
          <maml:name>InformationVariable</maml:name>
          <maml:description>
            <maml:para>Specifies a variable in which to store an information event message.</maml:para>
          </maml:description>
          <command:parameterValue required="false" variableLength="false">System.String</command:parameterValue>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>Confirm</maml:name>
          <maml:description>
            <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
          </maml:description>
        </command:parameter>
        <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
          <maml:name>WhatIf</maml:name>
          <maml:description>
            <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
          </maml:description>
        </command:parameter>
      </command:syntaxItem>
    </command:syntax>
    <command:parameters>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="infa">
        <maml:name>InformationAction</maml:name>
        <maml:description>
          <maml:para>Specifies how this cmdlet responds to an information event. The acceptable values for this parameter are:

-- SilentlyContinue
-- Stop
-- Continue
-- Inquire
-- Ignore
-- Suspend
</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">System.Management.Automation.ActionPreference</command:parameterValue>
        <dev:type>
          <maml:name>System.Management.Automation.ActionPreference</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="iv">
        <maml:name>InformationVariable</maml:name>
        <maml:description>
          <maml:para>Specifies a variable in which to store an information event message.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">System.String</command:parameterValue>
        <dev:type>
          <maml:name>System.String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>LayoutLiteralPath</maml:name>
        <maml:description>
          <maml:para>Specifies a literal path to a layout file. This parameter does not accept the wildcard character (*). If the path includes an escape character (\), enclose the string in single quotes (').</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="none">
        <maml:name>LayoutPath</maml:name>
        <maml:description>
          <maml:para>Specifies a path to a layout file.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
        <maml:name>MountLiteralPath</maml:name>
        <maml:description>
          <maml:para>Specifies the literal path where you mounted the .wim file. This parameter does not accept the wildcard character (*). If the path includes an escape character (\), enclose the string in single quotes (').</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="none">
        <maml:name>MountPath</maml:name>
        <maml:description>
          <maml:para>Specifies the path where you mounted the .wim file and specifies the local appdata folder for the default user.</maml:para>
        </maml:description>
        <command:parameterValue required="true" variableLength="false">String</command:parameterValue>
        <dev:type>
          <maml:name>String</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>none</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>Confirm</maml:name>
        <maml:description>
          <maml:para>Prompts you for confirmation before running the cmdlet.Prompts you for confirmation before running the cmdlet.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
      <command:parameter required="false" variableLength="true" globbing="false" pipelineInput="false" position="named">
        <maml:name>WhatIf</maml:name>
        <maml:description>
          <maml:para>Shows what would happen if the cmdlet runs. The cmdlet is not run.Shows what would happen if the cmdlet runs. The cmdlet is not run.</maml:para>
        </maml:description>
        <command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
        <dev:type>
          <maml:name>SwitchParameter</maml:name>
          <maml:uri />
        </dev:type>
        <dev:defaultValue>false</dev:defaultValue>
      </command:parameter>
    </command:parameters>
    <command:inputTypes>
      <command:inputType>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
        </maml:description>
      </command:inputType>
    </command:inputTypes>
    <command:returnValues>
      <command:returnValue>
        <dev:type>
          <maml:name>
          </maml:name>
          <maml:uri>
          </maml:uri>
          <maml:description>
            <maml:para />
          </maml:description>
        </dev:type>
        <maml:description>
        </maml:description>
      </command:returnValue>
    </command:returnValues>
    <command:terminatingErrors />
    <command:nonTerminatingErrors />
    <command:examples>
      <command:example>
        <maml:title>Example 1: Import a layout into a Windows image</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt; Import-StartLayout -LayoutPath "Layout.xml" -MountPath "E:\MountedImage\"
</dev:code>
        <dev:remarks>
          <maml:para>This command imports a layout of the Start screen into a Windows image.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
      <command:example>
        <maml:title>Example 2: Validate the layout file and Windows image</maml:title>
        <maml:introduction>
          <maml:para>
          </maml:para>
        </maml:introduction>
        <dev:code>PS C:\&gt; Import-StartLayout -LayoutPath "Layout.xml" -MountPath " E:\MountedImage\" -WhatIf
</dev:code>
        <dev:remarks>
          <maml:para>This command validates the layout file and the Windows image by using the WhatIf parameter. Besides that parameter, the command is the same as the previous example, but this command makes no changes.</maml:para>
          <maml:para />
          <maml:para />
        </dev:remarks>
        <command:commandLines>
          <command:commandLine>
            <command:commandText />
          </command:commandLine>
        </command:commandLines>
      </command:example>
    </command:examples>
    <maml:relatedLinks>
      <maml:navigationLink>
        <maml:linkText>Online Version:</maml:linkText>
        <maml:uri>http://go.microsoft.com/fwlink/?LinkID=294167</maml:uri>
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Export-StartLayout</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
      <maml:navigationLink>
        <maml:linkText>Start Layout Cmdlets</maml:linkText>
        <maml:uri />
      </maml:navigationLink>
    </maml:relatedLinks>
  </command:command>
</helpItems>
